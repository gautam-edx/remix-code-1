{
	"id": "66c0cab0d051b996b7d58b3026b940ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/preSale.sol": {
				"content": "// SPDX-License-Identifier: MIT\n//gautam\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Presale is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeERC20 for IERC20Metadata;\n\n    uint256 public rate; // Single uint value for rate\n    address public saleToken;\n    uint public saleTokenDec;\n    uint256 public totalTokensforSale;\n    uint256 public maxBuyLimit;\n    uint256 public minBuyLimit;\n    mapping(address => bool) public tokenWL;\n    mapping(address => uint256) public tokenPrices; // Single uint value for token price\n\n    uint256 public presaleStartTime;\n    uint256 public presaleEndTime;\n\n    uint256 public totalTokensSold;\n\n    event TokenAdded(address token, uint256 price);\n    event TokenUpdated(address token, uint256 price);\n    event TokensBought(\n        address indexed buyer,\n        address indexed token,\n        uint256 amount,\n        uint256 tokensBought\n    );\n    event SaleTokenAdded(address token, uint256 amount);\n\n    constructor() {}\n\n    modifier isPresaleHasNotStarted() {\n        require(\n            presaleStartTime != 0,\n            \"Presale: Presale has not started yet\"\n        );\n        _;\n    }\n\n    modifier isPresaleStarted() {\n        require(\n            block.timestamp >= presaleStartTime,\n            \"Presale: Presale has not started yet\"\n        );\n        _;\n    }\n\n    modifier isPresaleNotEnded() {\n        require(\n            block.timestamp < presaleEndTime,\n            \"Presale: Presale has ended\"\n        );\n        _;\n    }\n\n    modifier isPresaleEnded() {\n        require(\n            block.timestamp >= presaleEndTime,\n            \"Presale: Presale has not ended yet\"\n        );\n        _;\n    }\n\n    function setSaleTokenParams(\n        address _saleToken,\n        uint256 _totalTokensforSale\n    ) external onlyOwner {\n        require(\n            _saleToken != address(0),\n            \"Presale: Sale token cannot be zero address\"\n        );\n        require(\n            _totalTokensforSale > 0,\n            \"Presale: Total tokens for sale cannot be zero\"\n        );\n        saleToken = _saleToken;\n        saleTokenDec = IERC20Metadata(saleToken).decimals();\n\n        IERC20(saleToken).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _totalTokensforSale\n        );\n        totalTokensforSale = IERC20(saleToken).balanceOf(address(this));\n        emit SaleTokenAdded(_saleToken, _totalTokensforSale);\n    }\n\n    function startAndSetPresaleEndTime(\n        uint256 _presaleEndTime\n    ) external onlyOwner {\n        presaleStartTime = block.timestamp;\n        presaleEndTime = presaleStartTime + _presaleEndTime;\n    }\n\n    function upateTime(\n        uint256 _presaleEndTime\n    ) external onlyOwner {\n        presaleEndTime = block.timestamp + _presaleEndTime;\n    }\n\n    function addWhiteListedToken(\n        address _token,\n        uint256 _price\n    ) external onlyOwner {\n        tokenWL[_token] = true;\n        tokenPrices[_token] = _price;\n        emit TokenAdded(_token, _price);\n    }\n\n    function updateEthRate(uint256 _rate) external onlyOwner {\n        rate = _rate;\n    }\n\n    function updateTokenRate(\n        address _token,\n        uint256 _price\n    ) external onlyOwner {\n        require(tokenWL[_token], \"Presale: Token not whitelisted\");\n        tokenPrices[_token] = _price;\n        emit TokenUpdated(_token, _price);\n    }\n\n\n\n    function getTokenAmount(\n        address token,\n        uint256 amount\n    ) public view returns (uint256) {\n        uint256 amtOut;\n        if (token != address(0)) {\n            require(tokenWL[token], \"Presale: Token not whitelisted\");\n\n            amtOut = tokenPrices[token] != 0\n                ? (amount * (10 ** saleTokenDec)) / (tokenPrices[token])\n                : 0;\n        } else {\n            amtOut = rate != 0\n                ? (amount * (10 ** saleTokenDec)) / (rate)\n                : 0;\n        }\n        return amtOut;\n    }\n\n    function buyToken(\n        address _token,\n        uint256 _amount\n    ) external payable isPresaleStarted isPresaleNotEnded {\n\n        uint256 saleTokenAmt = _token != address(0)\n            ? getTokenAmount(_token, _amount)\n            : getTokenAmount(address(0), msg.value);\n\n        require(\n            (totalTokensSold + saleTokenAmt) <= totalTokensforSale,\n            \"Presale: Total Token Sale Reached!\"\n        );\n\n        if (_token == address(0)) {\n            require(saleTokenAmt >= minBuyLimit, \"Presale: Token amount below min buy limit\");\n            IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt);\n        } else {\n            require(saleTokenAmt >= minBuyLimit, \"Presale: Amount below min buy limit\");\n            require(tokenWL[_token], \"Presale: Token not whitelisted\");\n            IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n            IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt);\n        }\n        totalTokensSold += saleTokenAmt;\n        emit TokensBought(msg.sender, _token, _amount, saleTokenAmt);\n    }\n\n    function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {\n        minBuyLimit = _minBuyLimit;\n    }\n\n    function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {\n        maxBuyLimit = _maxBuyLimit;\n    }\n\n    // Withdraw sale tokens to the owner's address\n    function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {\n        IERC20(saleToken).safeTransfer(msg.sender, _amount);\n    }\n\n    // Withdraw all available sale tokens to the owner's address\n    function withdrawAllSaleToken() external onlyOwner isPresaleEnded {\n        uint256 amt = IERC20(saleToken).balanceOf(address(this));\n        IERC20(saleToken).safeTransfer(msg.sender, amt);\n    }\n\n    function fetchDataForFrontend(address _usdtAddress) view external returns(uint,uint,uint,uint){\n        //native rate, usdt rate,tokenSold, end sale time\n        return (rate,tokenPrices[_usdtAddress],totalTokensSold,presaleEndTime);\n\n    }\n\n    // Withdraw specific ERC20 tokens to the owner's address\n    function withdraw(address token, uint256 amt) public   onlyOwner {\n        require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\");\n        IERC20(token).safeTransfer(msg.sender, amt);\n    }\n\n     function withdrawAll(address token) external onlyOwner {\n        require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\");\n        uint256 amt = IERC20(token).balanceOf(address(this));\n        withdraw(token, amt);\n    }\n\n    // Withdraw ETH to the owner's address\n    function withdrawCurrency(uint256 amt) external onlyOwner {\n        payable(msg.sender).transfer(amt);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/preSale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SaleTokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensBought",
									"type": "uint256"
								}
							],
							"name": "TokensBought",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addWhiteListedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtAddress",
									"type": "address"
								}
							],
							"name": "fetchDataForFrontend",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBuyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBuyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTokenDec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxBuyLimit",
									"type": "uint256"
								}
							],
							"name": "setMaxBuyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minBuyLimit",
									"type": "uint256"
								}
							],
							"name": "setMinBuyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_totalTokensforSale",
									"type": "uint256"
								}
							],
							"name": "setSaleTokenParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_presaleEndTime",
									"type": "uint256"
								}
							],
							"name": "startAndSetPresaleEndTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenWL",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensforSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_presaleEndTime",
									"type": "uint256"
								}
							],
							"name": "upateTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "updateEthRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "updateTokenRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllSaleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawSaleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/preSale.sol\":262:6889  contract Presale is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/preSale.sol\":1142:1158  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/preSale.sol\":262:6889  contract Presale is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/preSale.sol\":262:6889  contract Presale is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/preSale.sol\":262:6889  contract Presale is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xace1741c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfa09e630\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfb00f3fc\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0xace1741c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb81df742\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xded441c2\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe985e367\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x8ce0b9d2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8ce0b9d2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x99b77032\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa82524b2\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x757765f8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x89e6ce1e\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x3f6f7ed6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x68f8fc10\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6aa5b37f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6bcedf9c\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x3f6f7ed6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x444ad5ee\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5a2696ca\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5b10bd6a\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x226ac321\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x226ac321\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x249b7c19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c00a36c\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x0fabdd44\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x115ece4c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x204120bc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":632:678  mapping(address => uint256) public tokenPrices */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/preSale.sol\":759:788  uint256 public presaleEndTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":369:388  uint256 public rate */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":6779:6887  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/preSale.sol\":5882:6122  function fetchDataForFrontend(address _usdtAddress) view external returns(uint,uint,uint,uint){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/preSale.sol\":795:825  uint256 public totalTokensSold */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n    tag_14:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/preSale.sol\":523:549  uint256 public maxBuyLimit */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":484:517  uint256 public totalTokensforSale */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/preSale.sol\":587:626  mapping(address => bool) public tokenWL */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/preSale.sol\":722:753  uint256 public presaleStartTime */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":454:478  uint public saleTokenDec */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":555:581  uint256 public minBuyLimit */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"contracts/preSale.sol\":424:448  address public saleToken */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/preSale.sol\":6189:6440  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"contracts/preSale.sol\":6447:6730  function withdrawAll(address token) external onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      stop\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      stop\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/preSale.sol\":2937:2952  _presaleEndTime */\n      dup1\n        /* \"contracts/preSale.sol\":2919:2934  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":2919:2952  block.timestamp + _presaleEndTime */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/preSale.sol\":2902:2916  presaleEndTime */\n      0x0a\n        /* \"contracts/preSale.sol\":2902:2952  presaleEndTime = block.timestamp + _presaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n    tag_48:\n        /* \"contracts/preSale.sol\":3643:3650  uint256 */\n      0x00\n        /* \"contracts/preSale.sol\":3662:3676  uint256 amtOut */\n      dup1\n        /* \"contracts/preSale.sol\":3707:3708  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3690:3709  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":3690:3695  token */\n      dup5\n        /* \"contracts/preSale.sol\":3690:3709  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n      tag_174\n      jumpi\n        /* \"contracts/preSale.sol\":3733:3740  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3733:3747  tokenWL[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3741:3746  token */\n      dup6\n        /* \"contracts/preSale.sol\":3733:3747  tokenWL[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":3725:3782  require(tokenWL[token], \"Presale: Token not whitelisted\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/preSale.sol\":3828:3829  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3806:3817  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3806:3824  tokenPrices[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3818:3823  token */\n      dup7\n        /* \"contracts/preSale.sol\":3806:3824  tokenPrices[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/preSale.sol\":3806:3829  tokenPrices[token] != 0 */\n      sub\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n      tag_178\n      jumpi\n        /* \"contracts/preSale.sol\":3921:3922  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n      jump(tag_179)\n    tag_178:\n        /* \"contracts/preSale.sol\":3883:3894  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3883:3901  tokenPrices[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3895:3900  token */\n      dup6\n        /* \"contracts/preSale.sol\":3883:3901  tokenPrices[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/preSale.sol\":3865:3877  saleTokenDec */\n      sload(0x03)\n        /* \"contracts/preSale.sol\":3859:3861  10 */\n      0x0a\n        /* \"contracts/preSale.sol\":3859:3877  10 ** saleTokenDec */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/preSale.sol\":3849:3855  amount */\n      dup5\n        /* \"contracts/preSale.sol\":3849:3878  amount * (10 ** saleTokenDec) */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/preSale.sol\":3848:3902  (amount * (10 ** saleTokenDec)) / (tokenPrices[token]) */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n    tag_179:\n        /* \"contracts/preSale.sol\":3797:3922  amtOut = tokenPrices[token] != 0... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n      jump(tag_186)\n    tag_174:\n        /* \"contracts/preSale.sol\":3970:3971  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3962:3966  rate */\n      sload(0x01)\n        /* \"contracts/preSale.sol\":3962:3971  rate != 0 */\n      sub\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n      tag_187\n      jumpi\n        /* \"contracts/preSale.sol\":4049:4050  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n      jump(tag_188)\n    tag_187:\n        /* \"contracts/preSale.sol\":4025:4029  rate */\n      sload(0x01)\n        /* \"contracts/preSale.sol\":4007:4019  saleTokenDec */\n      sload(0x03)\n        /* \"contracts/preSale.sol\":4001:4003  10 */\n      0x0a\n        /* \"contracts/preSale.sol\":4001:4019  10 ** saleTokenDec */\n      tag_189\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_189:\n        /* \"contracts/preSale.sol\":3991:3997  amount */\n      dup5\n        /* \"contracts/preSale.sol\":3991:4020  amount * (10 ** saleTokenDec) */\n      tag_190\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_190:\n        /* \"contracts/preSale.sol\":3990:4030  (amount * (10 ** saleTokenDec)) / (rate) */\n      tag_191\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_191:\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n    tag_188:\n        /* \"contracts/preSale.sol\":3953:4050  amtOut = rate != 0... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n    tag_186:\n        /* \"contracts/preSale.sol\":4077:4083  amtOut */\n      dup1\n        /* \"contracts/preSale.sol\":4070:4083  return amtOut */\n      swap2\n      pop\n      pop\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":632:678  mapping(address => uint256) public tokenPrices */\n    tag_55:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/preSale.sol\":3399:3406  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3399:3414  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3407:3413  _token */\n      dup4\n        /* \"contracts/preSale.sol\":3399:3414  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":3391:3449  require(tokenWL[_token], \"Presale: Token not whitelisted\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_177\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/preSale.sol\":3481:3487  _price */\n      dup1\n        /* \"contracts/preSale.sol\":3459:3470  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3459:3478  tokenPrices[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3471:3477  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3459:3478  tokenPrices[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/preSale.sol\":3459:3487  tokenPrices[_token] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3502:3530  TokenUpdated(_token, _price) */\n      0xc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a\n        /* \"contracts/preSale.sol\":3515:3521  _token */\n      dup3\n        /* \"contracts/preSale.sol\":3523:3529  _price */\n      dup3\n        /* \"contracts/preSale.sol\":3502:3530  TokenUpdated(_token, _price) */\n      mload(0x40)\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":759:788  uint256 public presaleEndTime */\n    tag_63:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":369:388  uint256 public rate */\n    tag_67:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":6779:6887  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/preSale.sol\":6855:6865  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":6847:6875  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6847:6880  payable(msg.sender).transfer(amt) */\n      0x08fc\n        /* \"contracts/preSale.sol\":6876:6879  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6847:6880  payable(msg.sender).transfer(amt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n        /* \"contracts/preSale.sol\":6779:6887  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/preSale.sol\":3265:3270  _rate */\n      dup1\n        /* \"contracts/preSale.sol\":3258:3262  rate */\n      0x01\n        /* \"contracts/preSale.sol\":3258:3270  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/preSale.sol\":3095:3099  true */\n      0x01\n        /* \"contracts/preSale.sol\":3077:3084  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3077:3092  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3085:3091  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3077:3092  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/preSale.sol\":3077:3099  tokenWL[_token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3131:3137  _price */\n      dup1\n        /* \"contracts/preSale.sol\":3109:3120  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3109:3128  tokenPrices[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3121:3127  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3109:3128  tokenPrices[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/preSale.sol\":3109:3137  tokenPrices[_token] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3152:3178  TokenAdded(_token, _price) */\n      0xf4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c\n        /* \"contracts/preSale.sol\":3163:3169  _token */\n      dup3\n        /* \"contracts/preSale.sol\":3171:3177  _price */\n      dup3\n        /* \"contracts/preSale.sol\":3152:3178  TokenAdded(_token, _price) */\n      mload(0x40)\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":5882:6122  function fetchDataForFrontend(address _usdtAddress) view external returns(uint,uint,uint,uint){... */\n    tag_84:\n        /* \"contracts/preSale.sol\":5956:5960  uint */\n      0x00\n        /* \"contracts/preSale.sol\":5961:5965  uint */\n      dup1\n        /* \"contracts/preSale.sol\":5966:5970  uint */\n      0x00\n        /* \"contracts/preSale.sol\":5971:5975  uint */\n      dup1\n        /* \"contracts/preSale.sol\":6052:6056  rate */\n      sload(0x01)\n        /* \"contracts/preSale.sol\":6057:6068  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":6057:6082  tokenPrices[_usdtAddress] */\n      0x00\n        /* \"contracts/preSale.sol\":6069:6081  _usdtAddress */\n      dup8\n        /* \"contracts/preSale.sol\":6057:6082  tokenPrices[_usdtAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/preSale.sol\":6083:6098  totalTokensSold */\n      sload(0x0b)\n        /* \"contracts/preSale.sol\":6099:6113  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":6044:6114  return (rate,tokenPrices[_usdtAddress],totalTokensSold,presaleEndTime) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/preSale.sol\":5882:6122  function fetchDataForFrontend(address _usdtAddress) view external returns(uint,uint,uint,uint){... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/preSale.sol\":2726:2741  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":2707:2723  presaleStartTime */\n      0x09\n        /* \"contracts/preSale.sol\":2707:2741  presaleStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2787:2802  _presaleEndTime */\n      dup1\n        /* \"contracts/preSale.sol\":2768:2784  presaleStartTime */\n      sload(0x09)\n        /* \"contracts/preSale.sol\":2768:2802  presaleStartTime + _presaleEndTime */\n      tag_215\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_215:\n        /* \"contracts/preSale.sol\":2751:2765  presaleEndTime */\n      0x0a\n        /* \"contracts/preSale.sol\":2751:2802  presaleEndTime = presaleStartTime + _presaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":795:825  uint256 public totalTokensSold */\n    tag_93:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n    tag_97:\n        /* \"contracts/preSale.sol\":1414:1430  presaleStartTime */\n      sload(0x09)\n        /* \"contracts/preSale.sol\":1395:1410  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1395:1430  block.timestamp >= presaleStartTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1374:1492  require(... */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/preSale.sol\":1594:1608  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1576:1591  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1576:1608  block.timestamp < presaleEndTime */\n      lt\n        /* \"contracts/preSale.sol\":1555:1660  require(... */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/preSale.sol\":4232:4252  uint256 saleTokenAmt */\n      0x00\n        /* \"contracts/preSale.sol\":4273:4274  0 */\n      dup1\n        /* \"contracts/preSale.sol\":4255:4275  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4255:4261  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4255:4275  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n      tag_225\n      jumpi\n        /* \"contracts/preSale.sol\":4336:4373  getTokenAmount(address(0), msg.value) */\n      tag_226\n        /* \"contracts/preSale.sol\":4359:4360  0 */\n      0x00\n        /* \"contracts/preSale.sol\":4363:4372  msg.value */\n      callvalue\n        /* \"contracts/preSale.sol\":4336:4350  getTokenAmount */\n      tag_48\n        /* \"contracts/preSale.sol\":4336:4373  getTokenAmount(address(0), msg.value) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n      jump(tag_227)\n    tag_225:\n        /* \"contracts/preSale.sol\":4290:4321  getTokenAmount(_token, _amount) */\n      tag_228\n        /* \"contracts/preSale.sol\":4305:4311  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4313:4320  _amount */\n      dup4\n        /* \"contracts/preSale.sol\":4290:4304  getTokenAmount */\n      tag_48\n        /* \"contracts/preSale.sol\":4290:4321  getTokenAmount(_token, _amount) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n    tag_227:\n        /* \"contracts/preSale.sol\":4232:4373  uint256 saleTokenAmt = _token != address(0)... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":4441:4459  totalTokensforSale */\n      sload(0x04)\n        /* \"contracts/preSale.sol\":4424:4436  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4406:4421  totalTokensSold */\n      sload(0x0b)\n        /* \"contracts/preSale.sol\":4406:4436  totalTokensSold + saleTokenAmt */\n      tag_229\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_229:\n        /* \"contracts/preSale.sol\":4405:4459  (totalTokensSold + saleTokenAmt) <= totalTokensforSale */\n      gt\n      iszero\n        /* \"contracts/preSale.sol\":4384:4519  require(... */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/preSale.sol\":4552:4553  0 */\n      0x00\n        /* \"contracts/preSale.sol\":4534:4554  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4534:4540  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4534:4554  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"contracts/preSale.sol\":4594:4605  minBuyLimit */\n      sload(0x06)\n        /* \"contracts/preSale.sol\":4578:4590  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4578:4605  saleTokenAmt >= minBuyLimit */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":4570:4651  require(saleTokenAmt >= minBuyLimit, \"Presale: Token amount below min buy limit\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/preSale.sol\":4665:4721  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      tag_237\n        /* \"contracts/preSale.sol\":4696:4706  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":4708:4720  saleTokenAmt */\n      dup3\n        /* \"contracts/preSale.sol\":4672:4681  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4665:4695  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":4665:4721  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n      jump(tag_239)\n    tag_233:\n        /* \"contracts/preSale.sol\":4776:4787  minBuyLimit */\n      sload(0x06)\n        /* \"contracts/preSale.sol\":4760:4772  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4760:4787  saleTokenAmt >= minBuyLimit */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":4752:4827  require(saleTokenAmt >= minBuyLimit, \"Presale: Amount below min buy limit\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"contracts/preSale.sol\":4849:4856  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":4849:4864  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":4857:4863  _token */\n      dup5\n        /* \"contracts/preSale.sol\":4849:4864  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":4841:4899  require(tokenWL[_token], \"Presale: Token not whitelisted\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_177\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"contracts/preSale.sol\":4913:4980  IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_245\n        /* \"contracts/preSale.sol\":4945:4955  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":4965:4969  this */\n      address\n        /* \"contracts/preSale.sol\":4972:4979  _amount */\n      dup5\n        /* \"contracts/preSale.sol\":4920:4926  _token */\n      dup7\n        /* \"contracts/preSale.sol\":4913:4944  IERC20(_token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_246\n      swap1\n        /* \"contracts/preSale.sol\":4913:4980  IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/preSale.sol\":4994:5050  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      tag_247\n        /* \"contracts/preSale.sol\":5025:5035  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5037:5049  saleTokenAmt */\n      dup3\n        /* \"contracts/preSale.sol\":5001:5010  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4994:5024  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":4994:5050  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n    tag_239:\n        /* \"contracts/preSale.sol\":5089:5101  saleTokenAmt */\n      dup1\n        /* \"contracts/preSale.sol\":5070:5085  totalTokensSold */\n      0x0b\n      0x00\n        /* \"contracts/preSale.sol\":5070:5101  totalTokensSold += saleTokenAmt */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_248:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5141:5147  _token */\n      dup3\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5129:5139  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c\n        /* \"contracts/preSale.sol\":5149:5156  _amount */\n      dup5\n        /* \"contracts/preSale.sol\":5158:5170  saleTokenAmt */\n      dup5\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      mload(0x40)\n      tag_249\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/preSale.sol\":4221:5178  {... */\n      pop\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":523:549  uint256 public maxBuyLimit */\n    tag_100:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":484:517  uint256 public totalTokensforSale */\n    tag_104:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/preSale.sol\":5387:5399  _maxBuyLimit */\n      dup1\n        /* \"contracts/preSale.sol\":5373:5384  maxBuyLimit */\n      0x05\n        /* \"contracts/preSale.sol\":5373:5399  maxBuyLimit = _maxBuyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_260:\n        /* \"contracts/preSale.sol\":2029:2030  0 */\n      0x00\n        /* \"contracts/preSale.sol\":2007:2031  _saleToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2007:2017  _saleToken */\n      dup3\n        /* \"contracts/preSale.sol\":2007:2031  _saleToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":1986:2099  require(... */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/preSale.sol\":2152:2153  0 */\n      0x00\n        /* \"contracts/preSale.sol\":2130:2149  _totalTokensforSale */\n      dup2\n        /* \"contracts/preSale.sol\":2130:2153  _totalTokensforSale > 0 */\n      gt\n        /* \"contracts/preSale.sol\":2109:2224  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/preSale.sol\":2246:2256  _saleToken */\n      dup2\n        /* \"contracts/preSale.sol\":2234:2243  saleToken */\n      0x02\n      0x00\n        /* \"contracts/preSale.sol\":2234:2256  saleToken = _saleToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2296:2305  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2281:2315  IERC20Metadata(saleToken).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/preSale.sol\":2281:2317  IERC20Metadata(saleToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"contracts/preSale.sol\":2266:2317  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      0xff\n      and\n        /* \"contracts/preSale.sol\":2266:2278  saleTokenDec */\n      0x03\n        /* \"contracts/preSale.sol\":2266:2317  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2328:2456  IERC20(saleToken).safeTransferFrom(... */\n      tag_272\n        /* \"contracts/preSale.sol\":2376:2386  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":2408:2412  this */\n      address\n        /* \"contracts/preSale.sol\":2427:2446  _totalTokensforSale */\n      dup4\n        /* \"contracts/preSale.sol\":2335:2344  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2328:2362  IERC20(saleToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_246\n      swap1\n        /* \"contracts/preSale.sol\":2328:2456  IERC20(saleToken).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/preSale.sol\":2494:2503  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2487:2514  IERC20(saleToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":2523:2527  this */\n      address\n        /* \"contracts/preSale.sol\":2487:2529  IERC20(saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"contracts/preSale.sol\":2466:2484  totalTokensforSale */\n      0x04\n        /* \"contracts/preSale.sol\":2466:2529  totalTokensforSale = IERC20(saleToken).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2544:2591  SaleTokenAdded(_saleToken, _totalTokensforSale) */\n      0x03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a\n        /* \"contracts/preSale.sol\":2559:2569  _saleToken */\n      dup3\n        /* \"contracts/preSale.sol\":2571:2590  _totalTokensforSale */\n      dup3\n        /* \"contracts/preSale.sol\":2544:2591  SaleTokenAdded(_saleToken, _totalTokensforSale) */\n      mload(0x40)\n      tag_278\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":587:626  mapping(address => bool) public tokenWL */\n    tag_120:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"contracts/preSale.sol\":5273:5285  _minBuyLimit */\n      dup1\n        /* \"contracts/preSale.sol\":5259:5270  minBuyLimit */\n      0x06\n        /* \"contracts/preSale.sol\":5259:5285  minBuyLimit = _minBuyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":722:753  uint256 public presaleStartTime */\n    tag_134:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":454:478  uint public saleTokenDec */\n    tag_138:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":555:581  uint256 public minBuyLimit */\n    tag_142:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/preSale.sol\":1760:1774  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1741:1756  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1741:1774  block.timestamp >= presaleEndTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1720:1834  require(... */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/preSale.sol\":5551:5602  IERC20(saleToken).safeTransfer(msg.sender, _amount) */\n      tag_290\n        /* \"contracts/preSale.sol\":5582:5592  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5594:5601  _amount */\n      dup3\n        /* \"contracts/preSale.sol\":5558:5567  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5551:5581  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":5551:5602  IERC20(saleToken).safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":424:448  address public saleToken */\n    tag_150:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":6189:6440  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_299:\n        /* \"contracts/preSale.sol\":6281:6290  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6272:6290  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6272:6277  token */\n      dup3\n        /* \"contracts/preSale.sol\":6272:6290  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":6264:6380  require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"contracts/preSale.sol\":6390:6433  IERC20(token).safeTransfer(msg.sender, amt) */\n      tag_304\n        /* \"contracts/preSale.sol\":6417:6427  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":6429:6432  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6397:6402  token */\n      dup5\n        /* \"contracts/preSale.sol\":6390:6416  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":6390:6433  IERC20(token).safeTransfer(msg.sender, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_304:\n        /* \"contracts/preSale.sol\":6189:6440  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":6447:6730  function withdrawAll(address token) external onlyOwner {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/preSale.sol\":6529:6538  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6520:6538  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6520:6525  token */\n      dup2\n        /* \"contracts/preSale.sol\":6520:6538  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":6512:6631  require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/preSale.sol\":6641:6652  uint256 amt */\n      0x00\n        /* \"contracts/preSale.sol\":6662:6667  token */\n      dup2\n        /* \"contracts/preSale.sol\":6655:6678  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":6687:6691  this */\n      address\n        /* \"contracts/preSale.sol\":6655:6693  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_311:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_314:\n        /* \"contracts/preSale.sol\":6641:6693  uint256 amt = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":6703:6723  withdraw(token, amt) */\n      tag_315\n        /* \"contracts/preSale.sol\":6712:6717  token */\n      dup3\n        /* \"contracts/preSale.sol\":6719:6722  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6703:6711  withdraw */\n      tag_159\n        /* \"contracts/preSale.sol\":6703:6723  withdraw(token, amt) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/preSale.sol\":6502:6730  {... */\n      pop\n        /* \"contracts/preSale.sol\":6447:6730  function withdrawAll(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/preSale.sol\":1760:1774  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1741:1756  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1741:1774  block.timestamp >= presaleEndTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1720:1834  require(... */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_288\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"contracts/preSale.sol\":5756:5767  uint256 amt */\n      0x00\n        /* \"contracts/preSale.sol\":5777:5786  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5770:5797  IERC20(saleToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":5806:5810  this */\n      address\n        /* \"contracts/preSale.sol\":5770:5812  IERC20(saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_322:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_325\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_325:\n        /* \"contracts/preSale.sol\":5756:5812  uint256 amt = IERC20(saleToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":5822:5869  IERC20(saleToken).safeTransfer(msg.sender, amt) */\n      tag_326\n        /* \"contracts/preSale.sol\":5853:5863  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5865:5868  amt */\n      dup3\n        /* \"contracts/preSale.sol\":5829:5838  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5822:5852  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":5822:5869  IERC20(saleToken).safeTransfer(msg.sender, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_326:\n        /* \"contracts/preSale.sol\":5746:5876  {... */\n      pop\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_328\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_330\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_336\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_340\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_346\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_347\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_348\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_354\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_360\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_364\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_363)\n    tag_364:\n      0x60\n      swap2\n      pop\n    tag_363:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_365\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_366\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_370\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_371\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_367)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_376\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_377\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_367:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_380\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_385:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_387:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_388:\n        /* \"#utility.yul\":490:514   */\n      tag_455\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_387\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_456:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_389:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_458\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_388\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_42:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_461\n      tag_385\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":766:885   */\n    tag_460:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_462\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_389\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_390:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_391:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_465\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_390\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_392:\n        /* \"#utility.yul\":1332:1356   */\n      tag_467\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_391\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_468:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_393:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_470\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_392\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:2006   */\n    tag_47:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1657:1659   */\n      0x40\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1636:1643   */\n      dup6\n        /* \"#utility.yul\":1632:1655   */\n      sub\n        /* \"#utility.yul\":1628:1660   */\n      slt\n        /* \"#utility.yul\":1625:1744   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":1663:1742   */\n      tag_473\n      tag_385\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1625:1744   */\n    tag_472:\n        /* \"#utility.yul\":1783:1784   */\n      0x00\n        /* \"#utility.yul\":1808:1861   */\n      tag_474\n        /* \"#utility.yul\":1853:1860   */\n      dup6\n        /* \"#utility.yul\":1844:1850   */\n      dup3\n        /* \"#utility.yul\":1833:1842   */\n      dup7\n        /* \"#utility.yul\":1829:1851   */\n      add\n        /* \"#utility.yul\":1808:1861   */\n      tag_393\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1798:1861   */\n      swap3\n      pop\n        /* \"#utility.yul\":1754:1871   */\n      pop\n        /* \"#utility.yul\":1910:1912   */\n      0x20\n        /* \"#utility.yul\":1936:1989   */\n      tag_475\n        /* \"#utility.yul\":1981:1988   */\n      dup6\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup7\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_389\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1999   */\n      pop\n        /* \"#utility.yul\":1532:2006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_394:\n        /* \"#utility.yul\":2099:2123   */\n      tag_477\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_387\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_50:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_479\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_394\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_54:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_482\n      tag_385\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2440:2559   */\n    tag_481:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_483\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_393\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:3252   */\n    tag_86:\n        /* \"#utility.yul\":2876:2880   */\n      0x00\n        /* \"#utility.yul\":2914:2917   */\n      0x80\n        /* \"#utility.yul\":2903:2912   */\n      dup3\n        /* \"#utility.yul\":2899:2918   */\n      add\n        /* \"#utility.yul\":2891:2918   */\n      swap1\n      pop\n        /* \"#utility.yul\":2928:2999   */\n      tag_485\n        /* \"#utility.yul\":2996:2997   */\n      0x00\n        /* \"#utility.yul\":2985:2994   */\n      dup4\n        /* \"#utility.yul\":2981:2998   */\n      add\n        /* \"#utility.yul\":2972:2978   */\n      dup8\n        /* \"#utility.yul\":2928:2999   */\n      tag_394\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3009:3081   */\n      tag_486\n        /* \"#utility.yul\":3077:3079   */\n      0x20\n        /* \"#utility.yul\":3066:3075   */\n      dup4\n        /* \"#utility.yul\":3062:3080   */\n      add\n        /* \"#utility.yul\":3053:3059   */\n      dup7\n        /* \"#utility.yul\":3009:3081   */\n      tag_394\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3091:3163   */\n      tag_487\n        /* \"#utility.yul\":3159:3161   */\n      0x40\n        /* \"#utility.yul\":3148:3157   */\n      dup4\n        /* \"#utility.yul\":3144:3162   */\n      add\n        /* \"#utility.yul\":3135:3141   */\n      dup6\n        /* \"#utility.yul\":3091:3163   */\n      tag_394\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3173:3245   */\n      tag_488\n        /* \"#utility.yul\":3241:3243   */\n      0x60\n        /* \"#utility.yul\":3230:3239   */\n      dup4\n        /* \"#utility.yul\":3226:3244   */\n      add\n        /* \"#utility.yul\":3217:3223   */\n      dup5\n        /* \"#utility.yul\":3173:3245   */\n      tag_394\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2699:3252   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:3348   */\n    tag_395:\n        /* \"#utility.yul\":3292:3299   */\n      0x00\n        /* \"#utility.yul\":3335:3340   */\n      dup2\n        /* \"#utility.yul\":3328:3341   */\n      iszero\n        /* \"#utility.yul\":3321:3342   */\n      iszero\n        /* \"#utility.yul\":3310:3342   */\n      swap1\n      pop\n        /* \"#utility.yul\":3258:3348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3354:3463   */\n    tag_396:\n        /* \"#utility.yul\":3435:3456   */\n      tag_491\n        /* \"#utility.yul\":3450:3455   */\n      dup2\n        /* \"#utility.yul\":3435:3456   */\n      tag_395\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3430:3433   */\n      dup3\n        /* \"#utility.yul\":3423:3457   */\n      mstore\n        /* \"#utility.yul\":3354:3463   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3679   */\n    tag_122:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3672   */\n      tag_493\n        /* \"#utility.yul\":3669:3670   */\n      0x00\n        /* \"#utility.yul\":3658:3667   */\n      dup4\n        /* \"#utility.yul\":3654:3671   */\n      add\n        /* \"#utility.yul\":3645:3651   */\n      dup5\n        /* \"#utility.yul\":3607:3672   */\n      tag_396\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3469:3679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3803   */\n    tag_397:\n        /* \"#utility.yul\":3772:3796   */\n      tag_495\n        /* \"#utility.yul\":3790:3795   */\n      dup2\n        /* \"#utility.yul\":3772:3796   */\n      tag_391\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3767:3770   */\n      dup3\n        /* \"#utility.yul\":3760:3797   */\n      mstore\n        /* \"#utility.yul\":3685:3803   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:4031   */\n    tag_127:\n        /* \"#utility.yul\":3902:3906   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x20\n        /* \"#utility.yul\":3929:3938   */\n      dup3\n        /* \"#utility.yul\":3925:3943   */\n      add\n        /* \"#utility.yul\":3917:3943   */\n      swap1\n      pop\n        /* \"#utility.yul\":3953:4024   */\n      tag_497\n        /* \"#utility.yul\":4021:4022   */\n      0x00\n        /* \"#utility.yul\":4010:4019   */\n      dup4\n        /* \"#utility.yul\":4006:4023   */\n      add\n        /* \"#utility.yul\":3997:4003   */\n      dup5\n        /* \"#utility.yul\":3953:4024   */\n      tag_397\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3809:4031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4037:4217   */\n    tag_398:\n        /* \"#utility.yul\":4085:4162   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4082:4083   */\n      0x00\n        /* \"#utility.yul\":4075:4163   */\n      mstore\n        /* \"#utility.yul\":4182:4186   */\n      0x11\n        /* \"#utility.yul\":4179:4180   */\n      0x04\n        /* \"#utility.yul\":4172:4187   */\n      mstore\n        /* \"#utility.yul\":4206:4210   */\n      0x24\n        /* \"#utility.yul\":4203:4204   */\n      0x00\n        /* \"#utility.yul\":4196:4211   */\n      revert\n        /* \"#utility.yul\":4223:4414   */\n    tag_172:\n        /* \"#utility.yul\":4263:4266   */\n      0x00\n        /* \"#utility.yul\":4282:4302   */\n      tag_500\n        /* \"#utility.yul\":4300:4301   */\n      dup3\n        /* \"#utility.yul\":4282:4302   */\n      tag_387\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4277:4302   */\n      swap2\n      pop\n        /* \"#utility.yul\":4316:4336   */\n      tag_501\n        /* \"#utility.yul\":4334:4335   */\n      dup4\n        /* \"#utility.yul\":4316:4336   */\n      tag_387\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4311:4336   */\n      swap3\n      pop\n        /* \"#utility.yul\":4359:4360   */\n      dup3\n        /* \"#utility.yul\":4356:4357   */\n      dup3\n        /* \"#utility.yul\":4352:4361   */\n      add\n        /* \"#utility.yul\":4345:4361   */\n      swap1\n      pop\n        /* \"#utility.yul\":4380:4383   */\n      dup1\n        /* \"#utility.yul\":4377:4378   */\n      dup3\n        /* \"#utility.yul\":4374:4384   */\n      gt\n        /* \"#utility.yul\":4371:4407   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":4387:4405   */\n      tag_503\n      tag_398\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4371:4407   */\n    tag_502:\n        /* \"#utility.yul\":4223:4414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4420:4589   */\n    tag_399:\n        /* \"#utility.yul\":4504:4515   */\n      0x00\n        /* \"#utility.yul\":4538:4544   */\n      dup3\n        /* \"#utility.yul\":4533:4536   */\n      dup3\n        /* \"#utility.yul\":4526:4545   */\n      mstore\n        /* \"#utility.yul\":4578:4582   */\n      0x20\n        /* \"#utility.yul\":4573:4576   */\n      dup3\n        /* \"#utility.yul\":4569:4583   */\n      add\n        /* \"#utility.yul\":4554:4583   */\n      swap1\n      pop\n        /* \"#utility.yul\":4420:4589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4595:4775   */\n    tag_400:\n        /* \"#utility.yul\":4735:4767   */\n      0x50726573616c653a20546f6b656e206e6f742077686974656c69737465640000\n        /* \"#utility.yul\":4731:4732   */\n      0x00\n        /* \"#utility.yul\":4723:4729   */\n      dup3\n        /* \"#utility.yul\":4719:4733   */\n      add\n        /* \"#utility.yul\":4712:4768   */\n      mstore\n        /* \"#utility.yul\":4595:4775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4781:5147   */\n    tag_401:\n        /* \"#utility.yul\":4923:4926   */\n      0x00\n        /* \"#utility.yul\":4944:5011   */\n      tag_507\n        /* \"#utility.yul\":5008:5010   */\n      0x1e\n        /* \"#utility.yul\":5003:5006   */\n      dup4\n        /* \"#utility.yul\":4944:5011   */\n      tag_399\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4937:5011   */\n      swap2\n      pop\n        /* \"#utility.yul\":5020:5113   */\n      tag_508\n        /* \"#utility.yul\":5109:5112   */\n      dup3\n        /* \"#utility.yul\":5020:5113   */\n      tag_400\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5138:5140   */\n      0x20\n        /* \"#utility.yul\":5133:5136   */\n      dup3\n        /* \"#utility.yul\":5129:5141   */\n      add\n        /* \"#utility.yul\":5122:5141   */\n      swap1\n      pop\n        /* \"#utility.yul\":4781:5147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5572   */\n    tag_177:\n        /* \"#utility.yul\":5319:5323   */\n      0x00\n        /* \"#utility.yul\":5357:5359   */\n      0x20\n        /* \"#utility.yul\":5346:5355   */\n      dup3\n        /* \"#utility.yul\":5342:5360   */\n      add\n        /* \"#utility.yul\":5334:5360   */\n      swap1\n      pop\n        /* \"#utility.yul\":5406:5415   */\n      dup2\n        /* \"#utility.yul\":5400:5404   */\n      dup2\n        /* \"#utility.yul\":5396:5416   */\n      sub\n        /* \"#utility.yul\":5392:5393   */\n      0x00\n        /* \"#utility.yul\":5381:5390   */\n      dup4\n        /* \"#utility.yul\":5377:5394   */\n      add\n        /* \"#utility.yul\":5370:5417   */\n      mstore\n        /* \"#utility.yul\":5434:5565   */\n      tag_510\n        /* \"#utility.yul\":5560:5564   */\n      dup2\n        /* \"#utility.yul\":5434:5565   */\n      tag_401\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5426:5565   */\n      swap1\n      pop\n        /* \"#utility.yul\":5153:5572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5578:5680   */\n    tag_402:\n        /* \"#utility.yul\":5620:5628   */\n      0x00\n        /* \"#utility.yul\":5667:5672   */\n      dup2\n        /* \"#utility.yul\":5664:5665   */\n      0x01\n        /* \"#utility.yul\":5660:5673   */\n      shr\n        /* \"#utility.yul\":5639:5673   */\n      swap1\n      pop\n        /* \"#utility.yul\":5578:5680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5686:6534   */\n    tag_403:\n        /* \"#utility.yul\":5747:5752   */\n      0x00\n        /* \"#utility.yul\":5754:5758   */\n      dup1\n        /* \"#utility.yul\":5778:5784   */\n      dup3\n        /* \"#utility.yul\":5769:5784   */\n      swap2\n      pop\n        /* \"#utility.yul\":5802:5807   */\n      dup4\n        /* \"#utility.yul\":5793:5807   */\n      swap1\n      pop\n        /* \"#utility.yul\":5816:6528   */\n    tag_513:\n        /* \"#utility.yul\":5837:5838   */\n      0x01\n        /* \"#utility.yul\":5827:5835   */\n      dup6\n        /* \"#utility.yul\":5824:5839   */\n      gt\n        /* \"#utility.yul\":5816:6528   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5932:5936   */\n      dup1\n        /* \"#utility.yul\":5927:5930   */\n      dup7\n        /* \"#utility.yul\":5923:5937   */\n      div\n        /* \"#utility.yul\":5917:5921   */\n      dup2\n        /* \"#utility.yul\":5914:5938   */\n      gt\n        /* \"#utility.yul\":5911:5961   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":5941:5959   */\n      tag_517\n      tag_398\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5911:5961   */\n    tag_516:\n        /* \"#utility.yul\":5991:5992   */\n      0x01\n        /* \"#utility.yul\":5981:5989   */\n      dup6\n        /* \"#utility.yul\":5977:5993   */\n      and\n        /* \"#utility.yul\":5974:6425   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6406:6410   */\n      dup1\n        /* \"#utility.yul\":6399:6404   */\n      dup3\n        /* \"#utility.yul\":6395:6411   */\n      mul\n        /* \"#utility.yul\":6386:6411   */\n      swap2\n      pop\n        /* \"#utility.yul\":5974:6425   */\n    tag_518:\n        /* \"#utility.yul\":6456:6460   */\n      dup1\n        /* \"#utility.yul\":6450:6454   */\n      dup2\n        /* \"#utility.yul\":6446:6461   */\n      mul\n        /* \"#utility.yul\":6438:6461   */\n      swap1\n      pop\n        /* \"#utility.yul\":6486:6518   */\n      tag_519\n        /* \"#utility.yul\":6509:6517   */\n      dup6\n        /* \"#utility.yul\":6486:6518   */\n      tag_402\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6474:6518   */\n      swap5\n      pop\n        /* \"#utility.yul\":5816:6528   */\n      jump(tag_513)\n    tag_515:\n        /* \"#utility.yul\":5686:6534   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6540:7613   */\n    tag_404:\n        /* \"#utility.yul\":6594:6599   */\n      0x00\n        /* \"#utility.yul\":6785:6793   */\n      dup3\n        /* \"#utility.yul\":6775:6815   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":6806:6807   */\n      0x01\n        /* \"#utility.yul\":6797:6807   */\n      swap1\n      pop\n        /* \"#utility.yul\":6808:6813   */\n      jump(tag_520)\n        /* \"#utility.yul\":6775:6815   */\n    tag_521:\n        /* \"#utility.yul\":6834:6838   */\n      dup2\n        /* \"#utility.yul\":6824:6860   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":6851:6852   */\n      0x00\n        /* \"#utility.yul\":6842:6852   */\n      swap1\n      pop\n        /* \"#utility.yul\":6853:6858   */\n      jump(tag_520)\n        /* \"#utility.yul\":6824:6860   */\n    tag_522:\n        /* \"#utility.yul\":6920:6924   */\n      dup2\n        /* \"#utility.yul\":6968:6969   */\n      0x01\n        /* \"#utility.yul\":6963:6990   */\n      dup2\n      eq\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7004:7005   */\n      0x02\n        /* \"#utility.yul\":6999:7190   */\n      dup2\n      eq\n      tag_525\n      jumpi\n        /* \"#utility.yul\":6913:7190   */\n      jump(tag_523)\n        /* \"#utility.yul\":6963:6990   */\n    tag_524:\n        /* \"#utility.yul\":6981:6982   */\n      0x01\n        /* \"#utility.yul\":6972:6982   */\n      swap2\n      pop\n        /* \"#utility.yul\":6983:6988   */\n      pop\n      jump(tag_520)\n        /* \"#utility.yul\":6999:7190   */\n    tag_525:\n        /* \"#utility.yul\":7044:7047   */\n      0xff\n        /* \"#utility.yul\":7034:7042   */\n      dup5\n        /* \"#utility.yul\":7031:7048   */\n      gt\n        /* \"#utility.yul\":7028:7071   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":7051:7069   */\n      tag_527\n      tag_398\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7028:7071   */\n    tag_526:\n        /* \"#utility.yul\":7100:7108   */\n      dup4\n        /* \"#utility.yul\":7097:7098   */\n      0x02\n        /* \"#utility.yul\":7093:7109   */\n      exp\n        /* \"#utility.yul\":7084:7109   */\n      swap2\n      pop\n        /* \"#utility.yul\":7135:7138   */\n      dup5\n        /* \"#utility.yul\":7128:7133   */\n      dup3\n        /* \"#utility.yul\":7125:7139   */\n      gt\n        /* \"#utility.yul\":7122:7162   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7142:7160   */\n      tag_529\n      tag_398\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7122:7162   */\n    tag_528:\n        /* \"#utility.yul\":7175:7180   */\n      pop\n      jump(tag_520)\n        /* \"#utility.yul\":6913:7190   */\n    tag_523:\n      pop\n        /* \"#utility.yul\":7299:7301   */\n      0x20\n        /* \"#utility.yul\":7289:7297   */\n      dup4\n        /* \"#utility.yul\":7286:7302   */\n      lt\n        /* \"#utility.yul\":7280:7283   */\n      0x0133\n        /* \"#utility.yul\":7274:7278   */\n      dup4\n        /* \"#utility.yul\":7271:7284   */\n      lt\n        /* \"#utility.yul\":7267:7303   */\n      and\n        /* \"#utility.yul\":7249:7251   */\n      0x4e\n        /* \"#utility.yul\":7239:7247   */\n      dup5\n        /* \"#utility.yul\":7236:7252   */\n      lt\n        /* \"#utility.yul\":7231:7233   */\n      0x0b\n        /* \"#utility.yul\":7225:7229   */\n      dup5\n        /* \"#utility.yul\":7222:7234   */\n      lt\n        /* \"#utility.yul\":7218:7253   */\n      and\n        /* \"#utility.yul\":7202:7313   */\n      or\n        /* \"#utility.yul\":7199:7445   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":7355:7363   */\n      dup3\n        /* \"#utility.yul\":7349:7353   */\n      dup3\n        /* \"#utility.yul\":7345:7364   */\n      exp\n        /* \"#utility.yul\":7336:7364   */\n      swap1\n      pop\n        /* \"#utility.yul\":7390:7393   */\n      dup4\n        /* \"#utility.yul\":7383:7388   */\n      dup2\n        /* \"#utility.yul\":7380:7394   */\n      gt\n        /* \"#utility.yul\":7377:7417   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":7397:7415   */\n      tag_532\n      tag_398\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7377:7417   */\n    tag_531:\n        /* \"#utility.yul\":7430:7435   */\n      jump(tag_520)\n        /* \"#utility.yul\":7199:7445   */\n    tag_530:\n        /* \"#utility.yul\":7470:7512   */\n      tag_533\n        /* \"#utility.yul\":7508:7511   */\n      dup5\n        /* \"#utility.yul\":7498:7506   */\n      dup5\n        /* \"#utility.yul\":7492:7496   */\n      dup5\n        /* \"#utility.yul\":7489:7490   */\n      0x01\n        /* \"#utility.yul\":7470:7512   */\n      tag_403\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":7455:7512   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":7544:7548   */\n      dup2\n        /* \"#utility.yul\":7539:7542   */\n      dup5\n        /* \"#utility.yul\":7535:7549   */\n      div\n        /* \"#utility.yul\":7528:7533   */\n      dup2\n        /* \"#utility.yul\":7525:7550   */\n      gt\n        /* \"#utility.yul\":7522:7573   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":7553:7571   */\n      tag_535\n      tag_398\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7522:7573   */\n    tag_534:\n        /* \"#utility.yul\":7602:7606   */\n      dup2\n        /* \"#utility.yul\":7595:7600   */\n      dup2\n        /* \"#utility.yul\":7591:7607   */\n      mul\n        /* \"#utility.yul\":7582:7607   */\n      swap1\n      pop\n        /* \"#utility.yul\":6540:7613   */\n    tag_520:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7619:7904   */\n    tag_181:\n        /* \"#utility.yul\":7679:7684   */\n      0x00\n        /* \"#utility.yul\":7703:7726   */\n      tag_537\n        /* \"#utility.yul\":7721:7725   */\n      dup3\n        /* \"#utility.yul\":7703:7726   */\n      tag_387\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7695:7726   */\n      swap2\n      pop\n        /* \"#utility.yul\":7747:7774   */\n      tag_538\n        /* \"#utility.yul\":7765:7773   */\n      dup4\n        /* \"#utility.yul\":7747:7774   */\n      tag_387\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7735:7774   */\n      swap3\n      pop\n        /* \"#utility.yul\":7793:7897   */\n      tag_539\n        /* \"#utility.yul\":7830:7896   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7820:7828   */\n      dup5\n        /* \"#utility.yul\":7814:7818   */\n      dup5\n        /* \"#utility.yul\":7793:7897   */\n      tag_404\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7784:7897   */\n      swap1\n      pop\n        /* \"#utility.yul\":7619:7904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7910:8320   */\n    tag_183:\n        /* \"#utility.yul\":7950:7957   */\n      0x00\n        /* \"#utility.yul\":7973:7993   */\n      tag_541\n        /* \"#utility.yul\":7991:7992   */\n      dup3\n        /* \"#utility.yul\":7973:7993   */\n      tag_387\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7968:7993   */\n      swap2\n      pop\n        /* \"#utility.yul\":8007:8027   */\n      tag_542\n        /* \"#utility.yul\":8025:8026   */\n      dup4\n        /* \"#utility.yul\":8007:8027   */\n      tag_387\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":8002:8027   */\n      swap3\n      pop\n        /* \"#utility.yul\":8062:8063   */\n      dup3\n        /* \"#utility.yul\":8059:8060   */\n      dup3\n        /* \"#utility.yul\":8055:8064   */\n      mul\n        /* \"#utility.yul\":8084:8114   */\n      tag_543\n        /* \"#utility.yul\":8102:8113   */\n      dup2\n        /* \"#utility.yul\":8084:8114   */\n      tag_387\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":8073:8114   */\n      swap2\n      pop\n        /* \"#utility.yul\":8263:8264   */\n      dup3\n        /* \"#utility.yul\":8254:8261   */\n      dup3\n        /* \"#utility.yul\":8250:8265   */\n      div\n        /* \"#utility.yul\":8247:8248   */\n      dup5\n        /* \"#utility.yul\":8244:8266   */\n      eq\n        /* \"#utility.yul\":8224:8225   */\n      dup4\n        /* \"#utility.yul\":8217:8226   */\n      iszero\n        /* \"#utility.yul\":8197:8280   */\n      or\n        /* \"#utility.yul\":8174:8313   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":8293:8311   */\n      tag_545\n      tag_398\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":8174:8313   */\n    tag_544:\n        /* \"#utility.yul\":7958:8320   */\n      pop\n        /* \"#utility.yul\":7910:8320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8326:8506   */\n    tag_405:\n        /* \"#utility.yul\":8374:8451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8371:8372   */\n      0x00\n        /* \"#utility.yul\":8364:8452   */\n      mstore\n        /* \"#utility.yul\":8471:8475   */\n      0x12\n        /* \"#utility.yul\":8468:8469   */\n      0x04\n        /* \"#utility.yul\":8461:8476   */\n      mstore\n        /* \"#utility.yul\":8495:8499   */\n      0x24\n        /* \"#utility.yul\":8492:8493   */\n      0x00\n        /* \"#utility.yul\":8485:8500   */\n      revert\n        /* \"#utility.yul\":8512:8697   */\n    tag_185:\n        /* \"#utility.yul\":8552:8553   */\n      0x00\n        /* \"#utility.yul\":8569:8589   */\n      tag_548\n        /* \"#utility.yul\":8587:8588   */\n      dup3\n        /* \"#utility.yul\":8569:8589   */\n      tag_387\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8564:8589   */\n      swap2\n      pop\n        /* \"#utility.yul\":8603:8623   */\n      tag_549\n        /* \"#utility.yul\":8621:8622   */\n      dup4\n        /* \"#utility.yul\":8603:8623   */\n      tag_387\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8598:8623   */\n      swap3\n      pop\n        /* \"#utility.yul\":8642:8643   */\n      dup3\n        /* \"#utility.yul\":8632:8667   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":8647:8665   */\n      tag_551\n      tag_405\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8632:8667   */\n    tag_550:\n        /* \"#utility.yul\":8689:8690   */\n      dup3\n        /* \"#utility.yul\":8686:8687   */\n      dup3\n        /* \"#utility.yul\":8682:8691   */\n      div\n        /* \"#utility.yul\":8677:8691   */\n      swap1\n      pop\n        /* \"#utility.yul\":8512:8697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:9035   */\n    tag_198:\n        /* \"#utility.yul\":8824:8828   */\n      0x00\n        /* \"#utility.yul\":8862:8864   */\n      0x40\n        /* \"#utility.yul\":8851:8860   */\n      dup3\n        /* \"#utility.yul\":8847:8865   */\n      add\n        /* \"#utility.yul\":8839:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":8875:8946   */\n      tag_553\n        /* \"#utility.yul\":8943:8944   */\n      0x00\n        /* \"#utility.yul\":8932:8941   */\n      dup4\n        /* \"#utility.yul\":8928:8945   */\n      add\n        /* \"#utility.yul\":8919:8925   */\n      dup6\n        /* \"#utility.yul\":8875:8946   */\n      tag_397\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":8956:9028   */\n      tag_554\n        /* \"#utility.yul\":9024:9026   */\n      0x20\n        /* \"#utility.yul\":9013:9022   */\n      dup4\n        /* \"#utility.yul\":9009:9027   */\n      add\n        /* \"#utility.yul\":9000:9006   */\n      dup5\n        /* \"#utility.yul\":8956:9028   */\n      tag_394\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8703:9035   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9041:9264   */\n    tag_406:\n        /* \"#utility.yul\":9181:9215   */\n      0x50726573616c653a2050726573616c6520686173206e6f742073746172746564\n        /* \"#utility.yul\":9177:9178   */\n      0x00\n        /* \"#utility.yul\":9169:9175   */\n      dup3\n        /* \"#utility.yul\":9165:9179   */\n      add\n        /* \"#utility.yul\":9158:9216   */\n      mstore\n        /* \"#utility.yul\":9250:9256   */\n      0x2079657400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9245:9247   */\n      0x20\n        /* \"#utility.yul\":9237:9243   */\n      dup3\n        /* \"#utility.yul\":9233:9248   */\n      add\n        /* \"#utility.yul\":9226:9257   */\n      mstore\n        /* \"#utility.yul\":9041:9264   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9270:9636   */\n    tag_407:\n        /* \"#utility.yul\":9412:9415   */\n      0x00\n        /* \"#utility.yul\":9433:9500   */\n      tag_557\n        /* \"#utility.yul\":9497:9499   */\n      0x24\n        /* \"#utility.yul\":9492:9495   */\n      dup4\n        /* \"#utility.yul\":9433:9500   */\n      tag_399\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9426:9500   */\n      swap2\n      pop\n        /* \"#utility.yul\":9509:9602   */\n      tag_558\n        /* \"#utility.yul\":9598:9601   */\n      dup3\n        /* \"#utility.yul\":9509:9602   */\n      tag_406\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9627:9629   */\n      0x40\n        /* \"#utility.yul\":9622:9625   */\n      dup3\n        /* \"#utility.yul\":9618:9630   */\n      add\n        /* \"#utility.yul\":9611:9630   */\n      swap1\n      pop\n        /* \"#utility.yul\":9270:9636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:10061   */\n    tag_219:\n        /* \"#utility.yul\":9808:9812   */\n      0x00\n        /* \"#utility.yul\":9846:9848   */\n      0x20\n        /* \"#utility.yul\":9835:9844   */\n      dup3\n        /* \"#utility.yul\":9831:9849   */\n      add\n        /* \"#utility.yul\":9823:9849   */\n      swap1\n      pop\n        /* \"#utility.yul\":9895:9904   */\n      dup2\n        /* \"#utility.yul\":9889:9893   */\n      dup2\n        /* \"#utility.yul\":9885:9905   */\n      sub\n        /* \"#utility.yul\":9881:9882   */\n      0x00\n        /* \"#utility.yul\":9870:9879   */\n      dup4\n        /* \"#utility.yul\":9866:9883   */\n      add\n        /* \"#utility.yul\":9859:9906   */\n      mstore\n        /* \"#utility.yul\":9923:10054   */\n      tag_560\n        /* \"#utility.yul\":10049:10053   */\n      dup2\n        /* \"#utility.yul\":9923:10054   */\n      tag_407\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9915:10054   */\n      swap1\n      pop\n        /* \"#utility.yul\":9642:10061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10243   */\n    tag_408:\n        /* \"#utility.yul\":10207:10235   */\n      0x50726573616c653a2050726573616c652068617320656e646564000000000000\n        /* \"#utility.yul\":10203:10204   */\n      0x00\n        /* \"#utility.yul\":10195:10201   */\n      dup3\n        /* \"#utility.yul\":10191:10205   */\n      add\n        /* \"#utility.yul\":10184:10236   */\n      mstore\n        /* \"#utility.yul\":10067:10243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10249:10615   */\n    tag_409:\n        /* \"#utility.yul\":10391:10394   */\n      0x00\n        /* \"#utility.yul\":10412:10479   */\n      tag_563\n        /* \"#utility.yul\":10476:10478   */\n      0x1a\n        /* \"#utility.yul\":10471:10474   */\n      dup4\n        /* \"#utility.yul\":10412:10479   */\n      tag_399\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":10405:10479   */\n      swap2\n      pop\n        /* \"#utility.yul\":10488:10581   */\n      tag_564\n        /* \"#utility.yul\":10577:10580   */\n      dup3\n        /* \"#utility.yul\":10488:10581   */\n      tag_408\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10606:10608   */\n      0x20\n        /* \"#utility.yul\":10601:10604   */\n      dup3\n        /* \"#utility.yul\":10597:10609   */\n      add\n        /* \"#utility.yul\":10590:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10249:10615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10621:11040   */\n    tag_223:\n        /* \"#utility.yul\":10787:10791   */\n      0x00\n        /* \"#utility.yul\":10825:10827   */\n      0x20\n        /* \"#utility.yul\":10814:10823   */\n      dup3\n        /* \"#utility.yul\":10810:10828   */\n      add\n        /* \"#utility.yul\":10802:10828   */\n      swap1\n      pop\n        /* \"#utility.yul\":10874:10883   */\n      dup2\n        /* \"#utility.yul\":10868:10872   */\n      dup2\n        /* \"#utility.yul\":10864:10884   */\n      sub\n        /* \"#utility.yul\":10860:10861   */\n      0x00\n        /* \"#utility.yul\":10849:10858   */\n      dup4\n        /* \"#utility.yul\":10845:10862   */\n      add\n        /* \"#utility.yul\":10838:10885   */\n      mstore\n        /* \"#utility.yul\":10902:11033   */\n      tag_566\n        /* \"#utility.yul\":11028:11032   */\n      dup2\n        /* \"#utility.yul\":10902:11033   */\n      tag_409\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10894:11033   */\n      swap1\n      pop\n        /* \"#utility.yul\":10621:11040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11046:11267   */\n    tag_410:\n        /* \"#utility.yul\":11186:11220   */\n      0x50726573616c653a20546f74616c20546f6b656e2053616c6520526561636865\n        /* \"#utility.yul\":11182:11183   */\n      0x00\n        /* \"#utility.yul\":11174:11180   */\n      dup3\n        /* \"#utility.yul\":11170:11184   */\n      add\n        /* \"#utility.yul\":11163:11221   */\n      mstore\n        /* \"#utility.yul\":11255:11259   */\n      0x6421000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11250:11252   */\n      0x20\n        /* \"#utility.yul\":11242:11248   */\n      dup3\n        /* \"#utility.yul\":11238:11253   */\n      add\n        /* \"#utility.yul\":11231:11260   */\n      mstore\n        /* \"#utility.yul\":11046:11267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11273:11639   */\n    tag_411:\n        /* \"#utility.yul\":11415:11418   */\n      0x00\n        /* \"#utility.yul\":11436:11503   */\n      tag_569\n        /* \"#utility.yul\":11500:11502   */\n      0x22\n        /* \"#utility.yul\":11495:11498   */\n      dup4\n        /* \"#utility.yul\":11436:11503   */\n      tag_399\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11429:11503   */\n      swap2\n      pop\n        /* \"#utility.yul\":11512:11605   */\n      tag_570\n        /* \"#utility.yul\":11601:11604   */\n      dup3\n        /* \"#utility.yul\":11512:11605   */\n      tag_410\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11630:11632   */\n      0x40\n        /* \"#utility.yul\":11625:11628   */\n      dup3\n        /* \"#utility.yul\":11621:11633   */\n      add\n        /* \"#utility.yul\":11614:11633   */\n      swap1\n      pop\n        /* \"#utility.yul\":11273:11639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11645:12064   */\n    tag_232:\n        /* \"#utility.yul\":11811:11815   */\n      0x00\n        /* \"#utility.yul\":11849:11851   */\n      0x20\n        /* \"#utility.yul\":11838:11847   */\n      dup3\n        /* \"#utility.yul\":11834:11852   */\n      add\n        /* \"#utility.yul\":11826:11852   */\n      swap1\n      pop\n        /* \"#utility.yul\":11898:11907   */\n      dup2\n        /* \"#utility.yul\":11892:11896   */\n      dup2\n        /* \"#utility.yul\":11888:11908   */\n      sub\n        /* \"#utility.yul\":11884:11885   */\n      0x00\n        /* \"#utility.yul\":11873:11882   */\n      dup4\n        /* \"#utility.yul\":11869:11886   */\n      add\n        /* \"#utility.yul\":11862:11909   */\n      mstore\n        /* \"#utility.yul\":11926:12057   */\n      tag_572\n        /* \"#utility.yul\":12052:12056   */\n      dup2\n        /* \"#utility.yul\":11926:12057   */\n      tag_411\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11918:12057   */\n      swap1\n      pop\n        /* \"#utility.yul\":11645:12064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12070:12298   */\n    tag_412:\n        /* \"#utility.yul\":12210:12244   */\n      0x50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20\n        /* \"#utility.yul\":12206:12207   */\n      0x00\n        /* \"#utility.yul\":12198:12204   */\n      dup3\n        /* \"#utility.yul\":12194:12208   */\n      add\n        /* \"#utility.yul\":12187:12245   */\n      mstore\n        /* \"#utility.yul\":12279:12290   */\n      0x627579206c696d69740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12274:12276   */\n      0x20\n        /* \"#utility.yul\":12266:12272   */\n      dup3\n        /* \"#utility.yul\":12262:12277   */\n      add\n        /* \"#utility.yul\":12255:12291   */\n      mstore\n        /* \"#utility.yul\":12070:12298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12304:12670   */\n    tag_413:\n        /* \"#utility.yul\":12446:12449   */\n      0x00\n        /* \"#utility.yul\":12467:12534   */\n      tag_575\n        /* \"#utility.yul\":12531:12533   */\n      0x29\n        /* \"#utility.yul\":12526:12529   */\n      dup4\n        /* \"#utility.yul\":12467:12534   */\n      tag_399\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12460:12534   */\n      swap2\n      pop\n        /* \"#utility.yul\":12543:12636   */\n      tag_576\n        /* \"#utility.yul\":12632:12635   */\n      dup3\n        /* \"#utility.yul\":12543:12636   */\n      tag_412\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":12661:12663   */\n      0x40\n        /* \"#utility.yul\":12656:12659   */\n      dup3\n        /* \"#utility.yul\":12652:12664   */\n      add\n        /* \"#utility.yul\":12645:12664   */\n      swap1\n      pop\n        /* \"#utility.yul\":12304:12670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12676:13095   */\n    tag_236:\n        /* \"#utility.yul\":12842:12846   */\n      0x00\n        /* \"#utility.yul\":12880:12882   */\n      0x20\n        /* \"#utility.yul\":12869:12878   */\n      dup3\n        /* \"#utility.yul\":12865:12883   */\n      add\n        /* \"#utility.yul\":12857:12883   */\n      swap1\n      pop\n        /* \"#utility.yul\":12929:12938   */\n      dup2\n        /* \"#utility.yul\":12923:12927   */\n      dup2\n        /* \"#utility.yul\":12919:12939   */\n      sub\n        /* \"#utility.yul\":12915:12916   */\n      0x00\n        /* \"#utility.yul\":12904:12913   */\n      dup4\n        /* \"#utility.yul\":12900:12917   */\n      add\n        /* \"#utility.yul\":12893:12940   */\n      mstore\n        /* \"#utility.yul\":12957:13088   */\n      tag_578\n        /* \"#utility.yul\":13083:13087   */\n      dup2\n        /* \"#utility.yul\":12957:13088   */\n      tag_413\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12949:13088   */\n      swap1\n      pop\n        /* \"#utility.yul\":12676:13095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13101:13323   */\n    tag_414:\n        /* \"#utility.yul\":13241:13275   */\n      0x50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c69\n        /* \"#utility.yul\":13237:13238   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      dup3\n        /* \"#utility.yul\":13225:13239   */\n      add\n        /* \"#utility.yul\":13218:13276   */\n      mstore\n        /* \"#utility.yul\":13310:13315   */\n      0x6d69740000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13305:13307   */\n      0x20\n        /* \"#utility.yul\":13297:13303   */\n      dup3\n        /* \"#utility.yul\":13293:13308   */\n      add\n        /* \"#utility.yul\":13286:13316   */\n      mstore\n        /* \"#utility.yul\":13101:13323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13329:13695   */\n    tag_415:\n        /* \"#utility.yul\":13471:13474   */\n      0x00\n        /* \"#utility.yul\":13492:13559   */\n      tag_581\n        /* \"#utility.yul\":13556:13558   */\n      0x23\n        /* \"#utility.yul\":13551:13554   */\n      dup4\n        /* \"#utility.yul\":13492:13559   */\n      tag_399\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13485:13559   */\n      swap2\n      pop\n        /* \"#utility.yul\":13568:13661   */\n      tag_582\n        /* \"#utility.yul\":13657:13660   */\n      dup3\n        /* \"#utility.yul\":13568:13661   */\n      tag_414\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13686:13688   */\n      0x40\n        /* \"#utility.yul\":13681:13684   */\n      dup3\n        /* \"#utility.yul\":13677:13689   */\n      add\n        /* \"#utility.yul\":13670:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13329:13695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13701:14120   */\n    tag_242:\n        /* \"#utility.yul\":13867:13871   */\n      0x00\n        /* \"#utility.yul\":13905:13907   */\n      0x20\n        /* \"#utility.yul\":13894:13903   */\n      dup3\n        /* \"#utility.yul\":13890:13908   */\n      add\n        /* \"#utility.yul\":13882:13908   */\n      swap1\n      pop\n        /* \"#utility.yul\":13954:13963   */\n      dup2\n        /* \"#utility.yul\":13948:13952   */\n      dup2\n        /* \"#utility.yul\":13944:13964   */\n      sub\n        /* \"#utility.yul\":13940:13941   */\n      0x00\n        /* \"#utility.yul\":13929:13938   */\n      dup4\n        /* \"#utility.yul\":13925:13942   */\n      add\n        /* \"#utility.yul\":13918:13965   */\n      mstore\n        /* \"#utility.yul\":13982:14113   */\n      tag_584\n        /* \"#utility.yul\":14108:14112   */\n      dup2\n        /* \"#utility.yul\":13982:14113   */\n      tag_415\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13974:14113   */\n      swap1\n      pop\n        /* \"#utility.yul\":13701:14120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14126:14458   */\n    tag_250:\n        /* \"#utility.yul\":14247:14251   */\n      0x00\n        /* \"#utility.yul\":14285:14287   */\n      0x40\n        /* \"#utility.yul\":14274:14283   */\n      dup3\n        /* \"#utility.yul\":14270:14288   */\n      add\n        /* \"#utility.yul\":14262:14288   */\n      swap1\n      pop\n        /* \"#utility.yul\":14298:14369   */\n      tag_586\n        /* \"#utility.yul\":14366:14367   */\n      0x00\n        /* \"#utility.yul\":14355:14364   */\n      dup4\n        /* \"#utility.yul\":14351:14368   */\n      add\n        /* \"#utility.yul\":14342:14348   */\n      dup6\n        /* \"#utility.yul\":14298:14369   */\n      tag_394\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14379:14451   */\n      tag_587\n        /* \"#utility.yul\":14447:14449   */\n      0x20\n        /* \"#utility.yul\":14436:14445   */\n      dup4\n        /* \"#utility.yul\":14432:14450   */\n      add\n        /* \"#utility.yul\":14423:14429   */\n      dup5\n        /* \"#utility.yul\":14379:14451   */\n      tag_394\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14126:14458   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14464:14693   */\n    tag_416:\n        /* \"#utility.yul\":14604:14638   */\n      0x50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65\n        /* \"#utility.yul\":14600:14601   */\n      0x00\n        /* \"#utility.yul\":14592:14598   */\n      dup3\n        /* \"#utility.yul\":14588:14602   */\n      add\n        /* \"#utility.yul\":14581:14639   */\n      mstore\n        /* \"#utility.yul\":14673:14685   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14668:14670   */\n      0x20\n        /* \"#utility.yul\":14660:14666   */\n      dup3\n        /* \"#utility.yul\":14656:14671   */\n      add\n        /* \"#utility.yul\":14649:14686   */\n      mstore\n        /* \"#utility.yul\":14464:14693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14699:15065   */\n    tag_417:\n        /* \"#utility.yul\":14841:14844   */\n      0x00\n        /* \"#utility.yul\":14862:14929   */\n      tag_590\n        /* \"#utility.yul\":14926:14928   */\n      0x2a\n        /* \"#utility.yul\":14921:14924   */\n      dup4\n        /* \"#utility.yul\":14862:14929   */\n      tag_399\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14855:14929   */\n      swap2\n      pop\n        /* \"#utility.yul\":14938:15031   */\n      tag_591\n        /* \"#utility.yul\":15027:15030   */\n      dup3\n        /* \"#utility.yul\":14938:15031   */\n      tag_416\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":15056:15058   */\n      0x40\n        /* \"#utility.yul\":15051:15054   */\n      dup3\n        /* \"#utility.yul\":15047:15059   */\n      add\n        /* \"#utility.yul\":15040:15059   */\n      swap1\n      pop\n        /* \"#utility.yul\":14699:15065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15071:15490   */\n    tag_264:\n        /* \"#utility.yul\":15237:15241   */\n      0x00\n        /* \"#utility.yul\":15275:15277   */\n      0x20\n        /* \"#utility.yul\":15264:15273   */\n      dup3\n        /* \"#utility.yul\":15260:15278   */\n      add\n        /* \"#utility.yul\":15252:15278   */\n      swap1\n      pop\n        /* \"#utility.yul\":15324:15333   */\n      dup2\n        /* \"#utility.yul\":15318:15322   */\n      dup2\n        /* \"#utility.yul\":15314:15334   */\n      sub\n        /* \"#utility.yul\":15310:15311   */\n      0x00\n        /* \"#utility.yul\":15299:15308   */\n      dup4\n        /* \"#utility.yul\":15295:15312   */\n      add\n        /* \"#utility.yul\":15288:15335   */\n      mstore\n        /* \"#utility.yul\":15352:15483   */\n      tag_593\n        /* \"#utility.yul\":15478:15482   */\n      dup2\n        /* \"#utility.yul\":15352:15483   */\n      tag_417\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15344:15483   */\n      swap1\n      pop\n        /* \"#utility.yul\":15071:15490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15496:15728   */\n    tag_418:\n        /* \"#utility.yul\":15636:15670   */\n      0x50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063\n        /* \"#utility.yul\":15632:15633   */\n      0x00\n        /* \"#utility.yul\":15624:15630   */\n      dup3\n        /* \"#utility.yul\":15620:15634   */\n      add\n        /* \"#utility.yul\":15613:15671   */\n      mstore\n        /* \"#utility.yul\":15705:15720   */\n      0x616e6e6f74206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":15700:15702   */\n      0x20\n        /* \"#utility.yul\":15692:15698   */\n      dup3\n        /* \"#utility.yul\":15688:15703   */\n      add\n        /* \"#utility.yul\":15681:15721   */\n      mstore\n        /* \"#utility.yul\":15496:15728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15734:16100   */\n    tag_419:\n        /* \"#utility.yul\":15876:15879   */\n      0x00\n        /* \"#utility.yul\":15897:15964   */\n      tag_596\n        /* \"#utility.yul\":15961:15963   */\n      0x2d\n        /* \"#utility.yul\":15956:15959   */\n      dup4\n        /* \"#utility.yul\":15897:15964   */\n      tag_399\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15890:15964   */\n      swap2\n      pop\n        /* \"#utility.yul\":15973:16066   */\n      tag_597\n        /* \"#utility.yul\":16062:16065   */\n      dup3\n        /* \"#utility.yul\":15973:16066   */\n      tag_418\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":16091:16093   */\n      0x40\n        /* \"#utility.yul\":16086:16089   */\n      dup3\n        /* \"#utility.yul\":16082:16094   */\n      add\n        /* \"#utility.yul\":16075:16094   */\n      swap1\n      pop\n        /* \"#utility.yul\":15734:16100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16106:16525   */\n    tag_267:\n        /* \"#utility.yul\":16272:16276   */\n      0x00\n        /* \"#utility.yul\":16310:16312   */\n      0x20\n        /* \"#utility.yul\":16299:16308   */\n      dup3\n        /* \"#utility.yul\":16295:16313   */\n      add\n        /* \"#utility.yul\":16287:16313   */\n      swap1\n      pop\n        /* \"#utility.yul\":16359:16368   */\n      dup2\n        /* \"#utility.yul\":16353:16357   */\n      dup2\n        /* \"#utility.yul\":16349:16369   */\n      sub\n        /* \"#utility.yul\":16345:16346   */\n      0x00\n        /* \"#utility.yul\":16334:16343   */\n      dup4\n        /* \"#utility.yul\":16330:16347   */\n      add\n        /* \"#utility.yul\":16323:16370   */\n      mstore\n        /* \"#utility.yul\":16387:16518   */\n      tag_599\n        /* \"#utility.yul\":16513:16517   */\n      dup2\n        /* \"#utility.yul\":16387:16518   */\n      tag_419\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16379:16518   */\n      swap1\n      pop\n        /* \"#utility.yul\":16106:16525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16531:16617   */\n    tag_420:\n        /* \"#utility.yul\":16566:16573   */\n      0x00\n        /* \"#utility.yul\":16606:16610   */\n      0xff\n        /* \"#utility.yul\":16599:16604   */\n      dup3\n        /* \"#utility.yul\":16595:16611   */\n      and\n        /* \"#utility.yul\":16584:16611   */\n      swap1\n      pop\n        /* \"#utility.yul\":16531:16617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16623:16741   */\n    tag_421:\n        /* \"#utility.yul\":16694:16716   */\n      tag_602\n        /* \"#utility.yul\":16710:16715   */\n      dup2\n        /* \"#utility.yul\":16694:16716   */\n      tag_420\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16687:16692   */\n      dup2\n        /* \"#utility.yul\":16684:16717   */\n      eq\n        /* \"#utility.yul\":16674:16735   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":16731:16732   */\n      0x00\n        /* \"#utility.yul\":16728:16729   */\n      dup1\n        /* \"#utility.yul\":16721:16733   */\n      revert\n        /* \"#utility.yul\":16674:16735   */\n    tag_603:\n        /* \"#utility.yul\":16623:16741   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16747:16886   */\n    tag_422:\n        /* \"#utility.yul\":16802:16807   */\n      0x00\n        /* \"#utility.yul\":16833:16839   */\n      dup2\n        /* \"#utility.yul\":16827:16840   */\n      mload\n        /* \"#utility.yul\":16818:16840   */\n      swap1\n      pop\n        /* \"#utility.yul\":16849:16880   */\n      tag_605\n        /* \"#utility.yul\":16874:16879   */\n      dup2\n        /* \"#utility.yul\":16849:16880   */\n      tag_421\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":16747:16886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16892:17239   */\n    tag_271:\n        /* \"#utility.yul\":16960:16966   */\n      0x00\n        /* \"#utility.yul\":17009:17011   */\n      0x20\n        /* \"#utility.yul\":16997:17006   */\n      dup3\n        /* \"#utility.yul\":16988:16995   */\n      dup5\n        /* \"#utility.yul\":16984:17007   */\n      sub\n        /* \"#utility.yul\":16980:17012   */\n      slt\n        /* \"#utility.yul\":16977:17096   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":17015:17094   */\n      tag_608\n      tag_385\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16977:17096   */\n    tag_607:\n        /* \"#utility.yul\":17135:17136   */\n      0x00\n        /* \"#utility.yul\":17160:17222   */\n      tag_609\n        /* \"#utility.yul\":17214:17221   */\n      dup5\n        /* \"#utility.yul\":17205:17211   */\n      dup3\n        /* \"#utility.yul\":17194:17203   */\n      dup6\n        /* \"#utility.yul\":17190:17212   */\n      add\n        /* \"#utility.yul\":17160:17222   */\n      tag_422\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17150:17222   */\n      swap2\n      pop\n        /* \"#utility.yul\":17106:17232   */\n      pop\n        /* \"#utility.yul\":16892:17239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17245:17388   */\n    tag_423:\n        /* \"#utility.yul\":17302:17307   */\n      0x00\n        /* \"#utility.yul\":17333:17339   */\n      dup2\n        /* \"#utility.yul\":17327:17340   */\n      mload\n        /* \"#utility.yul\":17318:17340   */\n      swap1\n      pop\n        /* \"#utility.yul\":17349:17382   */\n      tag_611\n        /* \"#utility.yul\":17376:17381   */\n      dup2\n        /* \"#utility.yul\":17349:17382   */\n      tag_388\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":17245:17388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17394:17745   */\n    tag_277:\n        /* \"#utility.yul\":17464:17470   */\n      0x00\n        /* \"#utility.yul\":17513:17515   */\n      0x20\n        /* \"#utility.yul\":17501:17510   */\n      dup3\n        /* \"#utility.yul\":17492:17499   */\n      dup5\n        /* \"#utility.yul\":17488:17511   */\n      sub\n        /* \"#utility.yul\":17484:17516   */\n      slt\n        /* \"#utility.yul\":17481:17600   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":17519:17598   */\n      tag_614\n      tag_385\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":17481:17600   */\n    tag_613:\n        /* \"#utility.yul\":17639:17640   */\n      0x00\n        /* \"#utility.yul\":17664:17728   */\n      tag_615\n        /* \"#utility.yul\":17720:17727   */\n      dup5\n        /* \"#utility.yul\":17711:17717   */\n      dup3\n        /* \"#utility.yul\":17700:17709   */\n      dup6\n        /* \"#utility.yul\":17696:17718   */\n      add\n        /* \"#utility.yul\":17664:17728   */\n      tag_423\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":17654:17728   */\n      swap2\n      pop\n        /* \"#utility.yul\":17610:17738   */\n      pop\n        /* \"#utility.yul\":17394:17745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17751:17972   */\n    tag_424:\n        /* \"#utility.yul\":17891:17925   */\n      0x50726573616c653a2050726573616c6520686173206e6f7420656e6465642079\n        /* \"#utility.yul\":17887:17888   */\n      0x00\n        /* \"#utility.yul\":17879:17885   */\n      dup3\n        /* \"#utility.yul\":17875:17889   */\n      add\n        /* \"#utility.yul\":17868:17926   */\n      mstore\n        /* \"#utility.yul\":17960:17964   */\n      0x6574000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17955:17957   */\n      0x20\n        /* \"#utility.yul\":17947:17953   */\n      dup3\n        /* \"#utility.yul\":17943:17958   */\n      add\n        /* \"#utility.yul\":17936:17965   */\n      mstore\n        /* \"#utility.yul\":17751:17972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17978:18344   */\n    tag_425:\n        /* \"#utility.yul\":18120:18123   */\n      0x00\n        /* \"#utility.yul\":18141:18208   */\n      tag_618\n        /* \"#utility.yul\":18205:18207   */\n      0x22\n        /* \"#utility.yul\":18200:18203   */\n      dup4\n        /* \"#utility.yul\":18141:18208   */\n      tag_399\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":18134:18208   */\n      swap2\n      pop\n        /* \"#utility.yul\":18217:18310   */\n      tag_619\n        /* \"#utility.yul\":18306:18309   */\n      dup3\n        /* \"#utility.yul\":18217:18310   */\n      tag_424\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18335:18337   */\n      0x40\n        /* \"#utility.yul\":18330:18333   */\n      dup3\n        /* \"#utility.yul\":18326:18338   */\n      add\n        /* \"#utility.yul\":18319:18338   */\n      swap1\n      pop\n        /* \"#utility.yul\":17978:18344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18350:18769   */\n    tag_288:\n        /* \"#utility.yul\":18516:18520   */\n      0x00\n        /* \"#utility.yul\":18554:18556   */\n      0x20\n        /* \"#utility.yul\":18543:18552   */\n      dup3\n        /* \"#utility.yul\":18539:18557   */\n      add\n        /* \"#utility.yul\":18531:18557   */\n      swap1\n      pop\n        /* \"#utility.yul\":18603:18612   */\n      dup2\n        /* \"#utility.yul\":18597:18601   */\n      dup2\n        /* \"#utility.yul\":18593:18613   */\n      sub\n        /* \"#utility.yul\":18589:18590   */\n      0x00\n        /* \"#utility.yul\":18578:18587   */\n      dup4\n        /* \"#utility.yul\":18574:18591   */\n      add\n        /* \"#utility.yul\":18567:18614   */\n      mstore\n        /* \"#utility.yul\":18631:18762   */\n      tag_621\n        /* \"#utility.yul\":18757:18761   */\n      dup2\n        /* \"#utility.yul\":18631:18762   */\n      tag_425\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18623:18762   */\n      swap1\n      pop\n        /* \"#utility.yul\":18350:18769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18775:19000   */\n    tag_426:\n        /* \"#utility.yul\":18915:18949   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18911:18912   */\n      0x00\n        /* \"#utility.yul\":18903:18909   */\n      dup3\n        /* \"#utility.yul\":18899:18913   */\n      add\n        /* \"#utility.yul\":18892:18950   */\n      mstore\n        /* \"#utility.yul\":18984:18992   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18979:18981   */\n      0x20\n        /* \"#utility.yul\":18971:18977   */\n      dup3\n        /* \"#utility.yul\":18967:18982   */\n      add\n        /* \"#utility.yul\":18960:18993   */\n      mstore\n        /* \"#utility.yul\":18775:19000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19006:19372   */\n    tag_427:\n        /* \"#utility.yul\":19148:19151   */\n      0x00\n        /* \"#utility.yul\":19169:19236   */\n      tag_624\n        /* \"#utility.yul\":19233:19235   */\n      0x26\n        /* \"#utility.yul\":19228:19231   */\n      dup4\n        /* \"#utility.yul\":19169:19236   */\n      tag_399\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":19162:19236   */\n      swap2\n      pop\n        /* \"#utility.yul\":19245:19338   */\n      tag_625\n        /* \"#utility.yul\":19334:19337   */\n      dup3\n        /* \"#utility.yul\":19245:19338   */\n      tag_426\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":19363:19365   */\n      0x40\n        /* \"#utility.yul\":19358:19361   */\n      dup3\n        /* \"#utility.yul\":19354:19366   */\n      add\n        /* \"#utility.yul\":19347:19366   */\n      swap1\n      pop\n        /* \"#utility.yul\":19006:19372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19378:19797   */\n    tag_296:\n        /* \"#utility.yul\":19544:19548   */\n      0x00\n        /* \"#utility.yul\":19582:19584   */\n      0x20\n        /* \"#utility.yul\":19571:19580   */\n      dup3\n        /* \"#utility.yul\":19567:19585   */\n      add\n        /* \"#utility.yul\":19559:19585   */\n      swap1\n      pop\n        /* \"#utility.yul\":19631:19640   */\n      dup2\n        /* \"#utility.yul\":19625:19629   */\n      dup2\n        /* \"#utility.yul\":19621:19641   */\n      sub\n        /* \"#utility.yul\":19617:19618   */\n      0x00\n        /* \"#utility.yul\":19606:19615   */\n      dup4\n        /* \"#utility.yul\":19602:19619   */\n      add\n        /* \"#utility.yul\":19595:19642   */\n      mstore\n        /* \"#utility.yul\":19659:19790   */\n      tag_627\n        /* \"#utility.yul\":19785:19789   */\n      dup2\n        /* \"#utility.yul\":19659:19790   */\n      tag_427\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":19651:19790   */\n      swap1\n      pop\n        /* \"#utility.yul\":19378:19797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19803:20112   */\n    tag_428:\n        /* \"#utility.yul\":19943:19977   */\n      0x50726573616c653a2043616e6e6f742077697468647261772073616c6520746f\n        /* \"#utility.yul\":19939:19940   */\n      0x00\n        /* \"#utility.yul\":19931:19937   */\n      dup3\n        /* \"#utility.yul\":19927:19941   */\n      add\n        /* \"#utility.yul\":19920:19978   */\n      mstore\n        /* \"#utility.yul\":20012:20046   */\n      0x6b656e20776974682074686973206d6574686f642c2075736520776974686472\n        /* \"#utility.yul\":20007:20009   */\n      0x20\n        /* \"#utility.yul\":19999:20005   */\n      dup3\n        /* \"#utility.yul\":19995:20010   */\n      add\n        /* \"#utility.yul\":19988:20047   */\n      mstore\n        /* \"#utility.yul\":20081:20104   */\n      0x617753616c65546f6b656e282920696e73746561640000000000000000000000\n        /* \"#utility.yul\":20076:20078   */\n      0x40\n        /* \"#utility.yul\":20068:20074   */\n      dup3\n        /* \"#utility.yul\":20064:20079   */\n      add\n        /* \"#utility.yul\":20057:20105   */\n      mstore\n        /* \"#utility.yul\":19803:20112   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20118:20484   */\n    tag_429:\n        /* \"#utility.yul\":20260:20263   */\n      0x00\n        /* \"#utility.yul\":20281:20348   */\n      tag_630\n        /* \"#utility.yul\":20345:20347   */\n      0x55\n        /* \"#utility.yul\":20340:20343   */\n      dup4\n        /* \"#utility.yul\":20281:20348   */\n      tag_399\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20274:20348   */\n      swap2\n      pop\n        /* \"#utility.yul\":20357:20450   */\n      tag_631\n        /* \"#utility.yul\":20446:20449   */\n      dup3\n        /* \"#utility.yul\":20357:20450   */\n      tag_428\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20475:20477   */\n      0x60\n        /* \"#utility.yul\":20470:20473   */\n      dup3\n        /* \"#utility.yul\":20466:20478   */\n      add\n        /* \"#utility.yul\":20459:20478   */\n      swap1\n      pop\n        /* \"#utility.yul\":20118:20484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20490:20909   */\n    tag_303:\n        /* \"#utility.yul\":20656:20660   */\n      0x00\n        /* \"#utility.yul\":20694:20696   */\n      0x20\n        /* \"#utility.yul\":20683:20692   */\n      dup3\n        /* \"#utility.yul\":20679:20697   */\n      add\n        /* \"#utility.yul\":20671:20697   */\n      swap1\n      pop\n        /* \"#utility.yul\":20743:20752   */\n      dup2\n        /* \"#utility.yul\":20737:20741   */\n      dup2\n        /* \"#utility.yul\":20733:20753   */\n      sub\n        /* \"#utility.yul\":20729:20730   */\n      0x00\n        /* \"#utility.yul\":20718:20727   */\n      dup4\n        /* \"#utility.yul\":20714:20731   */\n      add\n        /* \"#utility.yul\":20707:20754   */\n      mstore\n        /* \"#utility.yul\":20771:20902   */\n      tag_633\n        /* \"#utility.yul\":20897:20901   */\n      dup2\n        /* \"#utility.yul\":20771:20902   */\n      tag_429\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":20763:20902   */\n      swap1\n      pop\n        /* \"#utility.yul\":20490:20909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20915:21227   */\n    tag_430:\n        /* \"#utility.yul\":21055:21089   */\n      0x50726573616c653a2043616e6e6f742077697468647261772073616c6520746f\n        /* \"#utility.yul\":21051:21052   */\n      0x00\n        /* \"#utility.yul\":21043:21049   */\n      dup3\n        /* \"#utility.yul\":21039:21053   */\n      add\n        /* \"#utility.yul\":21032:21090   */\n      mstore\n        /* \"#utility.yul\":21124:21158   */\n      0x6b656e20776974682074686973206d6574686f642c2075736520776974686472\n        /* \"#utility.yul\":21119:21121   */\n      0x20\n        /* \"#utility.yul\":21111:21117   */\n      dup3\n        /* \"#utility.yul\":21107:21122   */\n      add\n        /* \"#utility.yul\":21100:21159   */\n      mstore\n        /* \"#utility.yul\":21193:21219   */\n      0x6177416c6c53616c65546f6b656e282920696e73746561640000000000000000\n        /* \"#utility.yul\":21188:21190   */\n      0x40\n        /* \"#utility.yul\":21180:21186   */\n      dup3\n        /* \"#utility.yul\":21176:21191   */\n      add\n        /* \"#utility.yul\":21169:21220   */\n      mstore\n        /* \"#utility.yul\":20915:21227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21233:21599   */\n    tag_431:\n        /* \"#utility.yul\":21375:21378   */\n      0x00\n        /* \"#utility.yul\":21396:21463   */\n      tag_636\n        /* \"#utility.yul\":21460:21462   */\n      0x58\n        /* \"#utility.yul\":21455:21458   */\n      dup4\n        /* \"#utility.yul\":21396:21463   */\n      tag_399\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":21389:21463   */\n      swap2\n      pop\n        /* \"#utility.yul\":21472:21565   */\n      tag_637\n        /* \"#utility.yul\":21561:21564   */\n      dup3\n        /* \"#utility.yul\":21472:21565   */\n      tag_430\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21590:21592   */\n      0x60\n        /* \"#utility.yul\":21585:21588   */\n      dup3\n        /* \"#utility.yul\":21581:21593   */\n      add\n        /* \"#utility.yul\":21574:21593   */\n      swap1\n      pop\n        /* \"#utility.yul\":21233:21599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21605:22024   */\n    tag_310:\n        /* \"#utility.yul\":21771:21775   */\n      0x00\n        /* \"#utility.yul\":21809:21811   */\n      0x20\n        /* \"#utility.yul\":21798:21807   */\n      dup3\n        /* \"#utility.yul\":21794:21812   */\n      add\n        /* \"#utility.yul\":21786:21812   */\n      swap1\n      pop\n        /* \"#utility.yul\":21858:21867   */\n      dup2\n        /* \"#utility.yul\":21852:21856   */\n      dup2\n        /* \"#utility.yul\":21848:21868   */\n      sub\n        /* \"#utility.yul\":21844:21845   */\n      0x00\n        /* \"#utility.yul\":21833:21842   */\n      dup4\n        /* \"#utility.yul\":21829:21846   */\n      add\n        /* \"#utility.yul\":21822:21869   */\n      mstore\n        /* \"#utility.yul\":21886:22017   */\n      tag_639\n        /* \"#utility.yul\":22012:22016   */\n      dup2\n        /* \"#utility.yul\":21886:22017   */\n      tag_431\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21878:22017   */\n      swap1\n      pop\n        /* \"#utility.yul\":21605:22024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22030:22212   */\n    tag_432:\n        /* \"#utility.yul\":22170:22204   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":22166:22167   */\n      0x00\n        /* \"#utility.yul\":22158:22164   */\n      dup3\n        /* \"#utility.yul\":22154:22168   */\n      add\n        /* \"#utility.yul\":22147:22205   */\n      mstore\n        /* \"#utility.yul\":22030:22212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22218:22584   */\n    tag_433:\n        /* \"#utility.yul\":22360:22363   */\n      0x00\n        /* \"#utility.yul\":22381:22448   */\n      tag_642\n        /* \"#utility.yul\":22445:22447   */\n      0x20\n        /* \"#utility.yul\":22440:22443   */\n      dup4\n        /* \"#utility.yul\":22381:22448   */\n      tag_399\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":22374:22448   */\n      swap2\n      pop\n        /* \"#utility.yul\":22457:22550   */\n      tag_643\n        /* \"#utility.yul\":22546:22549   */\n      dup3\n        /* \"#utility.yul\":22457:22550   */\n      tag_432\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":22575:22577   */\n      0x20\n        /* \"#utility.yul\":22570:22573   */\n      dup3\n        /* \"#utility.yul\":22566:22578   */\n      add\n        /* \"#utility.yul\":22559:22578   */\n      swap1\n      pop\n        /* \"#utility.yul\":22218:22584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22590:23009   */\n    tag_333:\n        /* \"#utility.yul\":22756:22760   */\n      0x00\n        /* \"#utility.yul\":22794:22796   */\n      0x20\n        /* \"#utility.yul\":22783:22792   */\n      dup3\n        /* \"#utility.yul\":22779:22797   */\n      add\n        /* \"#utility.yul\":22771:22797   */\n      swap1\n      pop\n        /* \"#utility.yul\":22843:22852   */\n      dup2\n        /* \"#utility.yul\":22837:22841   */\n      dup2\n        /* \"#utility.yul\":22833:22853   */\n      sub\n        /* \"#utility.yul\":22829:22830   */\n      0x00\n        /* \"#utility.yul\":22818:22827   */\n      dup4\n        /* \"#utility.yul\":22814:22831   */\n      add\n        /* \"#utility.yul\":22807:22854   */\n      mstore\n        /* \"#utility.yul\":22871:23002   */\n      tag_645\n        /* \"#utility.yul\":22997:23001   */\n      dup2\n        /* \"#utility.yul\":22871:23002   */\n      tag_433\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":22863:23002   */\n      swap1\n      pop\n        /* \"#utility.yul\":22590:23009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23015:23457   */\n    tag_341:\n        /* \"#utility.yul\":23164:23168   */\n      0x00\n        /* \"#utility.yul\":23202:23204   */\n      0x60\n        /* \"#utility.yul\":23191:23200   */\n      dup3\n        /* \"#utility.yul\":23187:23205   */\n      add\n        /* \"#utility.yul\":23179:23205   */\n      swap1\n      pop\n        /* \"#utility.yul\":23215:23286   */\n      tag_647\n        /* \"#utility.yul\":23283:23284   */\n      0x00\n        /* \"#utility.yul\":23272:23281   */\n      dup4\n        /* \"#utility.yul\":23268:23285   */\n      add\n        /* \"#utility.yul\":23259:23265   */\n      dup7\n        /* \"#utility.yul\":23215:23286   */\n      tag_397\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23296:23368   */\n      tag_648\n        /* \"#utility.yul\":23364:23366   */\n      0x20\n        /* \"#utility.yul\":23353:23362   */\n      dup4\n        /* \"#utility.yul\":23349:23367   */\n      add\n        /* \"#utility.yul\":23340:23346   */\n      dup6\n        /* \"#utility.yul\":23296:23368   */\n      tag_397\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23378:23450   */\n      tag_649\n        /* \"#utility.yul\":23446:23448   */\n      0x40\n        /* \"#utility.yul\":23435:23444   */\n      dup4\n        /* \"#utility.yul\":23431:23449   */\n      add\n        /* \"#utility.yul\":23422:23428   */\n      dup5\n        /* \"#utility.yul\":23378:23450   */\n      tag_394\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":23015:23457   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23463:23579   */\n    tag_434:\n        /* \"#utility.yul\":23533:23554   */\n      tag_651\n        /* \"#utility.yul\":23548:23553   */\n      dup2\n        /* \"#utility.yul\":23533:23554   */\n      tag_395\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":23526:23531   */\n      dup2\n        /* \"#utility.yul\":23523:23555   */\n      eq\n        /* \"#utility.yul\":23513:23573   */\n      tag_652\n      jumpi\n        /* \"#utility.yul\":23569:23570   */\n      0x00\n        /* \"#utility.yul\":23566:23567   */\n      dup1\n        /* \"#utility.yul\":23559:23571   */\n      revert\n        /* \"#utility.yul\":23513:23573   */\n    tag_652:\n        /* \"#utility.yul\":23463:23579   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23585:23722   */\n    tag_435:\n        /* \"#utility.yul\":23639:23644   */\n      0x00\n        /* \"#utility.yul\":23670:23676   */\n      dup2\n        /* \"#utility.yul\":23664:23677   */\n      mload\n        /* \"#utility.yul\":23655:23677   */\n      swap1\n      pop\n        /* \"#utility.yul\":23686:23716   */\n      tag_654\n        /* \"#utility.yul\":23710:23715   */\n      dup2\n        /* \"#utility.yul\":23686:23716   */\n      tag_434\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":23585:23722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23728:24073   */\n    tag_349:\n        /* \"#utility.yul\":23795:23801   */\n      0x00\n        /* \"#utility.yul\":23844:23846   */\n      0x20\n        /* \"#utility.yul\":23832:23841   */\n      dup3\n        /* \"#utility.yul\":23823:23830   */\n      dup5\n        /* \"#utility.yul\":23819:23842   */\n      sub\n        /* \"#utility.yul\":23815:23847   */\n      slt\n        /* \"#utility.yul\":23812:23931   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":23850:23929   */\n      tag_657\n      tag_385\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":23812:23931   */\n    tag_656:\n        /* \"#utility.yul\":23970:23971   */\n      0x00\n        /* \"#utility.yul\":23995:24056   */\n      tag_658\n        /* \"#utility.yul\":24048:24055   */\n      dup5\n        /* \"#utility.yul\":24039:24045   */\n      dup3\n        /* \"#utility.yul\":24028:24037   */\n      dup6\n        /* \"#utility.yul\":24024:24046   */\n      add\n        /* \"#utility.yul\":23995:24056   */\n      tag_435\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":23985:24056   */\n      swap2\n      pop\n        /* \"#utility.yul\":23941:24066   */\n      pop\n        /* \"#utility.yul\":23728:24073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24079:24308   */\n    tag_436:\n        /* \"#utility.yul\":24219:24253   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":24215:24216   */\n      0x00\n        /* \"#utility.yul\":24207:24213   */\n      dup3\n        /* \"#utility.yul\":24203:24217   */\n      add\n        /* \"#utility.yul\":24196:24254   */\n      mstore\n        /* \"#utility.yul\":24288:24300   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24283:24285   */\n      0x20\n        /* \"#utility.yul\":24275:24281   */\n      dup3\n        /* \"#utility.yul\":24271:24286   */\n      add\n        /* \"#utility.yul\":24264:24301   */\n      mstore\n        /* \"#utility.yul\":24079:24308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24314:24680   */\n    tag_437:\n        /* \"#utility.yul\":24456:24459   */\n      0x00\n        /* \"#utility.yul\":24477:24544   */\n      tag_661\n        /* \"#utility.yul\":24541:24543   */\n      0x2a\n        /* \"#utility.yul\":24536:24539   */\n      dup4\n        /* \"#utility.yul\":24477:24544   */\n      tag_399\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":24470:24544   */\n      swap2\n      pop\n        /* \"#utility.yul\":24553:24646   */\n      tag_662\n        /* \"#utility.yul\":24642:24645   */\n      dup3\n        /* \"#utility.yul\":24553:24646   */\n      tag_436\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":24671:24673   */\n      0x40\n        /* \"#utility.yul\":24666:24669   */\n      dup3\n        /* \"#utility.yul\":24662:24674   */\n      add\n        /* \"#utility.yul\":24655:24674   */\n      swap1\n      pop\n        /* \"#utility.yul\":24314:24680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24686:25105   */\n    tag_352:\n        /* \"#utility.yul\":24852:24856   */\n      0x00\n        /* \"#utility.yul\":24890:24892   */\n      0x20\n        /* \"#utility.yul\":24879:24888   */\n      dup3\n        /* \"#utility.yul\":24875:24893   */\n      add\n        /* \"#utility.yul\":24867:24893   */\n      swap1\n      pop\n        /* \"#utility.yul\":24939:24948   */\n      dup2\n        /* \"#utility.yul\":24933:24937   */\n      dup2\n        /* \"#utility.yul\":24929:24949   */\n      sub\n        /* \"#utility.yul\":24925:24926   */\n      0x00\n        /* \"#utility.yul\":24914:24923   */\n      dup4\n        /* \"#utility.yul\":24910:24927   */\n      add\n        /* \"#utility.yul\":24903:24950   */\n      mstore\n        /* \"#utility.yul\":24967:25098   */\n      tag_664\n        /* \"#utility.yul\":25093:25097   */\n      dup2\n        /* \"#utility.yul\":24967:25098   */\n      tag_437\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":24959:25098   */\n      swap1\n      pop\n        /* \"#utility.yul\":24686:25105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25111:25336   */\n    tag_438:\n        /* \"#utility.yul\":25251:25285   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":25247:25248   */\n      0x00\n        /* \"#utility.yul\":25239:25245   */\n      dup3\n        /* \"#utility.yul\":25235:25249   */\n      add\n        /* \"#utility.yul\":25228:25286   */\n      mstore\n        /* \"#utility.yul\":25320:25328   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25315:25317   */\n      0x20\n        /* \"#utility.yul\":25307:25313   */\n      dup3\n        /* \"#utility.yul\":25303:25318   */\n      add\n        /* \"#utility.yul\":25296:25329   */\n      mstore\n        /* \"#utility.yul\":25111:25336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25342:25708   */\n    tag_439:\n        /* \"#utility.yul\":25484:25487   */\n      0x00\n        /* \"#utility.yul\":25505:25572   */\n      tag_667\n        /* \"#utility.yul\":25569:25571   */\n      0x26\n        /* \"#utility.yul\":25564:25567   */\n      dup4\n        /* \"#utility.yul\":25505:25572   */\n      tag_399\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":25498:25572   */\n      swap2\n      pop\n        /* \"#utility.yul\":25581:25674   */\n      tag_668\n        /* \"#utility.yul\":25670:25673   */\n      dup3\n        /* \"#utility.yul\":25581:25674   */\n      tag_438\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":25699:25701   */\n      0x40\n        /* \"#utility.yul\":25694:25697   */\n      dup3\n        /* \"#utility.yul\":25690:25702   */\n      add\n        /* \"#utility.yul\":25683:25702   */\n      swap1\n      pop\n        /* \"#utility.yul\":25342:25708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25714:26133   */\n    tag_359:\n        /* \"#utility.yul\":25880:25884   */\n      0x00\n        /* \"#utility.yul\":25918:25920   */\n      0x20\n        /* \"#utility.yul\":25907:25916   */\n      dup3\n        /* \"#utility.yul\":25903:25921   */\n      add\n        /* \"#utility.yul\":25895:25921   */\n      swap1\n      pop\n        /* \"#utility.yul\":25967:25976   */\n      dup2\n        /* \"#utility.yul\":25961:25965   */\n      dup2\n        /* \"#utility.yul\":25957:25977   */\n      sub\n        /* \"#utility.yul\":25953:25954   */\n      0x00\n        /* \"#utility.yul\":25942:25951   */\n      dup4\n        /* \"#utility.yul\":25938:25955   */\n      add\n        /* \"#utility.yul\":25931:25978   */\n      mstore\n        /* \"#utility.yul\":25995:26126   */\n      tag_670\n        /* \"#utility.yul\":26121:26125   */\n      dup2\n        /* \"#utility.yul\":25995:26126   */\n      tag_439\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":25987:26126   */\n      swap1\n      pop\n        /* \"#utility.yul\":25714:26133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26139:26237   */\n    tag_440:\n        /* \"#utility.yul\":26190:26196   */\n      0x00\n        /* \"#utility.yul\":26224:26229   */\n      dup2\n        /* \"#utility.yul\":26218:26230   */\n      mload\n        /* \"#utility.yul\":26208:26230   */\n      swap1\n      pop\n        /* \"#utility.yul\":26139:26237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26243:26390   */\n    tag_441:\n        /* \"#utility.yul\":26344:26355   */\n      0x00\n        /* \"#utility.yul\":26381:26384   */\n      dup2\n        /* \"#utility.yul\":26366:26384   */\n      swap1\n      pop\n        /* \"#utility.yul\":26243:26390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26396:26642   */\n    tag_442:\n        /* \"#utility.yul\":26477:26478   */\n      0x00\n        /* \"#utility.yul\":26487:26600   */\n    tag_674:\n        /* \"#utility.yul\":26501:26507   */\n      dup4\n        /* \"#utility.yul\":26498:26499   */\n      dup2\n        /* \"#utility.yul\":26495:26508   */\n      lt\n        /* \"#utility.yul\":26487:26600   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":26586:26587   */\n      dup1\n        /* \"#utility.yul\":26581:26584   */\n      dup3\n        /* \"#utility.yul\":26577:26588   */\n      add\n        /* \"#utility.yul\":26571:26589   */\n      mload\n        /* \"#utility.yul\":26567:26568   */\n      dup2\n        /* \"#utility.yul\":26562:26565   */\n      dup5\n        /* \"#utility.yul\":26558:26569   */\n      add\n        /* \"#utility.yul\":26551:26590   */\n      mstore\n        /* \"#utility.yul\":26523:26525   */\n      0x20\n        /* \"#utility.yul\":26520:26521   */\n      dup2\n        /* \"#utility.yul\":26516:26526   */\n      add\n        /* \"#utility.yul\":26511:26526   */\n      swap1\n      pop\n        /* \"#utility.yul\":26487:26600   */\n      jump(tag_674)\n    tag_676:\n        /* \"#utility.yul\":26634:26635   */\n      0x00\n        /* \"#utility.yul\":26625:26631   */\n      dup5\n        /* \"#utility.yul\":26620:26623   */\n      dup5\n        /* \"#utility.yul\":26616:26632   */\n      add\n        /* \"#utility.yul\":26609:26636   */\n      mstore\n        /* \"#utility.yul\":26458:26642   */\n      pop\n        /* \"#utility.yul\":26396:26642   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26648:27034   */\n    tag_443:\n        /* \"#utility.yul\":26752:26755   */\n      0x00\n        /* \"#utility.yul\":26780:26818   */\n      tag_678\n        /* \"#utility.yul\":26812:26817   */\n      dup3\n        /* \"#utility.yul\":26780:26818   */\n      tag_440\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":26834:26922   */\n      tag_679\n        /* \"#utility.yul\":26915:26921   */\n      dup2\n        /* \"#utility.yul\":26910:26913   */\n      dup6\n        /* \"#utility.yul\":26834:26922   */\n      tag_441\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":26827:26922   */\n      swap4\n      pop\n        /* \"#utility.yul\":26931:26996   */\n      tag_680\n        /* \"#utility.yul\":26989:26995   */\n      dup2\n        /* \"#utility.yul\":26984:26987   */\n      dup6\n        /* \"#utility.yul\":26977:26981   */\n      0x20\n        /* \"#utility.yul\":26970:26975   */\n      dup7\n        /* \"#utility.yul\":26966:26982   */\n      add\n        /* \"#utility.yul\":26931:26996   */\n      tag_442\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":27021:27027   */\n      dup1\n        /* \"#utility.yul\":27016:27019   */\n      dup5\n        /* \"#utility.yul\":27012:27028   */\n      add\n        /* \"#utility.yul\":27005:27028   */\n      swap2\n      pop\n        /* \"#utility.yul\":26756:27034   */\n      pop\n        /* \"#utility.yul\":26648:27034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27040:27311   */\n    tag_361:\n        /* \"#utility.yul\":27170:27173   */\n      0x00\n        /* \"#utility.yul\":27192:27285   */\n      tag_682\n        /* \"#utility.yul\":27281:27284   */\n      dup3\n        /* \"#utility.yul\":27272:27278   */\n      dup5\n        /* \"#utility.yul\":27192:27285   */\n      tag_443\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":27185:27285   */\n      swap2\n      pop\n        /* \"#utility.yul\":27302:27305   */\n      dup2\n        /* \"#utility.yul\":27295:27305   */\n      swap1\n      pop\n        /* \"#utility.yul\":27040:27311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27317:27496   */\n    tag_444:\n        /* \"#utility.yul\":27457:27488   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":27453:27454   */\n      0x00\n        /* \"#utility.yul\":27445:27451   */\n      dup3\n        /* \"#utility.yul\":27441:27455   */\n      add\n        /* \"#utility.yul\":27434:27489   */\n      mstore\n        /* \"#utility.yul\":27317:27496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27502:27868   */\n    tag_445:\n        /* \"#utility.yul\":27644:27647   */\n      0x00\n        /* \"#utility.yul\":27665:27732   */\n      tag_685\n        /* \"#utility.yul\":27729:27731   */\n      0x1d\n        /* \"#utility.yul\":27724:27727   */\n      dup4\n        /* \"#utility.yul\":27665:27732   */\n      tag_399\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":27658:27732   */\n      swap2\n      pop\n        /* \"#utility.yul\":27741:27834   */\n      tag_686\n        /* \"#utility.yul\":27830:27833   */\n      dup3\n        /* \"#utility.yul\":27741:27834   */\n      tag_444\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":27859:27861   */\n      0x20\n        /* \"#utility.yul\":27854:27857   */\n      dup3\n        /* \"#utility.yul\":27850:27862   */\n      add\n        /* \"#utility.yul\":27843:27862   */\n      swap1\n      pop\n        /* \"#utility.yul\":27502:27868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27874:28293   */\n    tag_374:\n        /* \"#utility.yul\":28040:28044   */\n      0x00\n        /* \"#utility.yul\":28078:28080   */\n      0x20\n        /* \"#utility.yul\":28067:28076   */\n      dup3\n        /* \"#utility.yul\":28063:28081   */\n      add\n        /* \"#utility.yul\":28055:28081   */\n      swap1\n      pop\n        /* \"#utility.yul\":28127:28136   */\n      dup2\n        /* \"#utility.yul\":28121:28125   */\n      dup2\n        /* \"#utility.yul\":28117:28137   */\n      sub\n        /* \"#utility.yul\":28113:28114   */\n      0x00\n        /* \"#utility.yul\":28102:28111   */\n      dup4\n        /* \"#utility.yul\":28098:28115   */\n      add\n        /* \"#utility.yul\":28091:28138   */\n      mstore\n        /* \"#utility.yul\":28155:28286   */\n      tag_688\n        /* \"#utility.yul\":28281:28285   */\n      dup2\n        /* \"#utility.yul\":28155:28286   */\n      tag_445\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":28147:28286   */\n      swap1\n      pop\n        /* \"#utility.yul\":27874:28293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28299:28398   */\n    tag_446:\n        /* \"#utility.yul\":28351:28357   */\n      0x00\n        /* \"#utility.yul\":28385:28390   */\n      dup2\n        /* \"#utility.yul\":28379:28391   */\n      mload\n        /* \"#utility.yul\":28369:28391   */\n      swap1\n      pop\n        /* \"#utility.yul\":28299:28398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28404:28506   */\n    tag_447:\n        /* \"#utility.yul\":28445:28451   */\n      0x00\n        /* \"#utility.yul\":28496:28498   */\n      0x1f\n        /* \"#utility.yul\":28492:28499   */\n      not\n        /* \"#utility.yul\":28487:28489   */\n      0x1f\n        /* \"#utility.yul\":28480:28485   */\n      dup4\n        /* \"#utility.yul\":28476:28490   */\n      add\n        /* \"#utility.yul\":28472:28500   */\n      and\n        /* \"#utility.yul\":28462:28500   */\n      swap1\n      pop\n        /* \"#utility.yul\":28404:28506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28512:28889   */\n    tag_448:\n        /* \"#utility.yul\":28600:28603   */\n      0x00\n        /* \"#utility.yul\":28628:28667   */\n      tag_692\n        /* \"#utility.yul\":28661:28666   */\n      dup3\n        /* \"#utility.yul\":28628:28667   */\n      tag_446\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":28683:28754   */\n      tag_693\n        /* \"#utility.yul\":28747:28753   */\n      dup2\n        /* \"#utility.yul\":28742:28745   */\n      dup6\n        /* \"#utility.yul\":28683:28754   */\n      tag_399\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":28676:28754   */\n      swap4\n      pop\n        /* \"#utility.yul\":28763:28828   */\n      tag_694\n        /* \"#utility.yul\":28821:28827   */\n      dup2\n        /* \"#utility.yul\":28816:28819   */\n      dup6\n        /* \"#utility.yul\":28809:28813   */\n      0x20\n        /* \"#utility.yul\":28802:28807   */\n      dup7\n        /* \"#utility.yul\":28798:28814   */\n      add\n        /* \"#utility.yul\":28763:28828   */\n      tag_442\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":28853:28882   */\n      tag_695\n        /* \"#utility.yul\":28875:28881   */\n      dup2\n        /* \"#utility.yul\":28853:28882   */\n      tag_447\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":28848:28851   */\n      dup5\n        /* \"#utility.yul\":28844:28883   */\n      add\n        /* \"#utility.yul\":28837:28883   */\n      swap2\n      pop\n        /* \"#utility.yul\":28604:28889   */\n      pop\n        /* \"#utility.yul\":28512:28889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28895:29208   */\n    tag_383:\n        /* \"#utility.yul\":29008:29012   */\n      0x00\n        /* \"#utility.yul\":29046:29048   */\n      0x20\n        /* \"#utility.yul\":29035:29044   */\n      dup3\n        /* \"#utility.yul\":29031:29049   */\n      add\n        /* \"#utility.yul\":29023:29049   */\n      swap1\n      pop\n        /* \"#utility.yul\":29095:29104   */\n      dup2\n        /* \"#utility.yul\":29089:29093   */\n      dup2\n        /* \"#utility.yul\":29085:29105   */\n      sub\n        /* \"#utility.yul\":29081:29082   */\n      0x00\n        /* \"#utility.yul\":29070:29079   */\n      dup4\n        /* \"#utility.yul\":29066:29083   */\n      add\n        /* \"#utility.yul\":29059:29106   */\n      mstore\n        /* \"#utility.yul\":29123:29201   */\n      tag_697\n        /* \"#utility.yul\":29196:29200   */\n      dup2\n        /* \"#utility.yul\":29187:29193   */\n      dup5\n        /* \"#utility.yul\":29123:29201   */\n      tag_448\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":29115:29201   */\n      swap1\n      pop\n        /* \"#utility.yul\":28895:29208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bade2095dc115a0bbad614d685e6db6e2153a409a5a515990d4558d8e51192e564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1052": {
									"entryPoint": null,
									"id": 1052,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_969": {
									"entryPoint": 56,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 64,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612c6e80620001146000396000f3fe6080604052600436106101cd5760003560e01c8063715018a6116100f7578063ace1741c11610095578063f2fde38b11610064578063f2fde38b14610644578063f3fef3a31461066d578063fa09e63014610696578063fb00f3fc146106bf576101cd565b8063ace1741c1461059a578063b81df742146105c5578063ded441c2146105f0578063e985e36714610619576101cd565b80638ce0b9d2116100d15780638ce0b9d2146104de5780638da5cb5b1461051b57806399b7703214610546578063a82524b21461056f576101cd565b8063715018a614610475578063757765f81461048c57806389e6ce1e146104b5576101cd565b80633f6f7ed61161016f57806363b201171161013e57806363b20117146103d857806368f8fc10146104035780636aa5b37f1461041f5780636bcedf9c1461044a576101cd565b80633f6f7ed61461031d578063444ad5ee146103465780635a2696ca1461036f5780635b10bd6a146103af576101cd565b8063226ac321116101ab578063226ac32114610275578063249b7c191461029e5780632c4e722e146102c95780633c00a36c146102f4576101cd565b80630fabdd44146101d2578063115ece4c146101fb578063204120bc14610238575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190611c80565b6106d6565b005b34801561020757600080fd5b50610222600480360381019061021d9190611d0b565b6106f3565b60405161022f9190611d5a565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190611d75565b6108b6565b60405161026c9190611d5a565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611d0b565b6108ce565b005b3480156102aa57600080fd5b506102b36109e3565b6040516102c09190611d5a565b60405180910390f35b3480156102d557600080fd5b506102de6109e9565b6040516102eb9190611d5a565b60405180910390f35b34801561030057600080fd5b5061031b60048036038101906103169190611c80565b6109ef565b005b34801561032957600080fd5b50610344600480360381019061033f9190611c80565b610a41565b005b34801561035257600080fd5b5061036d60048036038101906103689190611d0b565b610a53565b005b34801561037b57600080fd5b5061039660048036038101906103919190611d75565b610b34565b6040516103a69493929190611da2565b60405180910390f35b3480156103bb57600080fd5b506103d660048036038101906103d19190611c80565b610b92565b005b3480156103e457600080fd5b506103ed610bb8565b6040516103fa9190611d5a565b60405180910390f35b61041d60048036038101906104189190611d0b565b610bbe565b005b34801561042b57600080fd5b50610434610f87565b6040516104419190611d5a565b60405180910390f35b34801561045657600080fd5b5061045f610f8d565b60405161046c9190611d5a565b60405180910390f35b34801561048157600080fd5b5061048a610f93565b005b34801561049857600080fd5b506104b360048036038101906104ae9190611c80565b610fa7565b005b3480156104c157600080fd5b506104dc60048036038101906104d79190611d0b565b610fb9565b005b3480156104ea57600080fd5b5061050560048036038101906105009190611d75565b61127c565b6040516105129190611e02565b60405180910390f35b34801561052757600080fd5b5061053061129c565b60405161053d9190611e2c565b60405180910390f35b34801561055257600080fd5b5061056d60048036038101906105689190611c80565b6112c5565b005b34801561057b57600080fd5b506105846112d7565b6040516105919190611d5a565b60405180910390f35b3480156105a657600080fd5b506105af6112dd565b6040516105bc9190611d5a565b60405180910390f35b3480156105d157600080fd5b506105da6112e3565b6040516105e79190611d5a565b60405180910390f35b3480156105fc57600080fd5b5061061760048036038101906106129190611c80565b6112e9565b005b34801561062557600080fd5b5061062e611386565b60405161063b9190611e2c565b60405180910390f35b34801561065057600080fd5b5061066b60048036038101906106669190611d75565b6113ac565b005b34801561067957600080fd5b50610694600480360381019061068f9190611d0b565b61142f565b005b3480156106a257600080fd5b506106bd60048036038101906106b89190611d75565b6114f6565b005b3480156106cb57600080fd5b506106d461161a565b005b6106de611757565b80426106ea9190611e76565b600a8190555050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461087057600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad90611f07565b60405180910390fd5b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610804576000610869565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600354600a610853919061205a565b8461085e91906120a5565b6108689190612116565b5b90506108ac565b6000600154036108815760006108a9565b600154600354600a610893919061205a565b8461089e91906120a5565b6108a89190612116565b5b90505b8091505092915050565b60086020528060005260406000206000915090505481565b6108d6611757565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611f07565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a82826040516109d7929190612147565b60405180910390a15050565b600a5481565b60015481565b6109f7611757565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a3d573d6000803e3d6000fd5b5050565b610a49611757565b8060018190555050565b610a5b611757565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c8282604051610b28929190612147565b60405180910390a15050565b600080600080600154600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b54600a5493509350935093509193509193565b610b9a611757565b4260098190555080600954610baf9190611e76565b600a8190555050565b600b5481565b600954421015610c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfa906121e2565b60405180910390fd5b600a544210610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e9061224e565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c8c57610c876000346106f3565b610c97565b610c9683836106f3565b5b905060045481600b54610caa9190611e76565b1115610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce2906122e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610db657600654811015610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90612372565b60405180910390fd5b610db13382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b610f02565b600654811015610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290612404565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90611f07565b60405180910390fd5b610eb43330848673ffffffffffffffffffffffffffffffffffffffff1661185b909392919063ffffffff16565b610f013382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b80600b6000828254610f149190611e76565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c8484604051610f7a929190612424565b60405180910390a3505050565b60055481565b60045481565b610f9b611757565b610fa560006118e4565b565b610faf611757565b8060058190555050565b610fc1611757565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611030576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611027906124bf565b60405180910390fd5b60008111611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a90612551565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114591906125aa565b60ff1660038190555061119d333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185b909392919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111f89190611e2c565b602060405180830381865afa158015611215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123991906125ec565b6004819055507f03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a8282604051611270929190612147565b60405180910390a15050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6112cd611757565b8060068190555050565b60095481565b60035481565b60065481565b6112f1611757565b600a54421015611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d9061268b565b60405180910390fd5b6113833382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113b4611757565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141a9061271d565b60405180910390fd5b61142c816118e4565b50565b611437611757565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114be906127d5565b60405180910390fd5b6114f233828473ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5050565b6114fe611757565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361158e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115859061288d565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115c99190611e2c565b602060405180830381865afa1580156115e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160a91906125ec565b9050611616828261142f565b5050565b611622611757565b600a54421015611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165e9061268b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116c49190611e2c565b602060405180830381865afa1580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170591906125ec565b90506117543382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b50565b61175f6119a8565b73ffffffffffffffffffffffffffffffffffffffff1661177d61129c565b73ffffffffffffffffffffffffffffffffffffffff16146117d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ca906128f9565b60405180910390fd5b565b6118568363a9059cbb60e01b84846040516024016117f4929190612147565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119b0565b505050565b6118de846323b872dd60e01b85858560405160240161187c93929190612919565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119b0565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611a12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a789092919063ffffffff16565b9050600081511480611a34575080806020019051810190611a33919061297c565b5b611a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6a90612a1b565b60405180910390fd5b505050565b6060611a878484600085611a90565b90509392505050565b606082471015611ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acc90612aad565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611afe9190612b3e565b60006040518083038185875af1925050503d8060008114611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b5091509150611b5187838387611b5d565b92505050949350505050565b60608315611bbf576000835103611bb757611b7785611bd2565b611bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bad90612ba1565b60405180910390fd5b5b829050611bca565b611bc98383611bf5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611c085781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3c9190612c16565b60405180910390fd5b600080fd5b6000819050919050565b611c5d81611c4a565b8114611c6857600080fd5b50565b600081359050611c7a81611c54565b92915050565b600060208284031215611c9657611c95611c45565b5b6000611ca484828501611c6b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd882611cad565b9050919050565b611ce881611ccd565b8114611cf357600080fd5b50565b600081359050611d0581611cdf565b92915050565b60008060408385031215611d2257611d21611c45565b5b6000611d3085828601611cf6565b9250506020611d4185828601611c6b565b9150509250929050565b611d5481611c4a565b82525050565b6000602082019050611d6f6000830184611d4b565b92915050565b600060208284031215611d8b57611d8a611c45565b5b6000611d9984828501611cf6565b91505092915050565b6000608082019050611db76000830187611d4b565b611dc46020830186611d4b565b611dd16040830185611d4b565b611dde6060830184611d4b565b95945050505050565b60008115159050919050565b611dfc81611de7565b82525050565b6000602082019050611e176000830184611df3565b92915050565b611e2681611ccd565b82525050565b6000602082019050611e416000830184611e1d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e8182611c4a565b9150611e8c83611c4a565b9250828201905080821115611ea457611ea3611e47565b5b92915050565b600082825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f742077686974656c69737465640000600082015250565b6000611ef1601e83611eaa565b9150611efc82611ebb565b602082019050919050565b60006020820190508181036000830152611f2081611ee4565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115611f7e57808604811115611f5a57611f59611e47565b5b6001851615611f695780820291505b8081029050611f7785611f27565b9450611f3e565b94509492505050565b600082611f975760019050612053565b81611fa55760009050612053565b8160018114611fbb5760028114611fc557611ff4565b6001915050612053565b60ff841115611fd757611fd6611e47565b5b8360020a915084821115611fee57611fed611e47565b5b50612053565b5060208310610133831016604e8410600b84101617156120295782820a90508381111561202457612023611e47565b5b612053565b6120368484846001611f34565b9250905081840481111561204d5761204c611e47565b5b81810290505b9392505050565b600061206582611c4a565b915061207083611c4a565b925061209d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f87565b905092915050565b60006120b082611c4a565b91506120bb83611c4a565b92508282026120c981611c4a565b915082820484148315176120e0576120df611e47565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061212182611c4a565b915061212c83611c4a565b92508261213c5761213b6120e7565b5b828204905092915050565b600060408201905061215c6000830185611e1d565b6121696020830184611d4b565b9392505050565b7f50726573616c653a2050726573616c6520686173206e6f74207374617274656460008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b60006121cc602483611eaa565b91506121d782612170565b604082019050919050565b600060208201905081810360008301526121fb816121bf565b9050919050565b7f50726573616c653a2050726573616c652068617320656e646564000000000000600082015250565b6000612238601a83611eaa565b915061224382612202565b602082019050919050565b600060208201905081810360008301526122678161222b565b9050919050565b7f50726573616c653a20546f74616c20546f6b656e2053616c652052656163686560008201527f6421000000000000000000000000000000000000000000000000000000000000602082015250565b60006122ca602283611eaa565b91506122d58261226e565b604082019050919050565b600060208201905081810360008301526122f9816122bd565b9050919050565b7f50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e2060008201527f627579206c696d69740000000000000000000000000000000000000000000000602082015250565b600061235c602983611eaa565b915061236782612300565b604082019050919050565b6000602082019050818103600083015261238b8161234f565b9050919050565b7f50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c6960008201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b60006123ee602383611eaa565b91506123f982612392565b604082019050919050565b6000602082019050818103600083015261241d816123e1565b9050919050565b60006040820190506124396000830185611d4b565b6124466020830184611d4b565b9392505050565b7f50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006124a9602a83611eaa565b91506124b48261244d565b604082019050919050565b600060208201905081810360008301526124d88161249c565b9050919050565b7f50726573616c653a20546f74616c20746f6b656e7320666f722073616c65206360008201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000602082015250565b600061253b602d83611eaa565b9150612546826124df565b604082019050919050565b6000602082019050818103600083015261256a8161252e565b9050919050565b600060ff82169050919050565b61258781612571565b811461259257600080fd5b50565b6000815190506125a48161257e565b92915050565b6000602082840312156125c0576125bf611c45565b5b60006125ce84828501612595565b91505092915050565b6000815190506125e681611c54565b92915050565b60006020828403121561260257612601611c45565b5b6000612610848285016125d7565b91505092915050565b7f50726573616c653a2050726573616c6520686173206e6f7420656e646564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000612675602283611eaa565b915061268082612619565b604082019050919050565b600060208201905081810360008301526126a481612668565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612707602683611eaa565b9150612712826126ab565b604082019050919050565b60006020820190508181036000830152612736816126fa565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f617753616c65546f6b656e282920696e73746561640000000000000000000000604082015250565b60006127bf605583611eaa565b91506127ca8261273d565b606082019050919050565b600060208201905081810360008301526127ee816127b2565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f6177416c6c53616c65546f6b656e282920696e73746561640000000000000000604082015250565b6000612877605883611eaa565b9150612882826127f5565b606082019050919050565b600060208201905081810360008301526128a68161286a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128e3602083611eaa565b91506128ee826128ad565b602082019050919050565b60006020820190508181036000830152612912816128d6565b9050919050565b600060608201905061292e6000830186611e1d565b61293b6020830185611e1d565b6129486040830184611d4b565b949350505050565b61295981611de7565b811461296457600080fd5b50565b60008151905061297681612950565b92915050565b60006020828403121561299257612991611c45565b5b60006129a084828501612967565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612a05602a83611eaa565b9150612a10826129a9565b604082019050919050565b60006020820190508181036000830152612a34816129f8565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612a97602683611eaa565b9150612aa282612a3b565b604082019050919050565b60006020820190508181036000830152612ac681612a8a565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612b01578082015181840152602081019050612ae6565b60008484015250505050565b6000612b1882612acd565b612b228185612ad8565b9350612b32818560208601612ae3565b80840191505092915050565b6000612b4a8284612b0d565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612b8b601d83611eaa565b9150612b9682612b55565b602082019050919050565b60006020820190508181036000830152612bba81612b7e565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612be882612bc1565b612bf28185611eaa565b9350612c02818560208601612ae3565b612c0b81612bcc565b840191505092915050565b60006020820190508181036000830152612c308184612bdd565b90509291505056fea2646970667358221220bade2095dc115a0bbad614d685e6db6e2153a409a5a515990d4558d8e51192e564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x40 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2C6E DUP1 PUSH3 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xACE1741C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xFB00F3FC EQ PUSH2 0x6BF JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xACE1741C EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xB81DF742 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xDED441C2 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x619 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8CE0B9D2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8CE0B9D2 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x99B77032 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x56F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x757765F8 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x89E6CE1E EQ PUSH2 0x4B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x6AA5B37F EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x44A JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x444AD5EE EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5A2696CA EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x5B10BD6A EQ PUSH2 0x3AF JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x226AC321 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x226AC321 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x2F4 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xFABDD44 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48A PUSH2 0xF93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x530 PUSH2 0x129C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x12C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x584 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DA PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x12E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x13AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x694 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D4 PUSH2 0x161A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DE PUSH2 0x1757 JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x870 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x804 JUMPI PUSH1 0x0 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST DUP5 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x881 JUMPI PUSH1 0x0 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST DUP5 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F7 PUSH2 0x1757 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA49 PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0x1757 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 SLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFA SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3E SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8C JUMPI PUSH2 0xC87 PUSH1 0x0 CALLVALUE PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xC96 DUP4 DUP4 PUSH2 0x6F3 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0xB SLOAD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST GT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB6 JUMPI PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5B SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB1 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB4 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF01 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF7A SWAP3 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x1757 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x0 PUSH2 0x18E4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFC1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1073 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x119D CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12CD PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12F1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x1336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x13B4 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP1 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x18E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1437 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F2 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C9 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1616 DUP3 DUP3 PUSH2 0x142F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1622 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1705 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1754 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x175F PUSH2 0x19A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177D PUSH2 0x129C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1856 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17F4 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18DE DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x187C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A12 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A78 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A34 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x297C JUMP JUMPDEST JUMPDEST PUSH2 0x1A73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP1 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A87 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A90 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACC SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP2 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B51 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BBF JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1BB7 JUMPI PUSH2 0x1B77 DUP6 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAD SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x1BC9 DUP4 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1C08 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x2C16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5D DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C96 JUMPI PUSH2 0x1C95 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD8 DUP3 PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE8 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D05 DUP2 PUSH2 0x1CDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D21 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D99 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DB7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1DE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E26 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E81 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8C DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F742077686974656C69737465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF1 PUSH1 0x1E DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFC DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F20 DUP2 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F7E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F69 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F77 DUP6 PUSH2 0x1F27 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F3E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F97 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2053 JUMP JUMPDEST DUP2 PUSH2 0x1FA5 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2053 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FBB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1FC5 JUMPI PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2053 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FD7 JUMPI PUSH2 0x1FD6 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1FEE JUMPI PUSH2 0x1FED PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2053 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2029 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x2036 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2065 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2070 DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP PUSH2 0x209D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B0 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x20BB DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20C9 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2121 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x212C DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x20E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x215C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x2169 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2079657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC PUSH1 0x24 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x21D7 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FB DUP2 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C652068617320656E646564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0x1A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2243 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6421000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CA PUSH1 0x22 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x22D5 DUP3 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F9 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x627579206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C PUSH1 0x29 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2367 DUP3 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238B DUP2 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE PUSH1 0x23 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP3 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241D DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A9 PUSH1 0x2A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x24B4 DUP3 PUSH2 0x244D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D8 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E6E6F74206265207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253B PUSH1 0x2D DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256A DUP2 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2587 DUP2 PUSH2 0x2571 JUMP JUMPDEST DUP2 EQ PUSH2 0x2592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A4 DUP2 PUSH2 0x257E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C0 JUMPI PUSH2 0x25BF PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25CE DUP5 DUP3 DUP6 ADD PUSH2 0x2595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2610 DUP5 DUP3 DUP6 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F7420656E6465642079 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2675 PUSH1 0x22 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP3 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A4 DUP2 PUSH2 0x2668 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2707 PUSH1 0x26 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2712 DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2736 DUP2 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x617753616C65546F6B656E282920696E73746561640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BF PUSH1 0x55 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x27CA DUP3 PUSH2 0x273D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27EE DUP2 PUSH2 0x27B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6177416C6C53616C65546F6B656E282920696E73746561640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2877 PUSH1 0x58 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A6 DUP2 PUSH2 0x286A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E3 PUSH1 0x20 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x28EE DUP3 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 PUSH2 0x28D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x292E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x293B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x2948 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2976 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2992 JUMPI PUSH2 0x2991 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29A0 DUP5 DUP3 DUP6 ADD PUSH2 0x2967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A05 PUSH1 0x2A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A10 DUP3 PUSH2 0x29A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A34 DUP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A97 PUSH1 0x26 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B01 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B18 DUP3 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2B22 DUP2 DUP6 PUSH2 0x2AD8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AE3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP3 DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8B PUSH1 0x1D DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBA DUP2 PUSH2 0x2B7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 PUSH2 0x2BC1 JUMP JUMPDEST PUSH2 0x2BF2 DUP2 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP4 POP PUSH2 0x2C02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AE3 JUMP JUMPDEST PUSH2 0x2C0B DUP2 PUSH2 0x2BCC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C30 DUP2 DUP5 PUSH2 0x2BDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xDE KECCAK256 SWAP6 0xDC GT GAS SIGNEXTEND 0xBA 0xD6 EQ 0xD6 DUP6 0xE6 0xDB PUSH15 0x2153A409A5A515990D4558D8E51192 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "262:6627:7:-:0;;;1142:16;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;262:6627:7;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;262:6627:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_578": {
									"entryPoint": 6576,
									"id": 578,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5975,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_969": {
									"entryPoint": 6568,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_956": {
									"entryPoint": 7157,
									"id": 956,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 6372,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addWhiteListedToken_1229": {
									"entryPoint": 2643,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyToken_1457": {
									"entryPoint": 3006,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@fetchDataForFrontend_1551": {
									"entryPoint": 2868,
									"id": 1551,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@functionCallWithValue_781": {
									"entryPoint": 6800,
									"id": 781,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_717": {
									"entryPoint": 6776,
									"id": 717,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTokenAmount_1340": {
									"entryPoint": 1779,
									"id": 1340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_645": {
									"entryPoint": 7122,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxBuyLimit_1004": {
									"entryPoint": 3975,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minBuyLimit_1006": {
									"entryPoint": 4835,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 4764,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleEndTime_1018": {
									"entryPoint": 2531,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleStartTime_1016": {
									"entryPoint": 4823,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rate_996": {
									"entryPoint": 2537,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 3987,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_311": {
									"entryPoint": 6235,
									"id": 311,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_284": {
									"entryPoint": 6101,
									"id": 284,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleTokenDec_1000": {
									"entryPoint": 4829,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleToken_998": {
									"entryPoint": 4998,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMaxBuyLimit_1481": {
									"entryPoint": 4007,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinBuyLimit_1469": {
									"entryPoint": 4805,
									"id": 1469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSaleTokenParams_1168": {
									"entryPoint": 4025,
									"id": 1168,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startAndSetPresaleEndTime_1187": {
									"entryPoint": 2962,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenPrices_1014": {
									"entryPoint": 2230,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenWL_1010": {
									"entryPoint": 4732,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_1020": {
									"entryPoint": 3000,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensforSale_1002": {
									"entryPoint": 3981,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 5036,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upateTime_1202": {
									"entryPoint": 1750,
									"id": 1202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateEthRate_1241": {
									"entryPoint": 2625,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTokenRate_1269": {
									"entryPoint": 2254,
									"id": 1269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_912": {
									"entryPoint": 7005,
									"id": 912,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawAllSaleToken_1529": {
									"entryPoint": 5658,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_1609": {
									"entryPoint": 5366,
									"id": 1609,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCurrency_1626": {
									"entryPoint": 2543,
									"id": 1626,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawSaleToken_1500": {
									"entryPoint": 4841,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1577": {
									"entryPoint": 5167,
									"id": 1577,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 9642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10521,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c": {
									"entryPoint": 9293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503": {
									"entryPoint": 9753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 9598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29211:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:8"
															},
															"nodeType": "YulIf",
															"src": "766:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:8",
														"type": ""
													}
												],
												"src": "690:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:8",
														"type": ""
													}
												],
												"src": "1025:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:8",
														"type": ""
													}
												],
												"src": "1157:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:8"
															},
															"nodeType": "YulIf",
															"src": "1312:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:8",
														"type": ""
													}
												],
												"src": "1259:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:8",
														"type": ""
													}
												],
												"src": "1387:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1661:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1663:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1663:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1645:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:32:8"
															},
															"nodeType": "YulIf",
															"src": "1625:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1754:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1769:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1773:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1798:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1833:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1844:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1829:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1853:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1808:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1798:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1881:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1896:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1900:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:8",
														"type": ""
													}
												],
												"src": "1532:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2065:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:8",
														"type": ""
													}
												],
												"src": "2012:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2206:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2218:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2229:4:8",
														"type": ""
													}
												],
												"src": "2136:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:8"
															},
															"nodeType": "YulIf",
															"src": "2440:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:8",
														"type": ""
													}
												],
												"src": "2364:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2881:371:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2891:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2903:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2914:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2899:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2891:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2972:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2985:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2996:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2928:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3053:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3009:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3009:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3135:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3091:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3091:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3217:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3230:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3241:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3173:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3173:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2829:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2841:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2849:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2857:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2865:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2876:4:8",
														"type": ""
													}
												],
												"src": "2699:553:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3300:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3310:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3335:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3328:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3310:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3282:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3292:7:8",
														"type": ""
													}
												],
												"src": "3258:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3430:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3435:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3435:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3401:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3408:3:8",
														"type": ""
													}
												],
												"src": "3354:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3669:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3607:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3607:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3469:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3790:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3772:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3760:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3738:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3745:3:8",
														"type": ""
													}
												],
												"src": "3685:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3907:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3917:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3929:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3917:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3997:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4010:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4021:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4006:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3953:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3953:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3879:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3902:4:8",
														"type": ""
													}
												],
												"src": "3809:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4065:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4082:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4085:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4075:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4179:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4172:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4206:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4037:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4277:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4300:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4282:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4277:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4311:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4334:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4316:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4311:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4345:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4356:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4359:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4345:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4385:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4387:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4387:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4387:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4377:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4380:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4374:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:10:8"
															},
															"nodeType": "YulIf",
															"src": "4371:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4254:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4257:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4263:3:8",
														"type": ""
													}
												],
												"src": "4223:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4516:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4533:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4526:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4526:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4554:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4573:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4569:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4554:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4488:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4493:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4504:11:8",
														"type": ""
													}
												],
												"src": "4420:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4701:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4723:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4731:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4719:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4735:32:8",
																		"type": "",
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4693:6:8",
														"type": ""
													}
												],
												"src": "4595:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4927:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4937:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5003:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4944:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4937:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5109:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																	"nodeType": "YulIdentifier",
																	"src": "5020:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5122:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5133:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5138:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4915:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4923:3:8",
														"type": ""
													}
												],
												"src": "4781:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5324:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5334:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5346:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5357:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5334:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5392:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5400:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5396:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5396:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5370:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5426:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5560:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5434:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5426:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5319:4:8",
														"type": ""
													}
												],
												"src": "5153:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5629:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5639:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5664:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5667:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5639:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5610:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5620:8:8",
														"type": ""
													}
												],
												"src": "5578:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5759:775:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5769:15:8",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5778:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5769:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5793:14:8",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5802:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5793:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5851:677:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5939:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5941:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5941:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5941:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5917:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5927:3:8"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5932:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5923:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5923:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5914:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5914:24:8"
																		},
																		"nodeType": "YulIf",
																		"src": "5911:50:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6006:419:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6386:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6399:5:8"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6406:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6395:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6395:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6386:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5981:8:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5991:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5977:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5977:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "5974:451:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6438:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6450:4:8"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6456:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6446:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6446:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6438:4:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6474:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6509:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "6486:22:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6486:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6474:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5827:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5824:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5824:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5840:2:8",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5820:3:8",
																"statements": []
															},
															"src": "5816:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5714:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5722:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5729:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5739:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5747:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5754:4:8",
														"type": ""
													}
												],
												"src": "5686:848:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6600:1013:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6795:20:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6797:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6806:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6797:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6808:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6785:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:16:8"
															},
															"nodeType": "YulIf",
															"src": "6775:40:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6840:20:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6842:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6851:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6842:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6853:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6834:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:12:8"
															},
															"nodeType": "YulIf",
															"src": "6824:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6970:20:8",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6972:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6981:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6972:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6983:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6963:27:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7014:176:8",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7049:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7051:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7051:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7051:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7034:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7044:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7031:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7031:17:8"
																				},
																				"nodeType": "YulIf",
																				"src": "7028:43:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7084:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7097:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7100:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "7093:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7093:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7084:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7140:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7142:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7142:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7142:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7128:5:8"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7135:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7125:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7125:14:8"
																				},
																				"nodeType": "YulIf",
																				"src": "7122:40:8"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7175:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6999:191:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6920:4:8"
															},
															"nodeType": "YulSwitch",
															"src": "6913:277:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7322:123:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7336:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7349:4:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7355:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7345:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7345:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7336:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7395:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7397:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7397:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7397:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7383:5:8"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7390:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7380:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7380:14:8"
																		},
																		"nodeType": "YulIf",
																		"src": "7377:40:8"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7430:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7225:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7231:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7222:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7222:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7239:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7249:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7236:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7236:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7218:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7218:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7274:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7280:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7271:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7271:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7289:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7299:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7286:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7286:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7267:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7202:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:111:8"
															},
															"nodeType": "YulIf",
															"src": "7199:246:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7455:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7492:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7498:8:8"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7508:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7470:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7455:5:8"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7551:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7553:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7553:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7553:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7528:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7539:3:8"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7544:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7535:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7525:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:25:8"
															},
															"nodeType": "YulIf",
															"src": "7522:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7582:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7595:5:8"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7602:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7582:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6570:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6576:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6586:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6594:5:8",
														"type": ""
													}
												],
												"src": "6540:1073:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:219:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7695:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7721:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7703:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7695:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7735:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7765:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7747:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:27:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7735:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7784:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7814:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7820:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7830:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7793:20:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7793:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7784:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7660:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7666:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7679:5:8",
														"type": ""
													}
												],
												"src": "7619:285:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7958:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7968:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7991:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7973:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7968:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8002:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8025:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8007:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8002:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8036:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8059:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8062:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8055:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8055:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8040:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8073:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8102:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8084:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8084:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8073:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8291:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8293:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8293:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8293:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8224:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8217:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8217:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8247:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8254:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8263:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8250:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8250:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8244:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8244:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8197:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8197:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8177:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:113:8"
															},
															"nodeType": "YulIf",
															"src": "8174:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7941:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7944:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7950:7:8",
														"type": ""
													}
												],
												"src": "7910:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8354:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8371:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8374:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8364:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8468:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8461:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8326:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8554:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8564:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8587:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8569:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8564:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8598:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8621:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8603:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8603:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8598:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8645:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8647:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8647:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8647:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8642:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:9:8"
															},
															"nodeType": "YulIf",
															"src": "8632:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8677:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8686:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8689:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8682:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8682:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8677:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8543:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8546:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8552:1:8",
														"type": ""
													}
												],
												"src": "8512:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8839:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8851:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8847:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8839:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8919:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8932:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8943:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8928:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8928:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8875:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8875:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8875:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9000:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9013:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9024:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9009:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9009:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8956:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8956:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8956:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8793:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8805:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8813:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8824:4:8",
														"type": ""
													}
												],
												"src": "8703:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9147:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9169:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9177:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c6520686173206e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9181:34:8",
																		"type": "",
																		"value": "Presale: Presale has not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9158:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9237:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9245:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:15:8"
																	},
																	{
																		"hexValue": "20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9250:6:8",
																		"type": "",
																		"value": " yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9226:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9139:6:8",
														"type": ""
													}
												],
												"src": "9041:223:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9426:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9492:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9497:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9433:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9426:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9598:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																	"nodeType": "YulIdentifier",
																	"src": "9509:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9509:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9611:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9618:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9618:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9611:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9404:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9412:3:8",
														"type": ""
													}
												],
												"src": "9270:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9813:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9823:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9835:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9846:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9831:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9823:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9881:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9889:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9895:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9859:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9915:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10049:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9923:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9923:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9915:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9793:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9808:4:8",
														"type": ""
													}
												],
												"src": "9642:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10173:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10195:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10203:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c652068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10207:28:8",
																		"type": "",
																		"value": "Presale: Presale has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10184:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10184:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10165:6:8",
														"type": ""
													}
												],
												"src": "10067:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10395:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10405:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10471:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10412:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10405:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10577:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																	"nodeType": "YulIdentifier",
																	"src": "10488:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10488:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10590:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10601:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10606:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10597:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10590:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10383:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10391:3:8",
														"type": ""
													}
												],
												"src": "10249:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10792:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10802:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10814:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10825:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10810:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10802:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10849:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10860:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10845:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10845:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10868:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10874:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10864:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10838:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10838:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10838:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10894:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11028:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10902:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10902:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10894:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10772:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10787:4:8",
														"type": ""
													}
												],
												"src": "10621:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11152:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11174:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11182:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11170:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11170:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f74616c20546f6b656e2053616c6520526561636865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11186:34:8",
																		"type": "",
																		"value": "Presale: Total Token Sale Reache"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11163:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11163:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11242:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11250:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11238:15:8"
																	},
																	{
																		"hexValue": "6421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11255:4:8",
																		"type": "",
																		"value": "d!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11231:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11231:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11144:6:8",
														"type": ""
													}
												],
												"src": "11046:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11419:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11429:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11495:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11500:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11436:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11436:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11601:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																	"nodeType": "YulIdentifier",
																	"src": "11512:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11512:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11512:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11614:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11625:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11621:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11621:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11614:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11407:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11415:3:8",
														"type": ""
													}
												],
												"src": "11273:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11826:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11838:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11849:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11826:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11873:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11884:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11869:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11869:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11892:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11898:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11888:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11888:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11862:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11862:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11918:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12052:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11926:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11918:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11796:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11811:4:8",
														"type": ""
													}
												],
												"src": "11645:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12176:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12206:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12194:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12210:34:8",
																		"type": "",
																		"value": "Presale: Token amount below min "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12266:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12274:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12262:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12262:15:8"
																	},
																	{
																		"hexValue": "627579206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12279:11:8",
																		"type": "",
																		"value": "buy limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12255:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12255:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12168:6:8",
														"type": ""
													}
												],
												"src": "12070:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12450:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12460:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12526:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12531:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12467:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12467:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12460:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12632:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																	"nodeType": "YulIdentifier",
																	"src": "12543:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12543:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12543:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12645:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12656:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12661:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12652:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12652:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12645:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12438:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12446:3:8",
														"type": ""
													}
												],
												"src": "12304:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12847:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12857:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12869:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12880:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12865:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12865:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12904:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12915:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12900:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12923:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12929:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12919:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12919:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12893:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12893:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12893:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12949:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13083:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12957:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12949:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12827:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12842:4:8",
														"type": ""
													}
												],
												"src": "12676:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13207:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13229:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13237:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13225:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13225:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13241:34:8",
																		"type": "",
																		"value": "Presale: Amount below min buy li"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13218:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13218:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13297:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13305:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13293:15:8"
																	},
																	{
																		"hexValue": "6d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13310:5:8",
																		"type": "",
																		"value": "mit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13286:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13286:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13199:6:8",
														"type": ""
													}
												],
												"src": "13101:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13475:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13485:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13551:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13556:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13492:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13657:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																	"nodeType": "YulIdentifier",
																	"src": "13568:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13568:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13568:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13670:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13681:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13686:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13677:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13677:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13670:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13463:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13471:3:8",
														"type": ""
													}
												],
												"src": "13329:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13872:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13882:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13894:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13905:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13890:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13890:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13882:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13929:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13940:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13925:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13925:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13948:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13954:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13944:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13944:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13974:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14108:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13982:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13982:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13974:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13852:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13867:4:8",
														"type": ""
													}
												],
												"src": "13701:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14252:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14262:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14274:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14285:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14270:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14270:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14262:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14342:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14355:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14366:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14298:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14298:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14298:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14423:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14436:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14447:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14432:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14432:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14379:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14379:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14379:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14228:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14236:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14247:4:8",
														"type": ""
													}
												],
												"src": "14126:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14570:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14600:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14588:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14588:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14604:34:8",
																		"type": "",
																		"value": "Presale: Sale token cannot be ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14581:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14581:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14581:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14660:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14668:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14656:15:8"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14673:12:8",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14649:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14649:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14562:6:8",
														"type": ""
													}
												],
												"src": "14464:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14845:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14855:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14921:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14926:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14862:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14862:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14855:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15027:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																	"nodeType": "YulIdentifier",
																	"src": "14938:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14938:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14938:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15040:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15051:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15056:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15047:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15047:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15040:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14833:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14841:3:8",
														"type": ""
													}
												],
												"src": "14699:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15242:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15252:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15264:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15275:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15260:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15260:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15252:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15299:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15310:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15295:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15295:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15318:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15314:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15288:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15288:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15288:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15344:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15478:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15352:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15352:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15344:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15222:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15237:4:8",
														"type": ""
													}
												],
												"src": "15071:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15602:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15624:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15632:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15620:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15636:34:8",
																		"type": "",
																		"value": "Presale: Total tokens for sale c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15613:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15613:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15613:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15692:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15700:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15688:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15688:15:8"
																	},
																	{
																		"hexValue": "616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15705:15:8",
																		"type": "",
																		"value": "annot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15681:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15681:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15681:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15594:6:8",
														"type": ""
													}
												],
												"src": "15496:232:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15880:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15890:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15956:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15961:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15897:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15890:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16062:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																	"nodeType": "YulIdentifier",
																	"src": "15973:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15973:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15973:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16075:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16086:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16091:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16082:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16082:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16075:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15868:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15876:3:8",
														"type": ""
													}
												],
												"src": "15734:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16277:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16287:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16299:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16310:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16295:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16287:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16334:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16345:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16330:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16353:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16359:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16349:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16349:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16323:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16323:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16323:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16379:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16513:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16387:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16387:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16379:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16257:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16272:4:8",
														"type": ""
													}
												],
												"src": "16106:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16574:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16584:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16599:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16606:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16595:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16595:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16584:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16556:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16566:7:8",
														"type": ""
													}
												],
												"src": "16531:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16664:77:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16719:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16728:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16731:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16721:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16721:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16721:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16687:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16710:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "16694:15:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16694:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16684:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16684:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16677:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16677:41:8"
															},
															"nodeType": "YulIf",
															"src": "16674:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16657:5:8",
														"type": ""
													}
												],
												"src": "16623:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16808:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16818:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16833:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16827:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16827:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16818:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16874:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "16849:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16849:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16849:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16786:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16794:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16802:5:8",
														"type": ""
													}
												],
												"src": "16747:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16967:272:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17013:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17015:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17015:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17015:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16988:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16997:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16984:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17009:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16980:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16980:32:8"
															},
															"nodeType": "YulIf",
															"src": "16977:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "17106:126:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17121:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17135:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17125:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17150:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17194:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17205:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17190:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17190:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17214:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17160:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17160:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17150:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16937:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16948:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16960:6:8",
														"type": ""
													}
												],
												"src": "16892:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17308:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17318:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17333:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17327:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17327:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17318:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17376:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17349:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17349:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17349:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17286:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17294:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17302:5:8",
														"type": ""
													}
												],
												"src": "17245:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17471:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17517:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17519:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17519:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17519:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17492:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17501:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17488:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17488:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17513:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17484:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17484:32:8"
															},
															"nodeType": "YulIf",
															"src": "17481:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "17610:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17625:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17639:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17629:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17654:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17700:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17711:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17696:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17696:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17720:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17664:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17664:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17654:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17441:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17452:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17464:6:8",
														"type": ""
													}
												],
												"src": "17394:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17857:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17879:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17887:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17875:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17875:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c6520686173206e6f7420656e6465642079",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17891:34:8",
																		"type": "",
																		"value": "Presale: Presale has not ended y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17868:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17868:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17868:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17947:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17955:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17943:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17943:15:8"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17960:4:8",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17936:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17936:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17936:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17849:6:8",
														"type": ""
													}
												],
												"src": "17751:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18124:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18134:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18200:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18205:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18141:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18134:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18306:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																	"nodeType": "YulIdentifier",
																	"src": "18217:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18217:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18217:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18319:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18330:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18335:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18326:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18319:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18112:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18120:3:8",
														"type": ""
													}
												],
												"src": "17978:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18521:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18531:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18543:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18554:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18539:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18539:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18531:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18578:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18589:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18574:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18574:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18597:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18603:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18593:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18593:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18567:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18567:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18567:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18623:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18757:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18631:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18623:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18501:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18516:4:8",
														"type": ""
													}
												],
												"src": "18350:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18881:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18903:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18911:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18899:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18899:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18915:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18892:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18892:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18892:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18971:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18979:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18967:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18984:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18960:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18960:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18960:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18873:6:8",
														"type": ""
													}
												],
												"src": "18775:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19152:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19162:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19228:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19233:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19169:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19169:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19162:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19334:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "19245:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19245:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19245:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19347:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19358:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19363:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19354:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19347:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19140:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19148:3:8",
														"type": ""
													}
												],
												"src": "19006:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19549:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19559:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19571:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19582:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19567:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19567:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19559:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19606:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19617:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19602:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19602:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19625:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19631:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19621:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19621:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19595:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19595:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19595:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19651:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19785:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19659:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19659:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19651:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19529:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19544:4:8",
														"type": ""
													}
												],
												"src": "19378:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19909:203:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19931:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19939:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19927:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19927:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19943:34:8",
																		"type": "",
																		"value": "Presale: Cannot withdraw sale to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19920:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19920:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19920:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19999:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20007:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19995:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19995:15:8"
																	},
																	{
																		"hexValue": "6b656e20776974682074686973206d6574686f642c2075736520776974686472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20012:34:8",
																		"type": "",
																		"value": "ken with this method, use withdr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19988:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19988:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19988:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20068:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20076:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20064:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20064:15:8"
																	},
																	{
																		"hexValue": "617753616c65546f6b656e282920696e7374656164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20081:23:8",
																		"type": "",
																		"value": "awSaleToken() instead"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20057:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20057:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19901:6:8",
														"type": ""
													}
												],
												"src": "19803:309:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20264:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20274:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20340:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20345:2:8",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20281:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20281:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20274:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20446:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																	"nodeType": "YulIdentifier",
																	"src": "20357:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20357:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20357:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20459:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20470:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20475:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20466:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20466:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20459:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20252:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20260:3:8",
														"type": ""
													}
												],
												"src": "20118:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20661:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20671:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20683:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20694:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20679:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20679:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20671:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20718:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20729:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20714:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20737:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20743:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20733:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20733:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20707:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20707:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20707:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20763:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20897:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20771:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20771:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20763:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20641:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20656:4:8",
														"type": ""
													}
												],
												"src": "20490:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21021:206:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21043:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21051:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21039:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21055:34:8",
																		"type": "",
																		"value": "Presale: Cannot withdraw sale to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21032:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21032:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21032:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21111:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21119:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21107:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21107:15:8"
																	},
																	{
																		"hexValue": "6b656e20776974682074686973206d6574686f642c2075736520776974686472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21124:34:8",
																		"type": "",
																		"value": "ken with this method, use withdr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21100:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21100:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21100:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21180:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21188:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21176:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21176:15:8"
																	},
																	{
																		"hexValue": "6177416c6c53616c65546f6b656e282920696e7374656164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21193:26:8",
																		"type": "",
																		"value": "awAllSaleToken() instead"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21169:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21169:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21169:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21013:6:8",
														"type": ""
													}
												],
												"src": "20915:312:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21379:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21389:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21455:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21460:2:8",
																		"type": "",
																		"value": "88"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21396:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21396:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21389:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21561:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																	"nodeType": "YulIdentifier",
																	"src": "21472:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21472:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21472:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21574:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21585:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21590:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21581:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21581:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21574:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21367:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21375:3:8",
														"type": ""
													}
												],
												"src": "21233:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21776:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21786:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21798:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21809:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21794:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21786:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21833:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21844:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21829:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21852:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21858:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21848:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21822:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21822:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21822:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21878:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22012:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21886:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21886:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21878:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21756:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21771:4:8",
														"type": ""
													}
												],
												"src": "21605:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22136:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22158:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22166:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22154:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22154:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22170:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22147:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22147:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22147:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22128:6:8",
														"type": ""
													}
												],
												"src": "22030:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22364:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22374:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22440:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22445:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22381:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22381:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22374:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22546:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "22457:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22457:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22457:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22559:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22570:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22575:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22566:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22566:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22559:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22352:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22360:3:8",
														"type": ""
													}
												],
												"src": "22218:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22761:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22771:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22783:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22794:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22779:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22779:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22771:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22818:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22829:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22814:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22814:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22837:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22843:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22833:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22807:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22807:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22807:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22863:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22997:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22871:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22871:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22863:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22741:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22756:4:8",
														"type": ""
													}
												],
												"src": "22590:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23169:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23179:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23191:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23202:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23187:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23187:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23179:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23259:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23272:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23283:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23268:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23215:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23215:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23215:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23340:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23353:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23364:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23349:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23349:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23296:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23296:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23296:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23422:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23435:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23446:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23431:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23431:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23378:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23378:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23378:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23125:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23137:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23145:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23153:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23164:4:8",
														"type": ""
													}
												],
												"src": "23015:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23503:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23557:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23566:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23569:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23559:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23559:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23559:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23526:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23548:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "23533:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23533:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23523:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23523:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23516:40:8"
															},
															"nodeType": "YulIf",
															"src": "23513:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23496:5:8",
														"type": ""
													}
												],
												"src": "23463:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23645:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23655:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "23670:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23664:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23664:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23655:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23710:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "23686:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23686:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23686:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23623:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23631:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23639:5:8",
														"type": ""
													}
												],
												"src": "23585:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23802:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23848:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "23850:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23850:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23850:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23823:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23832:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23819:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23819:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23844:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23815:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23815:32:8"
															},
															"nodeType": "YulIf",
															"src": "23812:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "23941:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23956:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23970:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23960:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23985:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "24028:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "24039:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24024:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24024:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24048:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "23995:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23995:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23985:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23772:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23783:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23795:6:8",
														"type": ""
													}
												],
												"src": "23728:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24185:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24207:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24215:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24203:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24203:14:8"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24219:34:8",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24196:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24196:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24275:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24283:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24271:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24288:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24264:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24264:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24264:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24177:6:8",
														"type": ""
													}
												],
												"src": "24079:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24460:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24470:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24536:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24541:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24477:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24477:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24470:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24642:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "24553:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24553:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24553:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24655:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24666:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24671:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24662:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24662:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24655:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24448:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24456:3:8",
														"type": ""
													}
												],
												"src": "24314:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24857:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24914:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24925:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24910:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24933:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24939:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24929:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24903:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24903:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24903:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24959:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25093:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24967:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24967:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24959:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24837:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24852:4:8",
														"type": ""
													}
												],
												"src": "24686:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25217:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25239:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25247:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25235:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25251:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25228:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25228:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25307:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25315:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25303:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25303:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25320:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25296:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25296:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25209:6:8",
														"type": ""
													}
												],
												"src": "25111:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25488:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25498:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25564:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25569:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25505:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25505:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25498:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25670:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "25581:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25581:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25581:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25683:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25694:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25699:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25690:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25690:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25683:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25476:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25484:3:8",
														"type": ""
													}
												],
												"src": "25342:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25885:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25895:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25907:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25918:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25903:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25903:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25895:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25942:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25953:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25938:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25938:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25961:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25967:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25957:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25957:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25931:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25931:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25931:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25987:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26121:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25995:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25995:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25987:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25865:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25880:4:8",
														"type": ""
													}
												],
												"src": "25714:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26197:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26208:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26224:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26218:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26218:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26208:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26180:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26190:6:8",
														"type": ""
													}
												],
												"src": "26139:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26356:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26366:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26381:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26366:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26328:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26333:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26344:11:8",
														"type": ""
													}
												],
												"src": "26243:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26458:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26468:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26477:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26472:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26537:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26562:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26567:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26558:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26558:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26581:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26586:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26577:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26577:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26571:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26571:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26551:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26551:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26551:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26498:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26501:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26495:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26495:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26509:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26511:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26520:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26523:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26516:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26516:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26511:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26491:3:8",
																"statements": []
															},
															"src": "26487:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26620:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26625:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26616:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26634:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26609:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26609:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26609:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26440:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26445:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26450:6:8",
														"type": ""
													}
												],
												"src": "26396:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26756:278:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26766:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26812:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26780:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26780:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26770:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26827:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26910:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26915:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26834:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26834:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26827:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26970:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26977:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26966:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26966:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26984:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26989:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26931:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26931:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26931:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27005:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27016:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27021:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27012:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27012:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27005:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26737:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26744:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26752:3:8",
														"type": ""
													}
												],
												"src": "26648:386:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27174:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27185:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27272:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27281:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27192:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27192:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27185:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27295:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "27302:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27295:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27153:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27159:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27170:3:8",
														"type": ""
													}
												],
												"src": "27040:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27423:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27445:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27453:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27441:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27441:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27457:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27434:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27434:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27434:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27415:6:8",
														"type": ""
													}
												],
												"src": "27317:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27648:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27658:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27724:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27729:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27665:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27665:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27658:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27830:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "27741:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27741:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27741:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27843:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27854:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27859:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27850:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27843:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27636:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27644:3:8",
														"type": ""
													}
												],
												"src": "27502:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28045:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28055:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28067:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28078:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28063:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28055:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28102:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28113:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28098:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28121:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28127:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28117:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28117:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28091:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28091:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28091:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28147:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28281:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28155:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28155:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28147:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28025:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28040:4:8",
														"type": ""
													}
												],
												"src": "27874:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28358:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28369:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28385:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28379:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28379:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "28369:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28351:6:8",
														"type": ""
													}
												],
												"src": "28299:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28452:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28462:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28480:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28487:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28476:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28496:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "28492:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28492:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "28472:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28472:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "28462:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28435:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "28445:6:8",
														"type": ""
													}
												],
												"src": "28404:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28604:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28614:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28661:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28628:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28628:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28618:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28676:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28742:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28747:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28683:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28683:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28676:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28802:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28809:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28798:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28798:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28816:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28821:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28763:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28763:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28763:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28837:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28848:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28875:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28853:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28853:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28844:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28844:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28837:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28585:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28592:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28600:3:8",
														"type": ""
													}
												],
												"src": "28512:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29013:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29023:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29035:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29046:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29031:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29031:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29023:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29070:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29081:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29066:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29066:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29089:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29095:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29085:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29059:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29059:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29115:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29187:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29196:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29123:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29123:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29115:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28985:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28997:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29008:4:8",
														"type": ""
													}
												],
												"src": "28895:313:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has not started\")\n\n        mstore(add(memPtr, 32), \" yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Total Token Sale Reache\")\n\n        mstore(add(memPtr, 32), \"d!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token amount below min \")\n\n        mstore(add(memPtr, 32), \"buy limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Amount below min buy li\")\n\n        mstore(add(memPtr, 32), \"mit\")\n\n    }\n\n    function abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Sale token cannot be ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Total tokens for sale c\")\n\n        mstore(add(memPtr, 32), \"annot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has not ended y\")\n\n        mstore(add(memPtr, 32), \"et\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Cannot withdraw sale to\")\n\n        mstore(add(memPtr, 32), \"ken with this method, use withdr\")\n\n        mstore(add(memPtr, 64), \"awSaleToken() instead\")\n\n    }\n\n    function abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 85)\n        store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Cannot withdraw sale to\")\n\n        mstore(add(memPtr, 32), \"ken with this method, use withdr\")\n\n        mstore(add(memPtr, 64), \"awAllSaleToken() instead\")\n\n    }\n\n    function abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 88)\n        store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cd5760003560e01c8063715018a6116100f7578063ace1741c11610095578063f2fde38b11610064578063f2fde38b14610644578063f3fef3a31461066d578063fa09e63014610696578063fb00f3fc146106bf576101cd565b8063ace1741c1461059a578063b81df742146105c5578063ded441c2146105f0578063e985e36714610619576101cd565b80638ce0b9d2116100d15780638ce0b9d2146104de5780638da5cb5b1461051b57806399b7703214610546578063a82524b21461056f576101cd565b8063715018a614610475578063757765f81461048c57806389e6ce1e146104b5576101cd565b80633f6f7ed61161016f57806363b201171161013e57806363b20117146103d857806368f8fc10146104035780636aa5b37f1461041f5780636bcedf9c1461044a576101cd565b80633f6f7ed61461031d578063444ad5ee146103465780635a2696ca1461036f5780635b10bd6a146103af576101cd565b8063226ac321116101ab578063226ac32114610275578063249b7c191461029e5780632c4e722e146102c95780633c00a36c146102f4576101cd565b80630fabdd44146101d2578063115ece4c146101fb578063204120bc14610238575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190611c80565b6106d6565b005b34801561020757600080fd5b50610222600480360381019061021d9190611d0b565b6106f3565b60405161022f9190611d5a565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190611d75565b6108b6565b60405161026c9190611d5a565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611d0b565b6108ce565b005b3480156102aa57600080fd5b506102b36109e3565b6040516102c09190611d5a565b60405180910390f35b3480156102d557600080fd5b506102de6109e9565b6040516102eb9190611d5a565b60405180910390f35b34801561030057600080fd5b5061031b60048036038101906103169190611c80565b6109ef565b005b34801561032957600080fd5b50610344600480360381019061033f9190611c80565b610a41565b005b34801561035257600080fd5b5061036d60048036038101906103689190611d0b565b610a53565b005b34801561037b57600080fd5b5061039660048036038101906103919190611d75565b610b34565b6040516103a69493929190611da2565b60405180910390f35b3480156103bb57600080fd5b506103d660048036038101906103d19190611c80565b610b92565b005b3480156103e457600080fd5b506103ed610bb8565b6040516103fa9190611d5a565b60405180910390f35b61041d60048036038101906104189190611d0b565b610bbe565b005b34801561042b57600080fd5b50610434610f87565b6040516104419190611d5a565b60405180910390f35b34801561045657600080fd5b5061045f610f8d565b60405161046c9190611d5a565b60405180910390f35b34801561048157600080fd5b5061048a610f93565b005b34801561049857600080fd5b506104b360048036038101906104ae9190611c80565b610fa7565b005b3480156104c157600080fd5b506104dc60048036038101906104d79190611d0b565b610fb9565b005b3480156104ea57600080fd5b5061050560048036038101906105009190611d75565b61127c565b6040516105129190611e02565b60405180910390f35b34801561052757600080fd5b5061053061129c565b60405161053d9190611e2c565b60405180910390f35b34801561055257600080fd5b5061056d60048036038101906105689190611c80565b6112c5565b005b34801561057b57600080fd5b506105846112d7565b6040516105919190611d5a565b60405180910390f35b3480156105a657600080fd5b506105af6112dd565b6040516105bc9190611d5a565b60405180910390f35b3480156105d157600080fd5b506105da6112e3565b6040516105e79190611d5a565b60405180910390f35b3480156105fc57600080fd5b5061061760048036038101906106129190611c80565b6112e9565b005b34801561062557600080fd5b5061062e611386565b60405161063b9190611e2c565b60405180910390f35b34801561065057600080fd5b5061066b60048036038101906106669190611d75565b6113ac565b005b34801561067957600080fd5b50610694600480360381019061068f9190611d0b565b61142f565b005b3480156106a257600080fd5b506106bd60048036038101906106b89190611d75565b6114f6565b005b3480156106cb57600080fd5b506106d461161a565b005b6106de611757565b80426106ea9190611e76565b600a8190555050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461087057600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad90611f07565b60405180910390fd5b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610804576000610869565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600354600a610853919061205a565b8461085e91906120a5565b6108689190612116565b5b90506108ac565b6000600154036108815760006108a9565b600154600354600a610893919061205a565b8461089e91906120a5565b6108a89190612116565b5b90505b8091505092915050565b60086020528060005260406000206000915090505481565b6108d6611757565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611f07565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a82826040516109d7929190612147565b60405180910390a15050565b600a5481565b60015481565b6109f7611757565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a3d573d6000803e3d6000fd5b5050565b610a49611757565b8060018190555050565b610a5b611757565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c8282604051610b28929190612147565b60405180910390a15050565b600080600080600154600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b54600a5493509350935093509193509193565b610b9a611757565b4260098190555080600954610baf9190611e76565b600a8190555050565b600b5481565b600954421015610c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfa906121e2565b60405180910390fd5b600a544210610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e9061224e565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c8c57610c876000346106f3565b610c97565b610c9683836106f3565b5b905060045481600b54610caa9190611e76565b1115610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce2906122e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610db657600654811015610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90612372565b60405180910390fd5b610db13382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b610f02565b600654811015610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290612404565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90611f07565b60405180910390fd5b610eb43330848673ffffffffffffffffffffffffffffffffffffffff1661185b909392919063ffffffff16565b610f013382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5b80600b6000828254610f149190611e76565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c8484604051610f7a929190612424565b60405180910390a3505050565b60055481565b60045481565b610f9b611757565b610fa560006118e4565b565b610faf611757565b8060058190555050565b610fc1611757565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611030576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611027906124bf565b60405180910390fd5b60008111611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106a90612551565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114591906125aa565b60ff1660038190555061119d333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185b909392919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111f89190611e2c565b602060405180830381865afa158015611215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123991906125ec565b6004819055507f03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a8282604051611270929190612147565b60405180910390a15050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6112cd611757565b8060068190555050565b60095481565b60035481565b60065481565b6112f1611757565b600a54421015611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132d9061268b565b60405180910390fd5b6113833382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113b4611757565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141a9061271d565b60405180910390fd5b61142c816118e4565b50565b611437611757565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114be906127d5565b60405180910390fd5b6114f233828473ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b5050565b6114fe611757565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361158e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115859061288d565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115c99190611e2c565b602060405180830381865afa1580156115e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160a91906125ec565b9050611616828261142f565b5050565b611622611757565b600a54421015611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165e9061268b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116c49190611e2c565b602060405180830381865afa1580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170591906125ec565b90506117543382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117d59092919063ffffffff16565b50565b61175f6119a8565b73ffffffffffffffffffffffffffffffffffffffff1661177d61129c565b73ffffffffffffffffffffffffffffffffffffffff16146117d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ca906128f9565b60405180910390fd5b565b6118568363a9059cbb60e01b84846040516024016117f4929190612147565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119b0565b505050565b6118de846323b872dd60e01b85858560405160240161187c93929190612919565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119b0565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611a12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a789092919063ffffffff16565b9050600081511480611a34575080806020019051810190611a33919061297c565b5b611a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6a90612a1b565b60405180910390fd5b505050565b6060611a878484600085611a90565b90509392505050565b606082471015611ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acc90612aad565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611afe9190612b3e565b60006040518083038185875af1925050503d8060008114611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b5091509150611b5187838387611b5d565b92505050949350505050565b60608315611bbf576000835103611bb757611b7785611bd2565b611bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bad90612ba1565b60405180910390fd5b5b829050611bca565b611bc98383611bf5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611c085781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3c9190612c16565b60405180910390fd5b600080fd5b6000819050919050565b611c5d81611c4a565b8114611c6857600080fd5b50565b600081359050611c7a81611c54565b92915050565b600060208284031215611c9657611c95611c45565b5b6000611ca484828501611c6b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd882611cad565b9050919050565b611ce881611ccd565b8114611cf357600080fd5b50565b600081359050611d0581611cdf565b92915050565b60008060408385031215611d2257611d21611c45565b5b6000611d3085828601611cf6565b9250506020611d4185828601611c6b565b9150509250929050565b611d5481611c4a565b82525050565b6000602082019050611d6f6000830184611d4b565b92915050565b600060208284031215611d8b57611d8a611c45565b5b6000611d9984828501611cf6565b91505092915050565b6000608082019050611db76000830187611d4b565b611dc46020830186611d4b565b611dd16040830185611d4b565b611dde6060830184611d4b565b95945050505050565b60008115159050919050565b611dfc81611de7565b82525050565b6000602082019050611e176000830184611df3565b92915050565b611e2681611ccd565b82525050565b6000602082019050611e416000830184611e1d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e8182611c4a565b9150611e8c83611c4a565b9250828201905080821115611ea457611ea3611e47565b5b92915050565b600082825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f742077686974656c69737465640000600082015250565b6000611ef1601e83611eaa565b9150611efc82611ebb565b602082019050919050565b60006020820190508181036000830152611f2081611ee4565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115611f7e57808604811115611f5a57611f59611e47565b5b6001851615611f695780820291505b8081029050611f7785611f27565b9450611f3e565b94509492505050565b600082611f975760019050612053565b81611fa55760009050612053565b8160018114611fbb5760028114611fc557611ff4565b6001915050612053565b60ff841115611fd757611fd6611e47565b5b8360020a915084821115611fee57611fed611e47565b5b50612053565b5060208310610133831016604e8410600b84101617156120295782820a90508381111561202457612023611e47565b5b612053565b6120368484846001611f34565b9250905081840481111561204d5761204c611e47565b5b81810290505b9392505050565b600061206582611c4a565b915061207083611c4a565b925061209d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611f87565b905092915050565b60006120b082611c4a565b91506120bb83611c4a565b92508282026120c981611c4a565b915082820484148315176120e0576120df611e47565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061212182611c4a565b915061212c83611c4a565b92508261213c5761213b6120e7565b5b828204905092915050565b600060408201905061215c6000830185611e1d565b6121696020830184611d4b565b9392505050565b7f50726573616c653a2050726573616c6520686173206e6f74207374617274656460008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b60006121cc602483611eaa565b91506121d782612170565b604082019050919050565b600060208201905081810360008301526121fb816121bf565b9050919050565b7f50726573616c653a2050726573616c652068617320656e646564000000000000600082015250565b6000612238601a83611eaa565b915061224382612202565b602082019050919050565b600060208201905081810360008301526122678161222b565b9050919050565b7f50726573616c653a20546f74616c20546f6b656e2053616c652052656163686560008201527f6421000000000000000000000000000000000000000000000000000000000000602082015250565b60006122ca602283611eaa565b91506122d58261226e565b604082019050919050565b600060208201905081810360008301526122f9816122bd565b9050919050565b7f50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e2060008201527f627579206c696d69740000000000000000000000000000000000000000000000602082015250565b600061235c602983611eaa565b915061236782612300565b604082019050919050565b6000602082019050818103600083015261238b8161234f565b9050919050565b7f50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c6960008201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b60006123ee602383611eaa565b91506123f982612392565b604082019050919050565b6000602082019050818103600083015261241d816123e1565b9050919050565b60006040820190506124396000830185611d4b565b6124466020830184611d4b565b9392505050565b7f50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006124a9602a83611eaa565b91506124b48261244d565b604082019050919050565b600060208201905081810360008301526124d88161249c565b9050919050565b7f50726573616c653a20546f74616c20746f6b656e7320666f722073616c65206360008201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000602082015250565b600061253b602d83611eaa565b9150612546826124df565b604082019050919050565b6000602082019050818103600083015261256a8161252e565b9050919050565b600060ff82169050919050565b61258781612571565b811461259257600080fd5b50565b6000815190506125a48161257e565b92915050565b6000602082840312156125c0576125bf611c45565b5b60006125ce84828501612595565b91505092915050565b6000815190506125e681611c54565b92915050565b60006020828403121561260257612601611c45565b5b6000612610848285016125d7565b91505092915050565b7f50726573616c653a2050726573616c6520686173206e6f7420656e646564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000612675602283611eaa565b915061268082612619565b604082019050919050565b600060208201905081810360008301526126a481612668565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612707602683611eaa565b9150612712826126ab565b604082019050919050565b60006020820190508181036000830152612736816126fa565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f617753616c65546f6b656e282920696e73746561640000000000000000000000604082015250565b60006127bf605583611eaa565b91506127ca8261273d565b606082019050919050565b600060208201905081810360008301526127ee816127b2565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f6177416c6c53616c65546f6b656e282920696e73746561640000000000000000604082015250565b6000612877605883611eaa565b9150612882826127f5565b606082019050919050565b600060208201905081810360008301526128a68161286a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128e3602083611eaa565b91506128ee826128ad565b602082019050919050565b60006020820190508181036000830152612912816128d6565b9050919050565b600060608201905061292e6000830186611e1d565b61293b6020830185611e1d565b6129486040830184611d4b565b949350505050565b61295981611de7565b811461296457600080fd5b50565b60008151905061297681612950565b92915050565b60006020828403121561299257612991611c45565b5b60006129a084828501612967565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612a05602a83611eaa565b9150612a10826129a9565b604082019050919050565b60006020820190508181036000830152612a34816129f8565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612a97602683611eaa565b9150612aa282612a3b565b604082019050919050565b60006020820190508181036000830152612ac681612a8a565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612b01578082015181840152602081019050612ae6565b60008484015250505050565b6000612b1882612acd565b612b228185612ad8565b9350612b32818560208601612ae3565b80840191505092915050565b6000612b4a8284612b0d565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612b8b601d83611eaa565b9150612b9682612b55565b602082019050919050565b60006020820190508181036000830152612bba81612b7e565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612be882612bc1565b612bf28185611eaa565b9350612c02818560208601612ae3565b612c0b81612bcc565b840191505092915050565b60006020820190508181036000830152612c308184612bdd565b90509291505056fea2646970667358221220bade2095dc115a0bbad614d685e6db6e2153a409a5a515990d4558d8e51192e564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xACE1741C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0xFB00F3FC EQ PUSH2 0x6BF JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xACE1741C EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xB81DF742 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xDED441C2 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x619 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8CE0B9D2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8CE0B9D2 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x99B77032 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x56F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x757765F8 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x89E6CE1E EQ PUSH2 0x4B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x6AA5B37F EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x44A JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x444AD5EE EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5A2696CA EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x5B10BD6A EQ PUSH2 0x3AF JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x226AC321 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x226AC321 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x2F4 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xFABDD44 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH2 0xF87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48A PUSH2 0xF93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x530 PUSH2 0x129C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x12C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x584 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AF PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DA PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x12E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x13AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x694 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x142F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D4 PUSH2 0x161A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DE PUSH2 0x1757 JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x870 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x804 JUMPI PUSH1 0x0 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST DUP5 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x881 JUMPI PUSH1 0x0 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST DUP5 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F7 PUSH2 0x1757 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA49 PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0x1757 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 SLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFA SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3E SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8C JUMPI PUSH2 0xC87 PUSH1 0x0 CALLVALUE PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xC96 DUP4 DUP4 PUSH2 0x6F3 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0xB SLOAD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST GT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB6 JUMPI PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5B SWAP1 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB1 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7E SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB4 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF01 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF7A SWAP3 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x1757 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x0 PUSH2 0x18E4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFC1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1030 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1073 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106A SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1121 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x119D CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12CD PUSH2 0x1757 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12F1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x1336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x13B4 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP1 PUSH2 0x271D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x18E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1437 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BE SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F2 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C9 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1616 DUP3 DUP3 PUSH2 0x142F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1622 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1705 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1754 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x175F PUSH2 0x19A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x177D PUSH2 0x129C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1856 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17F4 SWAP3 SWAP2 SWAP1 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18DE DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x187C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A12 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A78 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A34 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x297C JUMP JUMPDEST JUMPDEST PUSH2 0x1A73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP1 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A87 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A90 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACC SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AFE SWAP2 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B51 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BBF JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1BB7 JUMPI PUSH2 0x1B77 DUP6 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAD SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x1BC9 DUP4 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1C08 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x2C16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5D DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP2 EQ PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C96 JUMPI PUSH2 0x1C95 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD8 DUP3 PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE8 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D05 DUP2 PUSH2 0x1CDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D21 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D99 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DB7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1DE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E26 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E41 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E81 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E8C DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EA4 JUMPI PUSH2 0x1EA3 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F742077686974656C69737465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF1 PUSH1 0x1E DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFC DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F20 DUP2 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1F7E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1F69 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1F77 DUP6 PUSH2 0x1F27 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F3E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F97 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2053 JUMP JUMPDEST DUP2 PUSH2 0x1FA5 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2053 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1FBB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1FC5 JUMPI PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2053 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1FD7 JUMPI PUSH2 0x1FD6 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1FEE JUMPI PUSH2 0x1FED PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2053 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2029 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2024 JUMPI PUSH2 0x2023 PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x2036 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2065 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x2070 DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP PUSH2 0x209D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B0 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x20BB DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20C9 DUP2 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20E0 JUMPI PUSH2 0x20DF PUSH2 0x1E47 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2121 DUP3 PUSH2 0x1C4A JUMP JUMPDEST SWAP2 POP PUSH2 0x212C DUP4 PUSH2 0x1C4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x20E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x215C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x2169 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2079657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC PUSH1 0x24 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x21D7 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FB DUP2 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C652068617320656E646564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0x1A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2243 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6421000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CA PUSH1 0x22 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x22D5 DUP3 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F9 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x627579206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C PUSH1 0x29 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2367 DUP3 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238B DUP2 PUSH2 0x234F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE PUSH1 0x23 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP3 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241D DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A9 PUSH1 0x2A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x24B4 DUP3 PUSH2 0x244D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D8 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E6E6F74206265207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253B PUSH1 0x2D DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2546 DUP3 PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256A DUP2 PUSH2 0x252E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2587 DUP2 PUSH2 0x2571 JUMP JUMPDEST DUP2 EQ PUSH2 0x2592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A4 DUP2 PUSH2 0x257E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C0 JUMPI PUSH2 0x25BF PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25CE DUP5 DUP3 DUP6 ADD PUSH2 0x2595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2610 DUP5 DUP3 DUP6 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F7420656E6465642079 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2675 PUSH1 0x22 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2680 DUP3 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A4 DUP2 PUSH2 0x2668 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2707 PUSH1 0x26 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2712 DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2736 DUP2 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x617753616C65546F6B656E282920696E73746561640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BF PUSH1 0x55 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x27CA DUP3 PUSH2 0x273D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27EE DUP2 PUSH2 0x27B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6177416C6C53616C65546F6B656E282920696E73746561640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2877 PUSH1 0x58 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A6 DUP2 PUSH2 0x286A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E3 PUSH1 0x20 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x28EE DUP3 PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2912 DUP2 PUSH2 0x28D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x292E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x293B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x2948 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x1DE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2976 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2992 JUMPI PUSH2 0x2991 PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29A0 DUP5 DUP3 DUP6 ADD PUSH2 0x2967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A05 PUSH1 0x2A DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A10 DUP3 PUSH2 0x29A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A34 DUP2 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A97 PUSH1 0x26 DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B01 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B18 DUP3 PUSH2 0x2ACD JUMP JUMPDEST PUSH2 0x2B22 DUP2 DUP6 PUSH2 0x2AD8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2B32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AE3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP3 DUP5 PUSH2 0x2B0D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8B PUSH1 0x1D DUP4 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BBA DUP2 PUSH2 0x2B7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 PUSH2 0x2BC1 JUMP JUMPDEST PUSH2 0x2BF2 DUP2 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP4 POP PUSH2 0x2C02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2AE3 JUMP JUMPDEST PUSH2 0x2C0B DUP2 PUSH2 0x2BCC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C30 DUP2 DUP5 PUSH2 0x2BDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xDE KECCAK256 SWAP6 0xDC GT GAS SIGNEXTEND 0xBA 0xD6 EQ 0xD6 DUP6 0xE6 0xDB PUSH15 0x2153A409A5A515990D4558D8E51192 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "262:6627:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3545:545;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3283:254;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;759:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6779:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2965:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5882:240;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2604:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;795:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4096:1082;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;523:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;5298:108:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:740;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;587:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5184:108:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5463:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;424:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6189:251:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6447:283;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5680:196;;;;;;;;;;;;;:::i;:::-;;2815:144;1094:13:0;:11;:13::i;:::-;2937:15:7::1;2919;:33;;;;:::i;:::-;2902:14;:50;;;;2815:144:::0;:::o;3545:545::-;3643:7;3662:14;3707:1;3690:19;;:5;:19;;;3686:375;;3733:7;:14;3741:5;3733:14;;;;;;;;;;;;;;;;;;;;;;;;;3725:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3828:1;3806:11;:18;3818:5;3806:18;;;;;;;;;;;;;;;;:23;:116;;3921:1;3806:116;;;3883:11;:18;3895:5;3883:18;;;;;;;;;;;;;;;;3865:12;;3859:2;:18;;;;:::i;:::-;3849:6;:29;;;;:::i;:::-;3848:54;;;;:::i;:::-;3806:116;3797:125;;3686:375;;;3970:1;3962:4;;:9;:88;;4049:1;3962:88;;;4025:4;;4007:12;;4001:2;:18;;;;:::i;:::-;3991:6;:29;;;;:::i;:::-;3990:40;;;;:::i;:::-;3962:88;3953:97;;3686:375;4077:6;4070:13;;;3545:545;;;;:::o;632:46::-;;;;;;;;;;;;;;;;;:::o;3283:254::-;1094:13:0;:11;:13::i;:::-;3399:7:7::1;:15;3407:6;3399:15;;;;;;;;;;;;;;;;;;;;;;;;;3391:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3481:6;3459:11;:19;3471:6;3459:19;;;;;;;;;;;;;;;:28;;;;3502;3515:6;3523;3502:28;;;;;;;:::i;:::-;;;;;;;;3283:254:::0;;:::o;759:29::-;;;;:::o;369:19::-;;;;:::o;6779:108::-;1094:13:0;:11;:13::i;:::-;6855:10:7::1;6847:28;;:33;6876:3;6847:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6779:108:::0;:::o;3191:86::-;1094:13:0;:11;:13::i;:::-;3265:5:7::1;3258:4;:12;;;;3191:86:::0;:::o;2965:220::-;1094:13:0;:11;:13::i;:::-;3095:4:7::1;3077:7;:15;3085:6;3077:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3131:6;3109:11;:19;3121:6;3109:19;;;;;;;;;;;;;;;:28;;;;3152:26;3163:6;3171;3152:26;;;;;;;:::i;:::-;;;;;;;;2965:220:::0;;:::o;5882:240::-;5956:4;5961;5966;5971;6052;;6057:11;:25;6069:12;6057:25;;;;;;;;;;;;;;;;6083:15;;6099:14;;6044:70;;;;;;;;5882:240;;;;;:::o;2604:205::-;1094:13:0;:11;:13::i;:::-;2726:15:7::1;2707:16;:34;;;;2787:15;2768:16;;:34;;;;:::i;:::-;2751:14;:51;;;;2604:205:::0;:::o;795:30::-;;;;:::o;4096:1082::-;1414:16;;1395:15;:35;;1374:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;1594:14:::1;;1576:15;:32;1555:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4232:20:::2;4273:1:::0;4255:20:::2;;:6;:20;;::::0;:118:::2;;4336:37;4359:1;4363:9;4336:14;:37::i;:::-;4255:118;;;4290:31;4305:6;4313:7;4290:14;:31::i;:::-;4255:118;4232:141;;4441:18;;4424:12;4406:15;;:30;;;;:::i;:::-;4405:54;;4384:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;4552:1;4534:20;;:6;:20;;::::0;4530:531:::2;;4594:11;;4578:12;:27;;4570:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4665:56;4696:10;4708:12;4672:9;;;;;;;;;;;4665:30;;;;:56;;;;;:::i;:::-;4530:531;;;4776:11;;4760:12;:27;;4752:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4849:7;:15;4857:6;4849:15;;;;;;;;;;;;;;;;;;;;;;;;;4841:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4913:67;4945:10;4965:4;4972:7;4920:6;4913:31;;;;:67;;;;;;:::i;:::-;4994:56;5025:10;5037:12;5001:9;;;;;;;;;;;4994:30;;;;:56;;;;;:::i;:::-;4530:531;5089:12;5070:15;;:31;;;;;;;:::i;:::-;;;;;;;;5141:6;5116:55;;5129:10;5116:55;;;5149:7;5158:12;5116:55;;;;;;;:::i;:::-;;;;;;;;4221:957;4096:1082:::0;;:::o;523:26::-;;;;:::o;484:33::-;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;5298:108:7:-;1094:13:0;:11;:13::i;:::-;5387:12:7::1;5373:11;:26;;;;5298:108:::0;:::o;1858:740::-;1094:13:0;:11;:13::i;:::-;2029:1:7::1;2007:24;;:10;:24;;::::0;1986:113:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2152:1;2130:19;:23;2109:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2246:10;2234:9;;:22;;;;;;;;;;;;;;;;;;2296:9;;;;;;;;;;;2281:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2266:51;;:12;:51;;;;2328:128;2376:10;2408:4;2427:19;2335:9;;;;;;;;;;;2328:34;;;;:128;;;;;;:::i;:::-;2494:9;;;;;;;;;;;2487:27;;;2523:4;2487:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:18;:63;;;;2544:47;2559:10;2571:19;2544:47;;;;;;;:::i;:::-;;;;;;;;1858:740:::0;;:::o;587:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;5184:108:7:-;1094:13:0;:11;:13::i;:::-;5273:12:7::1;5259:11;:26;;;;5184:108:::0;:::o;722:31::-;;;;:::o;454:24::-;;;;:::o;555:26::-;;;;:::o;5463:146::-;1094:13:0;:11;:13::i;:::-;1760:14:7::1;;1741:15;:33;;1720:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;5551:51:::2;5582:10;5594:7;5558:9;;;;;;;;;;;5551:30;;;;:51;;;;;:::i;:::-;5463:146:::0;:::o;424:24::-;;;;;;;;;;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;6189:251:7:-;1094:13:0;:11;:13::i;:::-;6281:9:7::1;;;;;;;;;;;6272:18;;:5;:18;;::::0;6264:116:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6390:43;6417:10;6429:3;6397:5;6390:26;;;;:43;;;;;:::i;:::-;6189:251:::0;;:::o;6447:283::-;1094:13:0;:11;:13::i;:::-;6529:9:7::1;;;;;;;;;;;6520:18;;:5;:18;;::::0;6512:119:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6641:11;6662:5;6655:23;;;6687:4;6655:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6641:52;;6703:20;6712:5;6719:3;6703:8;:20::i;:::-;6502:228;6447:283:::0;:::o;5680:196::-;1094:13:0;:11;:13::i;:::-;1760:14:7::1;;1741:15;:33;;1720:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;5756:11:::2;5777:9;;;;;;;;;;;5770:27;;;5806:4;5770:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5756:56;;5822:47;5853:10;5865:3;5829:9;;;;;;;;;;;5822:30;;;;:47;;;;;:::i;:::-;5746:130;5680:196::o:0;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;941:175:4:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;1355:203::-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;5196:642:4:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:5:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:8;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:474::-;1600:6;1608;1657:2;1645:9;1636:7;1632:23;1628:32;1625:119;;;1663:79;;:::i;:::-;1625:119;1783:1;1808:53;1853:7;1844:6;1833:9;1829:22;1808:53;:::i;:::-;1798:63;;1754:117;1910:2;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1881:118;1532:474;;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:553::-;2876:4;2914:3;2903:9;2899:19;2891:27;;2928:71;2996:1;2985:9;2981:17;2972:6;2928:71;:::i;:::-;3009:72;3077:2;3066:9;3062:18;3053:6;3009:72;:::i;:::-;3091;3159:2;3148:9;3144:18;3135:6;3091:72;:::i;:::-;3173;3241:2;3230:9;3226:18;3217:6;3173:72;:::i;:::-;2699:553;;;;;;;:::o;3258:90::-;3292:7;3335:5;3328:13;3321:21;3310:32;;3258:90;;;:::o;3354:109::-;3435:21;3450:5;3435:21;:::i;:::-;3430:3;3423:34;3354:109;;:::o;3469:210::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:65;3669:1;3658:9;3654:17;3645:6;3607:65;:::i;:::-;3469:210;;;;:::o;3685:118::-;3772:24;3790:5;3772:24;:::i;:::-;3767:3;3760:37;3685:118;;:::o;3809:222::-;3902:4;3940:2;3929:9;3925:18;3917:26;;3953:71;4021:1;4010:9;4006:17;3997:6;3953:71;:::i;:::-;3809:222;;;;:::o;4037:180::-;4085:77;4082:1;4075:88;4182:4;4179:1;4172:15;4206:4;4203:1;4196:15;4223:191;4263:3;4282:20;4300:1;4282:20;:::i;:::-;4277:25;;4316:20;4334:1;4316:20;:::i;:::-;4311:25;;4359:1;4356;4352:9;4345:16;;4380:3;4377:1;4374:10;4371:36;;;4387:18;;:::i;:::-;4371:36;4223:191;;;;:::o;4420:169::-;4504:11;4538:6;4533:3;4526:19;4578:4;4573:3;4569:14;4554:29;;4420:169;;;;:::o;4595:180::-;4735:32;4731:1;4723:6;4719:14;4712:56;4595:180;:::o;4781:366::-;4923:3;4944:67;5008:2;5003:3;4944:67;:::i;:::-;4937:74;;5020:93;5109:3;5020:93;:::i;:::-;5138:2;5133:3;5129:12;5122:19;;4781:366;;;:::o;5153:419::-;5319:4;5357:2;5346:9;5342:18;5334:26;;5406:9;5400:4;5396:20;5392:1;5381:9;5377:17;5370:47;5434:131;5560:4;5434:131;:::i;:::-;5426:139;;5153:419;;;:::o;5578:102::-;5620:8;5667:5;5664:1;5660:13;5639:34;;5578:102;;;:::o;5686:848::-;5747:5;5754:4;5778:6;5769:15;;5802:5;5793:14;;5816:712;5837:1;5827:8;5824:15;5816:712;;;5932:4;5927:3;5923:14;5917:4;5914:24;5911:50;;;5941:18;;:::i;:::-;5911:50;5991:1;5981:8;5977:16;5974:451;;;6406:4;6399:5;6395:16;6386:25;;5974:451;6456:4;6450;6446:15;6438:23;;6486:32;6509:8;6486:32;:::i;:::-;6474:44;;5816:712;;;5686:848;;;;;;;:::o;6540:1073::-;6594:5;6785:8;6775:40;;6806:1;6797:10;;6808:5;;6775:40;6834:4;6824:36;;6851:1;6842:10;;6853:5;;6824:36;6920:4;6968:1;6963:27;;;;7004:1;6999:191;;;;6913:277;;6963:27;6981:1;6972:10;;6983:5;;;6999:191;7044:3;7034:8;7031:17;7028:43;;;7051:18;;:::i;:::-;7028:43;7100:8;7097:1;7093:16;7084:25;;7135:3;7128:5;7125:14;7122:40;;;7142:18;;:::i;:::-;7122:40;7175:5;;;6913:277;;7299:2;7289:8;7286:16;7280:3;7274:4;7271:13;7267:36;7249:2;7239:8;7236:16;7231:2;7225:4;7222:12;7218:35;7202:111;7199:246;;;7355:8;7349:4;7345:19;7336:28;;7390:3;7383:5;7380:14;7377:40;;;7397:18;;:::i;:::-;7377:40;7430:5;;7199:246;7470:42;7508:3;7498:8;7492:4;7489:1;7470:42;:::i;:::-;7455:57;;;;7544:4;7539:3;7535:14;7528:5;7525:25;7522:51;;;7553:18;;:::i;:::-;7522:51;7602:4;7595:5;7591:16;7582:25;;6540:1073;;;;;;:::o;7619:285::-;7679:5;7703:23;7721:4;7703:23;:::i;:::-;7695:31;;7747:27;7765:8;7747:27;:::i;:::-;7735:39;;7793:104;7830:66;7820:8;7814:4;7793:104;:::i;:::-;7784:113;;7619:285;;;;:::o;7910:410::-;7950:7;7973:20;7991:1;7973:20;:::i;:::-;7968:25;;8007:20;8025:1;8007:20;:::i;:::-;8002:25;;8062:1;8059;8055:9;8084:30;8102:11;8084:30;:::i;:::-;8073:41;;8263:1;8254:7;8250:15;8247:1;8244:22;8224:1;8217:9;8197:83;8174:139;;8293:18;;:::i;:::-;8174:139;7958:362;7910:410;;;;:::o;8326:180::-;8374:77;8371:1;8364:88;8471:4;8468:1;8461:15;8495:4;8492:1;8485:15;8512:185;8552:1;8569:20;8587:1;8569:20;:::i;:::-;8564:25;;8603:20;8621:1;8603:20;:::i;:::-;8598:25;;8642:1;8632:35;;8647:18;;:::i;:::-;8632:35;8689:1;8686;8682:9;8677:14;;8512:185;;;;:::o;8703:332::-;8824:4;8862:2;8851:9;8847:18;8839:26;;8875:71;8943:1;8932:9;8928:17;8919:6;8875:71;:::i;:::-;8956:72;9024:2;9013:9;9009:18;9000:6;8956:72;:::i;:::-;8703:332;;;;;:::o;9041:223::-;9181:34;9177:1;9169:6;9165:14;9158:58;9250:6;9245:2;9237:6;9233:15;9226:31;9041:223;:::o;9270:366::-;9412:3;9433:67;9497:2;9492:3;9433:67;:::i;:::-;9426:74;;9509:93;9598:3;9509:93;:::i;:::-;9627:2;9622:3;9618:12;9611:19;;9270:366;;;:::o;9642:419::-;9808:4;9846:2;9835:9;9831:18;9823:26;;9895:9;9889:4;9885:20;9881:1;9870:9;9866:17;9859:47;9923:131;10049:4;9923:131;:::i;:::-;9915:139;;9642:419;;;:::o;10067:176::-;10207:28;10203:1;10195:6;10191:14;10184:52;10067:176;:::o;10249:366::-;10391:3;10412:67;10476:2;10471:3;10412:67;:::i;:::-;10405:74;;10488:93;10577:3;10488:93;:::i;:::-;10606:2;10601:3;10597:12;10590:19;;10249:366;;;:::o;10621:419::-;10787:4;10825:2;10814:9;10810:18;10802:26;;10874:9;10868:4;10864:20;10860:1;10849:9;10845:17;10838:47;10902:131;11028:4;10902:131;:::i;:::-;10894:139;;10621:419;;;:::o;11046:221::-;11186:34;11182:1;11174:6;11170:14;11163:58;11255:4;11250:2;11242:6;11238:15;11231:29;11046:221;:::o;11273:366::-;11415:3;11436:67;11500:2;11495:3;11436:67;:::i;:::-;11429:74;;11512:93;11601:3;11512:93;:::i;:::-;11630:2;11625:3;11621:12;11614:19;;11273:366;;;:::o;11645:419::-;11811:4;11849:2;11838:9;11834:18;11826:26;;11898:9;11892:4;11888:20;11884:1;11873:9;11869:17;11862:47;11926:131;12052:4;11926:131;:::i;:::-;11918:139;;11645:419;;;:::o;12070:228::-;12210:34;12206:1;12198:6;12194:14;12187:58;12279:11;12274:2;12266:6;12262:15;12255:36;12070:228;:::o;12304:366::-;12446:3;12467:67;12531:2;12526:3;12467:67;:::i;:::-;12460:74;;12543:93;12632:3;12543:93;:::i;:::-;12661:2;12656:3;12652:12;12645:19;;12304:366;;;:::o;12676:419::-;12842:4;12880:2;12869:9;12865:18;12857:26;;12929:9;12923:4;12919:20;12915:1;12904:9;12900:17;12893:47;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12676:419;;;:::o;13101:222::-;13241:34;13237:1;13229:6;13225:14;13218:58;13310:5;13305:2;13297:6;13293:15;13286:30;13101:222;:::o;13329:366::-;13471:3;13492:67;13556:2;13551:3;13492:67;:::i;:::-;13485:74;;13568:93;13657:3;13568:93;:::i;:::-;13686:2;13681:3;13677:12;13670:19;;13329:366;;;:::o;13701:419::-;13867:4;13905:2;13894:9;13890:18;13882:26;;13954:9;13948:4;13944:20;13940:1;13929:9;13925:17;13918:47;13982:131;14108:4;13982:131;:::i;:::-;13974:139;;13701:419;;;:::o;14126:332::-;14247:4;14285:2;14274:9;14270:18;14262:26;;14298:71;14366:1;14355:9;14351:17;14342:6;14298:71;:::i;:::-;14379:72;14447:2;14436:9;14432:18;14423:6;14379:72;:::i;:::-;14126:332;;;;;:::o;14464:229::-;14604:34;14600:1;14592:6;14588:14;14581:58;14673:12;14668:2;14660:6;14656:15;14649:37;14464:229;:::o;14699:366::-;14841:3;14862:67;14926:2;14921:3;14862:67;:::i;:::-;14855:74;;14938:93;15027:3;14938:93;:::i;:::-;15056:2;15051:3;15047:12;15040:19;;14699:366;;;:::o;15071:419::-;15237:4;15275:2;15264:9;15260:18;15252:26;;15324:9;15318:4;15314:20;15310:1;15299:9;15295:17;15288:47;15352:131;15478:4;15352:131;:::i;:::-;15344:139;;15071:419;;;:::o;15496:232::-;15636:34;15632:1;15624:6;15620:14;15613:58;15705:15;15700:2;15692:6;15688:15;15681:40;15496:232;:::o;15734:366::-;15876:3;15897:67;15961:2;15956:3;15897:67;:::i;:::-;15890:74;;15973:93;16062:3;15973:93;:::i;:::-;16091:2;16086:3;16082:12;16075:19;;15734:366;;;:::o;16106:419::-;16272:4;16310:2;16299:9;16295:18;16287:26;;16359:9;16353:4;16349:20;16345:1;16334:9;16330:17;16323:47;16387:131;16513:4;16387:131;:::i;:::-;16379:139;;16106:419;;;:::o;16531:86::-;16566:7;16606:4;16599:5;16595:16;16584:27;;16531:86;;;:::o;16623:118::-;16694:22;16710:5;16694:22;:::i;:::-;16687:5;16684:33;16674:61;;16731:1;16728;16721:12;16674:61;16623:118;:::o;16747:139::-;16802:5;16833:6;16827:13;16818:22;;16849:31;16874:5;16849:31;:::i;:::-;16747:139;;;;:::o;16892:347::-;16960:6;17009:2;16997:9;16988:7;16984:23;16980:32;16977:119;;;17015:79;;:::i;:::-;16977:119;17135:1;17160:62;17214:7;17205:6;17194:9;17190:22;17160:62;:::i;:::-;17150:72;;17106:126;16892:347;;;;:::o;17245:143::-;17302:5;17333:6;17327:13;17318:22;;17349:33;17376:5;17349:33;:::i;:::-;17245:143;;;;:::o;17394:351::-;17464:6;17513:2;17501:9;17492:7;17488:23;17484:32;17481:119;;;17519:79;;:::i;:::-;17481:119;17639:1;17664:64;17720:7;17711:6;17700:9;17696:22;17664:64;:::i;:::-;17654:74;;17610:128;17394:351;;;;:::o;17751:221::-;17891:34;17887:1;17879:6;17875:14;17868:58;17960:4;17955:2;17947:6;17943:15;17936:29;17751:221;:::o;17978:366::-;18120:3;18141:67;18205:2;18200:3;18141:67;:::i;:::-;18134:74;;18217:93;18306:3;18217:93;:::i;:::-;18335:2;18330:3;18326:12;18319:19;;17978:366;;;:::o;18350:419::-;18516:4;18554:2;18543:9;18539:18;18531:26;;18603:9;18597:4;18593:20;18589:1;18578:9;18574:17;18567:47;18631:131;18757:4;18631:131;:::i;:::-;18623:139;;18350:419;;;:::o;18775:225::-;18915:34;18911:1;18903:6;18899:14;18892:58;18984:8;18979:2;18971:6;18967:15;18960:33;18775:225;:::o;19006:366::-;19148:3;19169:67;19233:2;19228:3;19169:67;:::i;:::-;19162:74;;19245:93;19334:3;19245:93;:::i;:::-;19363:2;19358:3;19354:12;19347:19;;19006:366;;;:::o;19378:419::-;19544:4;19582:2;19571:9;19567:18;19559:26;;19631:9;19625:4;19621:20;19617:1;19606:9;19602:17;19595:47;19659:131;19785:4;19659:131;:::i;:::-;19651:139;;19378:419;;;:::o;19803:309::-;19943:34;19939:1;19931:6;19927:14;19920:58;20012:34;20007:2;19999:6;19995:15;19988:59;20081:23;20076:2;20068:6;20064:15;20057:48;19803:309;:::o;20118:366::-;20260:3;20281:67;20345:2;20340:3;20281:67;:::i;:::-;20274:74;;20357:93;20446:3;20357:93;:::i;:::-;20475:2;20470:3;20466:12;20459:19;;20118:366;;;:::o;20490:419::-;20656:4;20694:2;20683:9;20679:18;20671:26;;20743:9;20737:4;20733:20;20729:1;20718:9;20714:17;20707:47;20771:131;20897:4;20771:131;:::i;:::-;20763:139;;20490:419;;;:::o;20915:312::-;21055:34;21051:1;21043:6;21039:14;21032:58;21124:34;21119:2;21111:6;21107:15;21100:59;21193:26;21188:2;21180:6;21176:15;21169:51;20915:312;:::o;21233:366::-;21375:3;21396:67;21460:2;21455:3;21396:67;:::i;:::-;21389:74;;21472:93;21561:3;21472:93;:::i;:::-;21590:2;21585:3;21581:12;21574:19;;21233:366;;;:::o;21605:419::-;21771:4;21809:2;21798:9;21794:18;21786:26;;21858:9;21852:4;21848:20;21844:1;21833:9;21829:17;21822:47;21886:131;22012:4;21886:131;:::i;:::-;21878:139;;21605:419;;;:::o;22030:182::-;22170:34;22166:1;22158:6;22154:14;22147:58;22030:182;:::o;22218:366::-;22360:3;22381:67;22445:2;22440:3;22381:67;:::i;:::-;22374:74;;22457:93;22546:3;22457:93;:::i;:::-;22575:2;22570:3;22566:12;22559:19;;22218:366;;;:::o;22590:419::-;22756:4;22794:2;22783:9;22779:18;22771:26;;22843:9;22837:4;22833:20;22829:1;22818:9;22814:17;22807:47;22871:131;22997:4;22871:131;:::i;:::-;22863:139;;22590:419;;;:::o;23015:442::-;23164:4;23202:2;23191:9;23187:18;23179:26;;23215:71;23283:1;23272:9;23268:17;23259:6;23215:71;:::i;:::-;23296:72;23364:2;23353:9;23349:18;23340:6;23296:72;:::i;:::-;23378;23446:2;23435:9;23431:18;23422:6;23378:72;:::i;:::-;23015:442;;;;;;:::o;23463:116::-;23533:21;23548:5;23533:21;:::i;:::-;23526:5;23523:32;23513:60;;23569:1;23566;23559:12;23513:60;23463:116;:::o;23585:137::-;23639:5;23670:6;23664:13;23655:22;;23686:30;23710:5;23686:30;:::i;:::-;23585:137;;;;:::o;23728:345::-;23795:6;23844:2;23832:9;23823:7;23819:23;23815:32;23812:119;;;23850:79;;:::i;:::-;23812:119;23970:1;23995:61;24048:7;24039:6;24028:9;24024:22;23995:61;:::i;:::-;23985:71;;23941:125;23728:345;;;;:::o;24079:229::-;24219:34;24215:1;24207:6;24203:14;24196:58;24288:12;24283:2;24275:6;24271:15;24264:37;24079:229;:::o;24314:366::-;24456:3;24477:67;24541:2;24536:3;24477:67;:::i;:::-;24470:74;;24553:93;24642:3;24553:93;:::i;:::-;24671:2;24666:3;24662:12;24655:19;;24314:366;;;:::o;24686:419::-;24852:4;24890:2;24879:9;24875:18;24867:26;;24939:9;24933:4;24929:20;24925:1;24914:9;24910:17;24903:47;24967:131;25093:4;24967:131;:::i;:::-;24959:139;;24686:419;;;:::o;25111:225::-;25251:34;25247:1;25239:6;25235:14;25228:58;25320:8;25315:2;25307:6;25303:15;25296:33;25111:225;:::o;25342:366::-;25484:3;25505:67;25569:2;25564:3;25505:67;:::i;:::-;25498:74;;25581:93;25670:3;25581:93;:::i;:::-;25699:2;25694:3;25690:12;25683:19;;25342:366;;;:::o;25714:419::-;25880:4;25918:2;25907:9;25903:18;25895:26;;25967:9;25961:4;25957:20;25953:1;25942:9;25938:17;25931:47;25995:131;26121:4;25995:131;:::i;:::-;25987:139;;25714:419;;;:::o;26139:98::-;26190:6;26224:5;26218:12;26208:22;;26139:98;;;:::o;26243:147::-;26344:11;26381:3;26366:18;;26243:147;;;;:::o;26396:246::-;26477:1;26487:113;26501:6;26498:1;26495:13;26487:113;;;26586:1;26581:3;26577:11;26571:18;26567:1;26562:3;26558:11;26551:39;26523:2;26520:1;26516:10;26511:15;;26487:113;;;26634:1;26625:6;26620:3;26616:16;26609:27;26458:184;26396:246;;;:::o;26648:386::-;26752:3;26780:38;26812:5;26780:38;:::i;:::-;26834:88;26915:6;26910:3;26834:88;:::i;:::-;26827:95;;26931:65;26989:6;26984:3;26977:4;26970:5;26966:16;26931:65;:::i;:::-;27021:6;27016:3;27012:16;27005:23;;26756:278;26648:386;;;;:::o;27040:271::-;27170:3;27192:93;27281:3;27272:6;27192:93;:::i;:::-;27185:100;;27302:3;27295:10;;27040:271;;;;:::o;27317:179::-;27457:31;27453:1;27445:6;27441:14;27434:55;27317:179;:::o;27502:366::-;27644:3;27665:67;27729:2;27724:3;27665:67;:::i;:::-;27658:74;;27741:93;27830:3;27741:93;:::i;:::-;27859:2;27854:3;27850:12;27843:19;;27502:366;;;:::o;27874:419::-;28040:4;28078:2;28067:9;28063:18;28055:26;;28127:9;28121:4;28117:20;28113:1;28102:9;28098:17;28091:47;28155:131;28281:4;28155:131;:::i;:::-;28147:139;;27874:419;;;:::o;28299:99::-;28351:6;28385:5;28379:12;28369:22;;28299:99;;;:::o;28404:102::-;28445:6;28496:2;28492:7;28487:2;28480:5;28476:14;28472:28;28462:38;;28404:102;;;:::o;28512:377::-;28600:3;28628:39;28661:5;28628:39;:::i;:::-;28683:71;28747:6;28742:3;28683:71;:::i;:::-;28676:78;;28763:65;28821:6;28816:3;28809:4;28802:5;28798:16;28763:65;:::i;:::-;28853:29;28875:6;28853:29;:::i;:::-;28848:3;28844:39;28837:46;;28604:285;28512:377;;;;:::o;28895:313::-;29008:4;29046:2;29035:9;29031:18;29023:26;;29095:9;29089:4;29085:20;29081:1;29070:9;29066:17;29059:47;29123:78;29196:4;29187:6;29123:78;:::i;:::-;29115:86;;28895:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2274800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addWhiteListedToken(address,uint256)": "infinite",
								"buyToken(address,uint256)": "infinite",
								"fetchDataForFrontend(address)": "infinite",
								"getTokenAmount(address,uint256)": "infinite",
								"maxBuyLimit()": "2518",
								"minBuyLimit()": "2496",
								"owner()": "2589",
								"presaleEndTime()": "2497",
								"presaleStartTime()": "2540",
								"rate()": "2519",
								"renounceOwnership()": "30444",
								"saleToken()": "2625",
								"saleTokenDec()": "2474",
								"setMaxBuyLimit(uint256)": "24852",
								"setMinBuyLimit(uint256)": "24873",
								"setSaleTokenParams(address,uint256)": "infinite",
								"startAndSetPresaleEndTime(uint256)": "infinite",
								"tokenPrices(address)": "2905",
								"tokenWL(address)": "2890",
								"totalTokensSold()": "2474",
								"totalTokensforSale()": "2540",
								"transferOwnership(address)": "30788",
								"upateTime(uint256)": "infinite",
								"updateEthRate(uint256)": "24830",
								"updateTokenRate(address,uint256)": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawAll(address)": "infinite",
								"withdrawAllSaleToken()": "infinite",
								"withdrawCurrency(uint256)": "infinite",
								"withdrawSaleToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 6889,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bade2095dc115a0bbad614d685e6db6e2153a409a5a515990d4558d8e51192e564736f6c63430008120033",
									".code": [
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "ACE1741C"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "F3FEF3A3"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "FA09E630"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "FB00F3FC"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "ACE1741C"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "B81DF742"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "DED441C2"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "E985E367"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "8CE0B9D2"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "8CE0B9D2"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "99B77032"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "A82524B2"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "757765F8"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "89E6CE1E"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "3F6F7ED6"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "63B20117"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "63B20117"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "68F8FC10"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "6AA5B37F"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "6BCEDF9C"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "3F6F7ED6"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "444AD5EE"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "5A2696CA"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "5B10BD6A"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "226AC321"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "226AC321"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "249B7C19"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "2C4E722E"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "3C00A36C"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "FABDD44"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "115ECE4C"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "204120BC"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6889,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6779,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5882,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5882,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5882,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6189,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6189,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6447,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6447,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5680,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2934,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2919,
											"end": 2952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3676,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3725,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3817,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3900,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3865,
											"end": 3877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3859,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3849,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3848,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4001,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3991,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3990,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3391,
											"end": 3449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A"
										},
										{
											"begin": 3515,
											"end": 3521,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3502,
											"end": 3530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6865,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 6876,
											"end": 6879,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6880,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3077,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C"
										},
										{
											"begin": 3163,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3152,
											"end": 3178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 5970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6052,
											"end": 6056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6068,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6081,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6082,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6098,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6083,
											"end": 6098,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6113,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6099,
											"end": 6113,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2768,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2768,
											"end": 2802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1414,
											"end": 1430,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1430,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1594,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1594,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1591,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1555,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4359,
											"end": 4360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4372,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4350,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4336,
											"end": 4373,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4305,
											"end": 4311,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4320,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4304,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4290,
											"end": 4321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4373,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4436,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4406,
											"end": 4421,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4406,
											"end": 4436,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4459,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4459,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4384,
											"end": 4519,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4540,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4594,
											"end": 4605,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4605,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4605,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4570,
											"end": 4651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4696,
											"end": 4706,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4720,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 4787,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4787,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4787,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4752,
											"end": 4827,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4863,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4841,
											"end": 4899,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4945,
											"end": 4955,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4969,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4979,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4926,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5025,
											"end": 5035,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5070,
											"end": 5085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5070,
											"end": 5101,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5141,
											"end": 5147,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "C244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C"
										},
										{
											"begin": 5149,
											"end": 5156,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5170,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5116,
											"end": 5171,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 5178,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2029,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1986,
											"end": 2099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2130,
											"end": 2153,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2109,
											"end": 2224,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2281,
											"end": 2317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2376,
											"end": 2386,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2523,
											"end": 2527,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2487,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2487,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A"
										},
										{
											"begin": 2559,
											"end": 2569,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2544,
											"end": 2591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1756,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1720,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5582,
											"end": 5592,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5601,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6272,
											"end": 6290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6277,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6272,
											"end": 6290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6264,
											"end": 6380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6264,
											"end": 6380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 6417,
											"end": 6427,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6432,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6402,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6390,
											"end": 6416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 6390,
											"end": 6433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6529,
											"end": 6538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6538,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6512,
											"end": 6631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6512,
											"end": 6631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6687,
											"end": 6691,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6655,
											"end": 6693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6655,
											"end": 6693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6655,
											"end": 6693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6712,
											"end": 6717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6703,
											"end": 6723,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6703,
											"end": 6723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1756,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1720,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 5806,
											"end": 5810,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5770,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5770,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5853,
											"end": 5863,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5876,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 1482,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1663,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 1853,
											"end": 1860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1808,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1754,
											"end": 1871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2899,
											"end": 2918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 2918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 2918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2928,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 2978,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2928,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2928,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2928,
											"end": 2999,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 2928,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3009,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3081,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 3009,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 3159,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3141,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3091,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3163,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 3091,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3173,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 3252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3348,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3258,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3310,
											"end": 3342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3310,
											"end": 3342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3463,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3354,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 3450,
											"end": 3455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3435,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3456,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 3435,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3423,
											"end": 3457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3654,
											"end": 3671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3607,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3672,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 3607,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3803,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3685,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3772,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 3772,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3917,
											"end": 3943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3917,
											"end": 3943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 4021,
											"end": 4022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4019,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3953,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4024,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 3953,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 4031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4217,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4037,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4162,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4186,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 4187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4211,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4282,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4277,
											"end": 4302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4277,
											"end": 4302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4316,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 4371,
											"end": 4407,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 4387,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4407,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 4371,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4569,
											"end": 4583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4554,
											"end": 4583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4554,
											"end": 4583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4775,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4595,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4767,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F6B656E206E6F742077686974656C69737465640000"
										},
										{
											"begin": 4731,
											"end": 4732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 5147,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4781,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 5003,
											"end": 5006,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4944,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4944,
											"end": 5011,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 4944,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 5011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 5011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 5109,
											"end": 5112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5020,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5113,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 5020,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5141,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 5147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 5147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 5147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5572,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5153,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5400,
											"end": 5404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5396,
											"end": 5416,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 5560,
											"end": 5564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5434,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5565,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 5434,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5680,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5578,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5628,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5665,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5639,
											"end": 5673,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5639,
											"end": 5673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5747,
											"end": 5752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5827,
											"end": 5835,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5937,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5917,
											"end": 5921,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 5938,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5941,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 5911,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 5992,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5981,
											"end": 5989,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 5993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 6425,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 5974,
											"end": 6425,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6406,
											"end": 6410,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6411,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 6425,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 5974,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6461,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6438,
											"end": 6461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6438,
											"end": 6461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 6509,
											"end": 6517,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 6486,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 6486,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6518,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 5816,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 6534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6793,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6775,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 6775,
											"end": 6815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6797,
											"end": 6807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6775,
											"end": 6815,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 6775,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6838,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6824,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 6824,
											"end": 6860,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6853,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6853,
											"end": 6858,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6824,
											"end": 6860,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 6824,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 6969,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6913,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 6913,
											"end": 7190,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 6963,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6972,
											"end": 6982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 6982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 6999,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7044,
											"end": 7047,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7034,
											"end": 7042,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7031,
											"end": 7048,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7071,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7028,
											"end": 7071,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7051,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7071,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7028,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7138,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7139,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7162,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 7122,
											"end": 7162,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7142,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7122,
											"end": 7162,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 7122,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 7175,
											"end": 7180,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6913,
											"end": 7190,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 6913,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6913,
											"end": 7190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7284,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7303,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 7239,
											"end": 7247,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7252,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7222,
											"end": 7234,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7218,
											"end": 7253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7313,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7345,
											"end": 7364,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7393,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7380,
											"end": 7394,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7417,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7377,
											"end": 7417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7397,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7417,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7377,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 7430,
											"end": 7435,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7199,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 7508,
											"end": 7511,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7470,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 7470,
											"end": 7512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7470,
											"end": 7512,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 7470,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7539,
											"end": 7542,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7549,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7528,
											"end": 7533,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7550,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 7553,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7679,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 7721,
											"end": 7725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7703,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7726,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 7703,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 7765,
											"end": 7773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7747,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7774,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 7747,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7774,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 7830,
											"end": 7896,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7820,
											"end": 7828,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7818,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 7793,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7897,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 7793,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7950,
											"end": 7957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 7991,
											"end": 7992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7973,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7973,
											"end": 7993,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 7973,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8007,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 8025,
											"end": 8026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8007,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8007,
											"end": 8027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8007,
											"end": 8027,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 8007,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8002,
											"end": 8027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8055,
											"end": 8064,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 8102,
											"end": 8113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8084,
											"end": 8114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 8084,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8265,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8266,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8224,
											"end": 8225,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8197,
											"end": 8280,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 8174,
											"end": 8313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8293,
											"end": 8311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8313,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 8174,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 8320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 8320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8506,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 8326,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8374,
											"end": 8451,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8371,
											"end": 8372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8471,
											"end": 8475,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8461,
											"end": 8476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8495,
											"end": 8499,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8500,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 8587,
											"end": 8588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8569,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 8569,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 8621,
											"end": 8622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8603,
											"end": 8623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8623,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 8603,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8598,
											"end": 8623,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8598,
											"end": 8623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8632,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 8632,
											"end": 8667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 8647,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 8647,
											"end": 8665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8665,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 8647,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8632,
											"end": 8667,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 8632,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8682,
											"end": 8691,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8512,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8824,
											"end": 8828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 8865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 8865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8875,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 8943,
											"end": 8944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8919,
											"end": 8925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8875,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8875,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8875,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 8875,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 9024,
											"end": 9026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9022,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9000,
											"end": 9006,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 8956,
											"end": 9028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 9028,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 8956,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 9035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9264,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9041,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9181,
											"end": 9215,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C6520686173206E6F742073746172746564"
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9158,
											"end": 9216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9250,
											"end": 9256,
											"name": "PUSH",
											"source": 8,
											"value": "2079657400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9233,
											"end": 9248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9226,
											"end": 9257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9492,
											"end": 9495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9433,
											"end": 9500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 9598,
											"end": 9601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9509,
											"end": 9602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9611,
											"end": 9630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9611,
											"end": 9630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9270,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 10061,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 9642,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 9893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9905,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9866,
											"end": 9883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 10049,
											"end": 10053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 9923,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10054,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 9923,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9915,
											"end": 10054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9915,
											"end": 10054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 10061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 10061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 10061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10243,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 10067,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10235,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C652068617320656E646564000000000000"
										},
										{
											"begin": 10203,
											"end": 10204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10236,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10615,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10249,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 10471,
											"end": 10474,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 10412,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10479,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 10412,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10405,
											"end": 10479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10405,
											"end": 10479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 10577,
											"end": 10580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 10488,
											"end": 10581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10581,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 10488,
											"end": 10581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10601,
											"end": 10604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 11040,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 10621,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10787,
											"end": 10791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10825,
											"end": 10827,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10802,
											"end": 10828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10802,
											"end": 10828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10845,
											"end": 10862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10838,
											"end": 10885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 11028,
											"end": 11032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10902,
											"end": 11033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10902,
											"end": 11033,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 10902,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10894,
											"end": 11033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10894,
											"end": 11033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 11040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 11040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 11040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10621,
											"end": 11040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11267,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 11046,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11186,
											"end": 11220,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865"
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11170,
											"end": 11184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11255,
											"end": 11259,
											"name": "PUSH",
											"source": 8,
											"value": "6421000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11250,
											"end": 11252,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11242,
											"end": 11248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11238,
											"end": 11253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11260,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11046,
											"end": 11267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11639,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11273,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11415,
											"end": 11418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11436,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 11500,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11495,
											"end": 11498,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11436,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 11436,
											"end": 11503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11436,
											"end": 11503,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 11436,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11429,
											"end": 11503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11429,
											"end": 11503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11601,
											"end": 11604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 11512,
											"end": 11605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11605,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11512,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11621,
											"end": 11633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11614,
											"end": 11633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11614,
											"end": 11633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11645,
											"end": 12064,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 11645,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 11815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11851,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11838,
											"end": 11847,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 11852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11826,
											"end": 11852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11826,
											"end": 11852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11898,
											"end": 11907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11892,
											"end": 11896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11888,
											"end": 11908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 11885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11873,
											"end": 11882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11862,
											"end": 11909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 12052,
											"end": 12056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11926,
											"end": 12057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 12057,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 11926,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11918,
											"end": 12057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11918,
											"end": 12057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11645,
											"end": 12064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11645,
											"end": 12064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11645,
											"end": 12064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11645,
											"end": 12064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12298,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12070,
											"end": 12298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20"
										},
										{
											"begin": 12206,
											"end": 12207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12198,
											"end": 12204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12194,
											"end": 12208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12279,
											"end": 12290,
											"name": "PUSH",
											"source": 8,
											"value": "627579206C696D69740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12274,
											"end": 12276,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12262,
											"end": 12277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12670,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12304,
											"end": 12670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12467,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 12531,
											"end": 12533,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 12526,
											"end": 12529,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12467,
											"end": 12534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12534,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 12467,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12543,
											"end": 12636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12543,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12663,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 12659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12645,
											"end": 12664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 13095,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 12676,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12842,
											"end": 12846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12880,
											"end": 12882,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12869,
											"end": 12878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12865,
											"end": 12883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12857,
											"end": 12883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12857,
											"end": 12883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12923,
											"end": 12927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12919,
											"end": 12939,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 12916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12904,
											"end": 12913,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12900,
											"end": 12917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12893,
											"end": 12940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 13083,
											"end": 13087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12957,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 12957,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 13088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 13088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 13095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 13095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 13095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 13095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13323,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13101,
											"end": 13323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13275,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69"
										},
										{
											"begin": 13237,
											"end": 13238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13225,
											"end": 13239,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13218,
											"end": 13276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "PUSH",
											"source": 8,
											"value": "6D69740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13305,
											"end": 13307,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13297,
											"end": 13303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13293,
											"end": 13308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13286,
											"end": 13316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13471,
											"end": 13474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 13556,
											"end": 13558,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 13551,
											"end": 13554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 13492,
											"end": 13559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 13492,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13559,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13485,
											"end": 13559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13657,
											"end": 13660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13568,
											"end": 13661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13568,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13681,
											"end": 13684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13677,
											"end": 13689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13670,
											"end": 13689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13670,
											"end": 13689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13329,
											"end": 13695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13867,
											"end": 13871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 13907,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13894,
											"end": 13903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13890,
											"end": 13908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13954,
											"end": 13963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13948,
											"end": 13952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13944,
											"end": 13964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13940,
											"end": 13941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13938,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13925,
											"end": 13942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13918,
											"end": 13965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 14108,
											"end": 14112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13982,
											"end": 14113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 13982,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 14113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 14113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 14120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13701,
											"end": 14120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14247,
											"end": 14251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14274,
											"end": 14283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14262,
											"end": 14288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14262,
											"end": 14288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14298,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14366,
											"end": 14367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14342,
											"end": 14348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14298,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14298,
											"end": 14369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14298,
											"end": 14369,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14298,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14447,
											"end": 14449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14436,
											"end": 14445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14379,
											"end": 14451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14451,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14379,
											"end": 14451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14126,
											"end": 14458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14464,
											"end": 14693,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14464,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14604,
											"end": 14638,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65"
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14588,
											"end": 14602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14581,
											"end": 14639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14673,
											"end": 14685,
											"name": "PUSH",
											"source": 8,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 14668,
											"end": 14670,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14660,
											"end": 14666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14686,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14464,
											"end": 14693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14464,
											"end": 14693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14699,
											"end": 15065,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14699,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14841,
											"end": 14844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14862,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 14926,
											"end": 14928,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 14921,
											"end": 14924,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14862,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 14862,
											"end": 14929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14862,
											"end": 14929,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 14862,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14938,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 15027,
											"end": 15030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14938,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14938,
											"end": 15031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14938,
											"end": 15031,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 14938,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15056,
											"end": 15058,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15051,
											"end": 15054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15040,
											"end": 15059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15040,
											"end": 15059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14699,
											"end": 15065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14699,
											"end": 15065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14699,
											"end": 15065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14699,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15071,
											"end": 15490,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 15071,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15237,
											"end": 15241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15275,
											"end": 15277,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15264,
											"end": 15273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15252,
											"end": 15278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15324,
											"end": 15333,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15318,
											"end": 15322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15314,
											"end": 15334,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15310,
											"end": 15311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15299,
											"end": 15308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15295,
											"end": 15312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15288,
											"end": 15335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15352,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 15478,
											"end": 15482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15352,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 15352,
											"end": 15483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15352,
											"end": 15483,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 15352,
											"end": 15483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15344,
											"end": 15483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15344,
											"end": 15483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15071,
											"end": 15490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15071,
											"end": 15490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15071,
											"end": 15490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15071,
											"end": 15490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 15728,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 15496,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15670,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063"
										},
										{
											"begin": 15632,
											"end": 15633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15624,
											"end": 15630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15620,
											"end": 15634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15613,
											"end": 15671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15705,
											"end": 15720,
											"name": "PUSH",
											"source": 8,
											"value": "616E6E6F74206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 15700,
											"end": 15702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15692,
											"end": 15698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 15703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15681,
											"end": 15721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 15728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 15728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 16100,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 15734,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15876,
											"end": 15879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 15961,
											"end": 15963,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 15956,
											"end": 15959,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 15964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 15897,
											"end": 15964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 15964,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 15897,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15890,
											"end": 15964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15890,
											"end": 15964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15973,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15973,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 15973,
											"end": 16066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15973,
											"end": 16066,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 15973,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16091,
											"end": 16093,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 16089,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16082,
											"end": 16094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16075,
											"end": 16094,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16075,
											"end": 16094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 16100,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 16100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 16100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 16100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16106,
											"end": 16525,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 16106,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16272,
											"end": 16276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16310,
											"end": 16312,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16299,
											"end": 16308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16359,
											"end": 16368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16353,
											"end": 16357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16349,
											"end": 16369,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16345,
											"end": 16346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16334,
											"end": 16343,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16330,
											"end": 16347,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16323,
											"end": 16370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16387,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 16513,
											"end": 16517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16387,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 16387,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16387,
											"end": 16518,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 16387,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16379,
											"end": 16518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16379,
											"end": 16518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16106,
											"end": 16525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16106,
											"end": 16525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16106,
											"end": 16525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16106,
											"end": 16525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16617,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 16531,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16566,
											"end": 16573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16606,
											"end": 16610,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 16599,
											"end": 16604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16595,
											"end": 16611,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16584,
											"end": 16611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16584,
											"end": 16611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16531,
											"end": 16617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16623,
											"end": 16741,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 16623,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 16710,
											"end": 16715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 16694,
											"end": 16716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16687,
											"end": 16692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16684,
											"end": 16717,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16674,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 16674,
											"end": 16735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16731,
											"end": 16732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16728,
											"end": 16729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16733,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16674,
											"end": 16735,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 16674,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16623,
											"end": 16741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16623,
											"end": 16741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16802,
											"end": 16807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16839,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16827,
											"end": 16840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16818,
											"end": 16840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16818,
											"end": 16840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16849,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 16874,
											"end": 16879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16849,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 16849,
											"end": 16880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16849,
											"end": 16880,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 16849,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16997,
											"end": 17006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16988,
											"end": 16995,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17007,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16980,
											"end": 17012,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 17096,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 16977,
											"end": 17096,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17015,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 17015,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 17015,
											"end": 17094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17015,
											"end": 17094,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 17015,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 17096,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 16977,
											"end": 17096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17135,
											"end": 17136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 17214,
											"end": 17221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17205,
											"end": 17211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17203,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17190,
											"end": 17212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17160,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 17160,
											"end": 17222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17160,
											"end": 17222,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 17160,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17222,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17150,
											"end": 17222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17106,
											"end": 17232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 17239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17302,
											"end": 17307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17333,
											"end": 17339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17327,
											"end": 17340,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17349,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 17376,
											"end": 17381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17349,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 17349,
											"end": 17382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17349,
											"end": 17382,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 17349,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17245,
											"end": 17388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17464,
											"end": 17470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17513,
											"end": 17515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17501,
											"end": 17510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17488,
											"end": 17511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17484,
											"end": 17516,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 17481,
											"end": 17600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17481,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 17481,
											"end": 17600,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17519,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 17519,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 17519,
											"end": 17598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17519,
											"end": 17598,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 17519,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17481,
											"end": 17600,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 17481,
											"end": 17600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17639,
											"end": 17640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17664,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 17720,
											"end": 17727,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17711,
											"end": 17717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17700,
											"end": 17709,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17696,
											"end": 17718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 17664,
											"end": 17728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17728,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 17664,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 17728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 17728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17610,
											"end": 17738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17972,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 17751,
											"end": 17972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17891,
											"end": 17925,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C6520686173206E6F7420656E6465642079"
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17875,
											"end": 17889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17960,
											"end": 17964,
											"name": "PUSH",
											"source": 8,
											"value": "6574000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17955,
											"end": 17957,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17947,
											"end": 17953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17943,
											"end": 17958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17936,
											"end": 17965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17978,
											"end": 18344,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 17978,
											"end": 18344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18120,
											"end": 18123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 18205,
											"end": 18207,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 18200,
											"end": 18203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 18141,
											"end": 18208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18208,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 18141,
											"end": 18208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18134,
											"end": 18208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18134,
											"end": 18208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18217,
											"end": 18310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 18306,
											"end": 18309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18217,
											"end": 18310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 18217,
											"end": 18310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18217,
											"end": 18310,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 18217,
											"end": 18310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18335,
											"end": 18337,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18330,
											"end": 18333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18326,
											"end": 18338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18319,
											"end": 18338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18319,
											"end": 18338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17978,
											"end": 18344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17978,
											"end": 18344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17978,
											"end": 18344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17978,
											"end": 18344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18350,
											"end": 18769,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 18350,
											"end": 18769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18516,
											"end": 18520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18554,
											"end": 18556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18543,
											"end": 18552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18539,
											"end": 18557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18531,
											"end": 18557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18531,
											"end": 18557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18597,
											"end": 18601,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18593,
											"end": 18613,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18589,
											"end": 18590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18578,
											"end": 18587,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18567,
											"end": 18614,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18631,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 18757,
											"end": 18761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18631,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 18631,
											"end": 18762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18631,
											"end": 18762,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 18631,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18623,
											"end": 18762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18350,
											"end": 18769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18350,
											"end": 18769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18350,
											"end": 18769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18350,
											"end": 18769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18775,
											"end": 19000,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 18775,
											"end": 19000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18915,
											"end": 18949,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18911,
											"end": 18912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18903,
											"end": 18909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18899,
											"end": 18913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18892,
											"end": 18950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18984,
											"end": 18992,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18979,
											"end": 18981,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18971,
											"end": 18977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18967,
											"end": 18982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18960,
											"end": 18993,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18775,
											"end": 19000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18775,
											"end": 19000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19006,
											"end": 19372,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 19006,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19148,
											"end": 19151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19169,
											"end": 19236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 19233,
											"end": 19235,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 19228,
											"end": 19231,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19169,
											"end": 19236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 19169,
											"end": 19236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19169,
											"end": 19236,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 19169,
											"end": 19236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19245,
											"end": 19338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 19334,
											"end": 19337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19245,
											"end": 19338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 19245,
											"end": 19338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19245,
											"end": 19338,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 19245,
											"end": 19338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19363,
											"end": 19365,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19358,
											"end": 19361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19354,
											"end": 19366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19006,
											"end": 19372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19006,
											"end": 19372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19006,
											"end": 19372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19006,
											"end": 19372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19797,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 19378,
											"end": 19797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19544,
											"end": 19548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19582,
											"end": 19584,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19571,
											"end": 19580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19567,
											"end": 19585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19631,
											"end": 19640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19621,
											"end": 19641,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19617,
											"end": 19618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19606,
											"end": 19615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19602,
											"end": 19619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19595,
											"end": 19642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 19785,
											"end": 19789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 19659,
											"end": 19790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19659,
											"end": 19790,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 19659,
											"end": 19790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19651,
											"end": 19790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19651,
											"end": 19790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19378,
											"end": 19797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19803,
											"end": 20112,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 19803,
											"end": 20112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19943,
											"end": 19977,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2043616E6E6F742077697468647261772073616C6520746F"
										},
										{
											"begin": 19939,
											"end": 19940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19931,
											"end": 19937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19927,
											"end": 19941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19920,
											"end": 19978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20012,
											"end": 20046,
											"name": "PUSH",
											"source": 8,
											"value": "6B656E20776974682074686973206D6574686F642C2075736520776974686472"
										},
										{
											"begin": 20007,
											"end": 20009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19999,
											"end": 20005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19995,
											"end": 20010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19988,
											"end": 20047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20081,
											"end": 20104,
											"name": "PUSH",
											"source": 8,
											"value": "617753616C65546F6B656E282920696E73746561640000000000000000000000"
										},
										{
											"begin": 20076,
											"end": 20078,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20068,
											"end": 20074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20064,
											"end": 20079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20057,
											"end": 20105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19803,
											"end": 20112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19803,
											"end": 20112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20484,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 20118,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20260,
											"end": 20263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20281,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "PUSH",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 20340,
											"end": 20343,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20281,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 20281,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20281,
											"end": 20348,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 20281,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20274,
											"end": 20348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20274,
											"end": 20348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20357,
											"end": 20450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 20446,
											"end": 20449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20357,
											"end": 20450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 20357,
											"end": 20450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20357,
											"end": 20450,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 20357,
											"end": 20450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20475,
											"end": 20477,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20470,
											"end": 20473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20466,
											"end": 20478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20459,
											"end": 20478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20459,
											"end": 20478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20484,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20118,
											"end": 20484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20909,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 20490,
											"end": 20909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20656,
											"end": 20660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20694,
											"end": 20696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20683,
											"end": 20692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 20697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20671,
											"end": 20697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20671,
											"end": 20697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20743,
											"end": 20752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20737,
											"end": 20741,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20733,
											"end": 20753,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20729,
											"end": 20730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20718,
											"end": 20727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20714,
											"end": 20731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20707,
											"end": 20754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20771,
											"end": 20902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 20897,
											"end": 20901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20771,
											"end": 20902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 20771,
											"end": 20902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20771,
											"end": 20902,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 20771,
											"end": 20902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20763,
											"end": 20902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20915,
											"end": 21227,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 20915,
											"end": 21227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21055,
											"end": 21089,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2043616E6E6F742077697468647261772073616C6520746F"
										},
										{
											"begin": 21051,
											"end": 21052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21043,
											"end": 21049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21039,
											"end": 21053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21032,
											"end": 21090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21124,
											"end": 21158,
											"name": "PUSH",
											"source": 8,
											"value": "6B656E20776974682074686973206D6574686F642C2075736520776974686472"
										},
										{
											"begin": 21119,
											"end": 21121,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21111,
											"end": 21117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21107,
											"end": 21122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21100,
											"end": 21159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21193,
											"end": 21219,
											"name": "PUSH",
											"source": 8,
											"value": "6177416C6C53616C65546F6B656E282920696E73746561640000000000000000"
										},
										{
											"begin": 21188,
											"end": 21190,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21180,
											"end": 21186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21176,
											"end": 21191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21169,
											"end": 21220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20915,
											"end": 21227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20915,
											"end": 21227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21599,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 21233,
											"end": 21599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21375,
											"end": 21378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21396,
											"end": 21463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 21460,
											"end": 21462,
											"name": "PUSH",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 21455,
											"end": 21458,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21396,
											"end": 21463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 21396,
											"end": 21463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21396,
											"end": 21463,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 21396,
											"end": 21463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21389,
											"end": 21463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21389,
											"end": 21463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21472,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 21561,
											"end": 21564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21472,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 21472,
											"end": 21565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21472,
											"end": 21565,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 21472,
											"end": 21565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21590,
											"end": 21592,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 21585,
											"end": 21588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21581,
											"end": 21593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21574,
											"end": 21593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21574,
											"end": 21593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21233,
											"end": 21599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 22024,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 21605,
											"end": 22024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21771,
											"end": 21775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21809,
											"end": 21811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21798,
											"end": 21807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21794,
											"end": 21812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21786,
											"end": 21812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21786,
											"end": 21812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21858,
											"end": 21867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21852,
											"end": 21856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21848,
											"end": 21868,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21844,
											"end": 21845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21833,
											"end": 21842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21829,
											"end": 21846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21822,
											"end": 21869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 22012,
											"end": 22016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 21886,
											"end": 22017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 22017,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 21886,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21878,
											"end": 22017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21878,
											"end": 22017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 22024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 22024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 22024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 22024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22030,
											"end": 22212,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 22030,
											"end": 22212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22170,
											"end": 22204,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 22166,
											"end": 22167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22158,
											"end": 22164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22154,
											"end": 22168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22147,
											"end": 22205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22030,
											"end": 22212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22030,
											"end": 22212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22584,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 22218,
											"end": 22584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22360,
											"end": 22363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22381,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 22445,
											"end": 22447,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22440,
											"end": 22443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22381,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 22381,
											"end": 22448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22381,
											"end": 22448,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 22381,
											"end": 22448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22374,
											"end": 22448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22374,
											"end": 22448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22457,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 22546,
											"end": 22549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22457,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 22457,
											"end": 22550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22457,
											"end": 22550,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 22457,
											"end": 22550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22575,
											"end": 22577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22570,
											"end": 22573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22566,
											"end": 22578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22559,
											"end": 22578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22559,
											"end": 22578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22584,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22590,
											"end": 23009,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 22590,
											"end": 23009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22756,
											"end": 22760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22794,
											"end": 22796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22783,
											"end": 22792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22779,
											"end": 22797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22771,
											"end": 22797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22771,
											"end": 22797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22843,
											"end": 22852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22837,
											"end": 22841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22833,
											"end": 22853,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22829,
											"end": 22830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22818,
											"end": 22827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22814,
											"end": 22831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22807,
											"end": 22854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22871,
											"end": 23002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 22997,
											"end": 23001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22871,
											"end": 23002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 22871,
											"end": 23002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22871,
											"end": 23002,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 22871,
											"end": 23002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22863,
											"end": 23002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22863,
											"end": 23002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22590,
											"end": 23009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22590,
											"end": 23009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22590,
											"end": 23009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22590,
											"end": 23009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23164,
											"end": 23168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23202,
											"end": 23204,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23191,
											"end": 23200,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23187,
											"end": 23205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23179,
											"end": 23205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23179,
											"end": 23205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23215,
											"end": 23286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 23283,
											"end": 23284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23272,
											"end": 23281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23268,
											"end": 23285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23265,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23215,
											"end": 23286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 23215,
											"end": 23286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23215,
											"end": 23286,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 23215,
											"end": 23286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23364,
											"end": 23366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23353,
											"end": 23362,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23349,
											"end": 23367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23340,
											"end": 23346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 23296,
											"end": 23368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23296,
											"end": 23368,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23296,
											"end": 23368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23378,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 23446,
											"end": 23448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23435,
											"end": 23444,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23431,
											"end": 23449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23422,
											"end": 23428,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23378,
											"end": 23450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 23378,
											"end": 23450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23378,
											"end": 23450,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 23378,
											"end": 23450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23015,
											"end": 23457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23463,
											"end": 23579,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 23463,
											"end": 23579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23533,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 23548,
											"end": 23553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23533,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 23533,
											"end": 23554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23533,
											"end": 23554,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 23533,
											"end": 23554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23526,
											"end": 23531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23523,
											"end": 23555,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23513,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 23513,
											"end": 23573,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23569,
											"end": 23570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23566,
											"end": 23567,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23559,
											"end": 23571,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23513,
											"end": 23573,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 23513,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23463,
											"end": 23579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23463,
											"end": 23579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23639,
											"end": 23644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23670,
											"end": 23676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23664,
											"end": 23677,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23655,
											"end": 23677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23655,
											"end": 23677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 23710,
											"end": 23715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 23686,
											"end": 23716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23686,
											"end": 23716,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 23686,
											"end": 23716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23585,
											"end": 23722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23795,
											"end": 23801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23844,
											"end": 23846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23832,
											"end": 23841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23823,
											"end": 23830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23819,
											"end": 23842,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23815,
											"end": 23847,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 23812,
											"end": 23931,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23812,
											"end": 23931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 23812,
											"end": 23931,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23850,
											"end": 23929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 23850,
											"end": 23929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 23850,
											"end": 23929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23850,
											"end": 23929,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 23850,
											"end": 23929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23812,
											"end": 23931,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 23812,
											"end": 23931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23970,
											"end": 23971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23995,
											"end": 24056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 24048,
											"end": 24055,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24039,
											"end": 24045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24028,
											"end": 24037,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24024,
											"end": 24046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23995,
											"end": 24056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 23995,
											"end": 24056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23995,
											"end": 24056,
											"name": "tag",
											"source": 8,
											"value": "658"
										},
										{
											"begin": 23995,
											"end": 24056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23985,
											"end": 24056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23985,
											"end": 24056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23941,
											"end": 24066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23728,
											"end": 24073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24079,
											"end": 24308,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 24079,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24219,
											"end": 24253,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 24215,
											"end": 24216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24207,
											"end": 24213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24203,
											"end": 24217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24196,
											"end": 24254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24288,
											"end": 24300,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 24283,
											"end": 24285,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24275,
											"end": 24281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24271,
											"end": 24286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24264,
											"end": 24301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24079,
											"end": 24308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24079,
											"end": 24308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24314,
											"end": 24680,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 24314,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24456,
											"end": 24459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24477,
											"end": 24544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 24541,
											"end": 24543,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 24536,
											"end": 24539,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24477,
											"end": 24544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 24477,
											"end": 24544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24477,
											"end": 24544,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 24477,
											"end": 24544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24470,
											"end": 24544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24470,
											"end": 24544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24553,
											"end": 24646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 24642,
											"end": 24645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24553,
											"end": 24646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 24553,
											"end": 24646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24553,
											"end": 24646,
											"name": "tag",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 24553,
											"end": 24646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24671,
											"end": 24673,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 24666,
											"end": 24669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24662,
											"end": 24674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24655,
											"end": 24674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24655,
											"end": 24674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24314,
											"end": 24680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24314,
											"end": 24680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24314,
											"end": 24680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24314,
											"end": 24680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 25105,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 24686,
											"end": 25105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24852,
											"end": 24856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24890,
											"end": 24892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24879,
											"end": 24888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24875,
											"end": 24893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24867,
											"end": 24893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24867,
											"end": 24893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24939,
											"end": 24948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24933,
											"end": 24937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 24949,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24925,
											"end": 24926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24914,
											"end": 24923,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24910,
											"end": 24927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24903,
											"end": 24950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 25098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 25093,
											"end": 25097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 25098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 24967,
											"end": 25098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 25098,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 24967,
											"end": 25098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24959,
											"end": 25098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24959,
											"end": 25098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 25105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 25105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 25105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24686,
											"end": 25105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25336,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 25111,
											"end": 25336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25251,
											"end": 25285,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 25247,
											"end": 25248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25239,
											"end": 25245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25235,
											"end": 25249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25228,
											"end": 25286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25320,
											"end": 25328,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25315,
											"end": 25317,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25307,
											"end": 25313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25303,
											"end": 25318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25296,
											"end": 25329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25342,
											"end": 25708,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 25342,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25484,
											"end": 25487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25505,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 25569,
											"end": 25571,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 25564,
											"end": 25567,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25505,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 25505,
											"end": 25572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25505,
											"end": 25572,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 25505,
											"end": 25572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25498,
											"end": 25572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25498,
											"end": 25572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25581,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 25670,
											"end": 25673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25581,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 25581,
											"end": 25674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25581,
											"end": 25674,
											"name": "tag",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 25581,
											"end": 25674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25699,
											"end": 25701,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25694,
											"end": 25697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25690,
											"end": 25702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25683,
											"end": 25702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25683,
											"end": 25702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25342,
											"end": 25708,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25342,
											"end": 25708,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25342,
											"end": 25708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25342,
											"end": 25708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25714,
											"end": 26133,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 25714,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25880,
											"end": 25884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25918,
											"end": 25920,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25907,
											"end": 25916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25903,
											"end": 25921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25895,
											"end": 25921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25895,
											"end": 25921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25967,
											"end": 25976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25961,
											"end": 25965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25957,
											"end": 25977,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25953,
											"end": 25954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25942,
											"end": 25951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25938,
											"end": 25955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25931,
											"end": 25978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25995,
											"end": 26126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 26121,
											"end": 26125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25995,
											"end": 26126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 25995,
											"end": 26126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25995,
											"end": 26126,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 25995,
											"end": 26126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25987,
											"end": 26126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25987,
											"end": 26126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25714,
											"end": 26133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25714,
											"end": 26133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25714,
											"end": 26133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25714,
											"end": 26133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26139,
											"end": 26237,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 26139,
											"end": 26237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26190,
											"end": 26196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26224,
											"end": 26229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26218,
											"end": 26230,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26208,
											"end": 26230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26208,
											"end": 26230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26139,
											"end": 26237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26139,
											"end": 26237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26139,
											"end": 26237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26139,
											"end": 26237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26344,
											"end": 26355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26381,
											"end": 26384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26366,
											"end": 26384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26366,
											"end": 26384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26243,
											"end": 26390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26642,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 26396,
											"end": 26642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26477,
											"end": 26478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "tag",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26501,
											"end": 26507,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26498,
											"end": 26499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26495,
											"end": 26508,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26586,
											"end": 26587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26581,
											"end": 26584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26577,
											"end": 26588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26571,
											"end": 26589,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26567,
											"end": 26568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26562,
											"end": 26565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26558,
											"end": 26569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26551,
											"end": 26590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26523,
											"end": 26525,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26520,
											"end": 26521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26516,
											"end": 26526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26511,
											"end": 26526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26511,
											"end": 26526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 26487,
											"end": 26600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26634,
											"end": 26635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26625,
											"end": 26631,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26620,
											"end": 26623,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26616,
											"end": 26632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26609,
											"end": 26636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26458,
											"end": 26642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26396,
											"end": 26642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26752,
											"end": 26755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26780,
											"end": 26818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 26812,
											"end": 26817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26780,
											"end": 26818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 26780,
											"end": 26818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26780,
											"end": 26818,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 26780,
											"end": 26818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26834,
											"end": 26922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 26915,
											"end": 26921,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26910,
											"end": 26913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26834,
											"end": 26922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 26834,
											"end": 26922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26834,
											"end": 26922,
											"name": "tag",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 26834,
											"end": 26922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26827,
											"end": 26922,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26827,
											"end": 26922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26931,
											"end": 26996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 26989,
											"end": 26995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26984,
											"end": 26987,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26977,
											"end": 26981,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26970,
											"end": 26975,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26966,
											"end": 26982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26931,
											"end": 26996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 26931,
											"end": 26996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26931,
											"end": 26996,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 26931,
											"end": 26996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27021,
											"end": 27027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 27016,
											"end": 27019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27012,
											"end": 27028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27005,
											"end": 27028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27005,
											"end": 27028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26756,
											"end": 27034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26648,
											"end": 27034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27170,
											"end": 27173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27192,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27281,
											"end": 27284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27272,
											"end": 27278,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27192,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 27192,
											"end": 27285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27192,
											"end": 27285,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27192,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27185,
											"end": 27285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27185,
											"end": 27285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27302,
											"end": 27305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27295,
											"end": 27305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27295,
											"end": 27305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27040,
											"end": 27311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27317,
											"end": 27496,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 27317,
											"end": 27496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27457,
											"end": 27488,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 27453,
											"end": 27454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27445,
											"end": 27451,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27441,
											"end": 27455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27434,
											"end": 27489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27317,
											"end": 27496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27317,
											"end": 27496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27502,
											"end": 27868,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 27502,
											"end": 27868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27644,
											"end": 27647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27665,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 27729,
											"end": 27731,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 27724,
											"end": 27727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27665,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 27665,
											"end": 27732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27665,
											"end": 27732,
											"name": "tag",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 27665,
											"end": 27732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27658,
											"end": 27732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27658,
											"end": 27732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27741,
											"end": 27834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 27830,
											"end": 27833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27741,
											"end": 27834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 27741,
											"end": 27834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27741,
											"end": 27834,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 27741,
											"end": 27834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27859,
											"end": 27861,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27854,
											"end": 27857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27850,
											"end": 27862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27843,
											"end": 27862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27843,
											"end": 27862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27502,
											"end": 27868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27502,
											"end": 27868,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27502,
											"end": 27868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27502,
											"end": 27868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 28293,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 27874,
											"end": 28293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28040,
											"end": 28044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28078,
											"end": 28080,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28067,
											"end": 28076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28063,
											"end": 28081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28055,
											"end": 28081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28055,
											"end": 28081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28127,
											"end": 28136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28121,
											"end": 28125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28117,
											"end": 28137,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28113,
											"end": 28114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28102,
											"end": 28111,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28098,
											"end": 28115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28091,
											"end": 28138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28155,
											"end": 28286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28281,
											"end": 28285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28155,
											"end": 28286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 28155,
											"end": 28286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28155,
											"end": 28286,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28155,
											"end": 28286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28147,
											"end": 28286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28147,
											"end": 28286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 28293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 28293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 28293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27874,
											"end": 28293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28398,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 28299,
											"end": 28398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28351,
											"end": 28357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28385,
											"end": 28390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28379,
											"end": 28391,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 28369,
											"end": 28391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28369,
											"end": 28391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28299,
											"end": 28398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28404,
											"end": 28506,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 28404,
											"end": 28506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28445,
											"end": 28451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28496,
											"end": 28498,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 28492,
											"end": 28499,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 28487,
											"end": 28489,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 28480,
											"end": 28485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28476,
											"end": 28490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28472,
											"end": 28500,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 28462,
											"end": 28500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28462,
											"end": 28500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28404,
											"end": 28506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28404,
											"end": 28506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28404,
											"end": 28506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28404,
											"end": 28506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28600,
											"end": 28603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28628,
											"end": 28667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 28661,
											"end": 28666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28628,
											"end": 28667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 28628,
											"end": 28667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28628,
											"end": 28667,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 28628,
											"end": 28667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28683,
											"end": 28754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 28747,
											"end": 28753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28742,
											"end": 28745,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28683,
											"end": 28754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 28683,
											"end": 28754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28683,
											"end": 28754,
											"name": "tag",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 28683,
											"end": 28754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28676,
											"end": 28754,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 28676,
											"end": 28754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28763,
											"end": 28828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 28821,
											"end": 28827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28816,
											"end": 28819,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28809,
											"end": 28813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28802,
											"end": 28807,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28798,
											"end": 28814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28763,
											"end": 28828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 28763,
											"end": 28828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28763,
											"end": 28828,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 28763,
											"end": 28828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28853,
											"end": 28882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 28875,
											"end": 28881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28853,
											"end": 28882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 28853,
											"end": 28882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28853,
											"end": 28882,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 28853,
											"end": 28882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28848,
											"end": 28851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28844,
											"end": 28883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28837,
											"end": 28883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28837,
											"end": 28883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28604,
											"end": 28889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28512,
											"end": 28889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29008,
											"end": 29012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29046,
											"end": 29048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29035,
											"end": 29044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29031,
											"end": 29049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29023,
											"end": 29049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29023,
											"end": 29049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29095,
											"end": 29104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29089,
											"end": 29093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29085,
											"end": 29105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 29081,
											"end": 29082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29070,
											"end": 29079,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29066,
											"end": 29083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29059,
											"end": 29106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29123,
											"end": 29201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 29196,
											"end": 29200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29187,
											"end": 29193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 29123,
											"end": 29201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 29123,
											"end": 29201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29123,
											"end": 29201,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 29123,
											"end": 29201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29115,
											"end": 29201,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29115,
											"end": 29201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28895,
											"end": 29208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addWhiteListedToken(address,uint256)": "444ad5ee",
							"buyToken(address,uint256)": "68f8fc10",
							"fetchDataForFrontend(address)": "5a2696ca",
							"getTokenAmount(address,uint256)": "115ece4c",
							"maxBuyLimit()": "6aa5b37f",
							"minBuyLimit()": "b81df742",
							"owner()": "8da5cb5b",
							"presaleEndTime()": "249b7c19",
							"presaleStartTime()": "a82524b2",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"saleToken()": "e985e367",
							"saleTokenDec()": "ace1741c",
							"setMaxBuyLimit(uint256)": "757765f8",
							"setMinBuyLimit(uint256)": "99b77032",
							"setSaleTokenParams(address,uint256)": "89e6ce1e",
							"startAndSetPresaleEndTime(uint256)": "5b10bd6a",
							"tokenPrices(address)": "204120bc",
							"tokenWL(address)": "8ce0b9d2",
							"totalTokensSold()": "63b20117",
							"totalTokensforSale()": "6bcedf9c",
							"transferOwnership(address)": "f2fde38b",
							"upateTime(uint256)": "0fabdd44",
							"updateEthRate(uint256)": "3f6f7ed6",
							"updateTokenRate(address,uint256)": "226ac321",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawAll(address)": "fa09e630",
							"withdrawAllSaleToken()": "fb00f3fc",
							"withdrawCurrency(uint256)": "3c00a36c",
							"withdrawSaleToken(uint256)": "ded441c2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SaleTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensBought\",\"type\":\"uint256\"}],\"name\":\"TokensBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addWhiteListedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"}],\"name\":\"fetchDataForFrontend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTokenDec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBuyLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBuyLimit\",\"type\":\"uint256\"}],\"name\":\"setMinBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensforSale\",\"type\":\"uint256\"}],\"name\":\"setSaleTokenParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_presaleEndTime\",\"type\":\"uint256\"}],\"name\":\"startAndSetPresaleEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensforSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_presaleEndTime\",\"type\":\"uint256\"}],\"name\":\"upateTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updateEthRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateTokenRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllSaleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawSaleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/preSale.sol\":\"Presale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/preSale.sol\":{\"keccak256\":\"0xb9deb951c3aa097f63116c9e145b037f72513011f5fbad026b3fc98f135526bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ccc8e17ff2ad77cb4b4cdbee9e0a2782be8d9a94549ec9f37fe01d889dde4d\",\"dweb:/ipfs/QmXxPW8ippTK7WmVW6hXPRF6yK3rPwCe8HPKqGqV3GCx3T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/preSale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 996,
								"contract": "contracts/preSale.sol:Presale",
								"label": "rate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/preSale.sol:Presale",
								"label": "saleToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1000,
								"contract": "contracts/preSale.sol:Presale",
								"label": "saleTokenDec",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1002,
								"contract": "contracts/preSale.sol:Presale",
								"label": "totalTokensforSale",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1004,
								"contract": "contracts/preSale.sol:Presale",
								"label": "maxBuyLimit",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1006,
								"contract": "contracts/preSale.sol:Presale",
								"label": "minBuyLimit",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1010,
								"contract": "contracts/preSale.sol:Presale",
								"label": "tokenWL",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1014,
								"contract": "contracts/preSale.sol:Presale",
								"label": "tokenPrices",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1016,
								"contract": "contracts/preSale.sol:Presale",
								"label": "presaleStartTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "contracts/preSale.sol:Presale",
								"label": "presaleEndTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1020,
								"contract": "contracts/preSale.sol:Presale",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 980,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								979
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 191,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 195,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "305:6:2"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215,
								190
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 215,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 215,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 215,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1503:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1528:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1551:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1577:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 228,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1594:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1613:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:3"
									},
									"scope": 251,
									"src": "1455:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1959:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1997:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:3"
									},
									"scope": 251,
									"src": "1943:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2249:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:3"
									},
									"scope": 251,
									"src": "2198:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "629:1631:3",
							"usedErrors": []
						}
					],
					"src": "123:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							957
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							251
						],
						"SafeERC20": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 191,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 252,
							"src": "164:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 958,
							"src": "205:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 260,
									"libraryName": {
										"id": 258,
										"name": "Address",
										"nameLocations": [
											"731:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "731:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:4",
									"typeName": {
										"id": 259,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1013:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1043:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 275,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 264,
																			"src": "1073:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "1073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1098:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1102:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 273,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 271,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1023:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:4"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 262,
														"name": "IERC20",
														"nameLocations": [
															"963:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "963:6:4"
													},
													"referencedDeclaration": 190,
													"src": "963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "977:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:4"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:4"
									},
									"scope": 627,
									"src": "941:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1445:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1475:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 301,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "1505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1505:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 304,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "1534:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 305,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "1540:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 306,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "1544:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 299,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 297,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:4"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1381:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1381:6:4"
													},
													"referencedDeclaration": 190,
													"src": "1381:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1395:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:4"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:4"
									},
									"scope": 627,
									"src": "1355:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1894:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "2143:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 331,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$627",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$627",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 329,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 333,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "2190:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 327,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 315,
																					"src": "2159:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "2159:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 337,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 346,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "2344:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2344:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 349,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "2368:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "2377:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 344,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 342,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2294:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:4"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1839:6:4"
													},
													"referencedDeclaration": 190,
													"src": "1839:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1853:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1870:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:4"
									},
									"scope": 627,
									"src": "1818:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "2668:194:4",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "2678:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$627",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$627",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2701:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2770:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 381,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "2800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2800:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 384,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "2824:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 385,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "2833:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 386,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "2848:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2750:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:4"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2613:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2613:6:4"
													},
													"referencedDeclaration": 190,
													"src": "2613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2627:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2644:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:4"
									},
									"scope": 627,
									"src": "2582:280:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3139:321:4",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:4",
												"statements": [
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 435,
																"src": "3173:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 413,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$627",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$627",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 411,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "3227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 405,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "3196:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "3196:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "3257:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 416,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3273:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 414,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 422,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "3358:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 425,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "3388:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "3388:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 428,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "3412:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 429,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 404,
																				"src": "3421:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 430,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 400,
																				"src": "3436:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 423,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 421,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "3338:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3084:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3084:6:4"
													},
													"referencedDeclaration": 190,
													"src": "3084:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3098:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3115:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:4"
									},
									"scope": 627,
									"src": "3053:407:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3856:333:4",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3866:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 448,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 452,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "3917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:4",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 177,
																"src": "3917:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 455,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 450,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:4",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:4"
											},
											{
												"condition": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 460,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "3996:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 461,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "4003:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 459,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3972:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "3967:216:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "4018:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4052:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 468,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 441,
																						"src": "4082:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$190",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:4",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 177,
																					"src": "4082:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:4",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 471,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "4106:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 466,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:4",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 464,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4032:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4152:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 478,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "4159:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 476,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4132:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3801:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 439,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3801:6:4"
													},
													"referencedDeclaration": 190,
													"src": "3801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3815:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3832:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:4"
									},
									"scope": 627,
									"src": "3779:410:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "4556:257:4",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4566:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 244,
														"src": "4588:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4637:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4646:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 518,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4653:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 519,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4663:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 520,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4666:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 521,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4669:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 512,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4617:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 236,
														"src": "4617:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:4"
											},
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4681:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [
														{
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 244,
														"src": "4702:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "4739:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 533,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "4753:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:4"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:4",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4370:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$251",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "4370:12:4"
													},
													"referencedDeclaration": 251,
													"src": "4370:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$251",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4398:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4469:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 497,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4512:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4531:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:4"
									},
									"scope": 627,
									"src": "4341:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5266:572:4",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "5615:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"arguments": [
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5669:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 554,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "5649:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 717,
														"src": "5641:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "5728:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "5765:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 569,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 566,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:4",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5225:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 543,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "5225:6:4"
													},
													"referencedDeclaration": 190,
													"src": "5225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5239:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:4"
									},
									"scope": 627,
									"src": "5196:642:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "6428:505:4",
										"statements": [
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "6724:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "6738:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"arguments": [
														{
															"id": 598,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "6785:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6773:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6819:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 602,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "6831:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 608,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "6868:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 609,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 611,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 606,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 620,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "6919:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 618,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 616,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "6892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$957_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:4",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "6892:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 588,
												"id": 624,
												"nodeType": "Return",
												"src": "6800:126:4"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6372:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 580,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "6372:6:4"
													},
													"referencedDeclaration": 190,
													"src": "6372:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6386:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6422:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:4"
									},
									"scope": 627,
									"src": "6339:594:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 628,
							"src": "701:6234:4",
							"usedErrors": []
						}
					],
					"src": "115:6821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							957
						]
					},
					"id": 958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 638,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 637,
												"id": 643,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 957,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 656,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		],
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 654,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													665,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 664,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 672,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 666,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 668,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 957,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 689,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 688,
												"id": 695,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 957,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 708,
												"id": 715,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 957,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 728,
												"id": 735,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 957,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		],
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													763,
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 762,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"id": 770,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 766,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 768,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 776,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 777,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 773,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 750,
												"id": 779,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 957,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 791,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															827
														],
														"referencedDeclaration": 827,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 796,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 957,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													811,
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 810,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 812,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"arguments": [
														{
															"id": 816,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 822,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 823,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 819,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 809,
												"id": 825,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 957,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 837,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															844,
															873
														],
														"referencedDeclaration": 873,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 836,
												"id": 842,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 957,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													857,
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 856,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 858,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"id": 862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 868,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 869,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 865,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 855,
												"id": 871,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 957,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 887,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 878,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 906,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 904,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 888,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 894,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 876,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 893,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 645,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 892,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 901,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 886,
															"id": 902,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 957,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 924,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 929,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 930,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 928,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 925,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 923,
															"id": 926,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 957,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 943,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 949,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 938,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 938,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 947,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 957,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 958,
							"src": "194:9169:5",
							"usedErrors": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 960,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 965,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 964,
												"id": 967,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 979,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 973,
												"id": 976,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 979,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/preSale.sol": {
				"ast": {
					"absolutePath": "contracts/preSale.sol",
					"exportedSymbols": {
						"Address": [
							957
						],
						"Context": [
							979
						],
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						],
						"IERC20Permit": [
							251
						],
						"Ownable": [
							112
						],
						"Presale": [
							1627
						],
						"SafeERC20": [
							627
						]
					},
					"id": 1628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 628,
							"src": "66:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 216,
							"src": "132:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 113,
							"src": "208:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "Ownable",
										"nameLocations": [
											"282:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "282:7:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:7"
								}
							],
							"canonicalName": "Presale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1627,
							"linearizedBaseContracts": [
								1627,
								112,
								979
							],
							"name": "Presale",
							"nameLocation": "271:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 990,
									"libraryName": {
										"id": 987,
										"name": "SafeERC20",
										"nameLocations": [
											"302:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "302:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "296:27:7",
									"typeName": {
										"id": 989,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 988,
											"name": "IERC20",
											"nameLocations": [
												"316:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "316:6:7"
										},
										"referencedDeclaration": 190,
										"src": "316:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 994,
									"libraryName": {
										"id": 991,
										"name": "SafeERC20",
										"nameLocations": [
											"334:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "334:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "328:35:7",
									"typeName": {
										"id": 993,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 992,
											"name": "IERC20Metadata",
											"nameLocations": [
												"348:14:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 215,
											"src": "348:14:7"
										},
										"referencedDeclaration": 215,
										"src": "348:14:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$215",
											"typeString": "contract IERC20Metadata"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 996,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "384:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "369:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e985e367",
									"id": 998,
									"mutability": "mutable",
									"name": "saleToken",
									"nameLocation": "439:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "424:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ace1741c",
									"id": 1000,
									"mutability": "mutable",
									"name": "saleTokenDec",
									"nameLocation": "466:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "454:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 999,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "454:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6bcedf9c",
									"id": 1002,
									"mutability": "mutable",
									"name": "totalTokensforSale",
									"nameLocation": "499:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "484:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1001,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa5b37f",
									"id": 1004,
									"mutability": "mutable",
									"name": "maxBuyLimit",
									"nameLocation": "538:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "523:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b81df742",
									"id": 1006,
									"mutability": "mutable",
									"name": "minBuyLimit",
									"nameLocation": "570:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "555:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ce0b9d2",
									"id": 1010,
									"mutability": "mutable",
									"name": "tokenWL",
									"nameLocation": "619:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "587:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1009,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1007,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "595:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "587:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1008,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "606:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "204120bc",
									"id": 1014,
									"mutability": "mutable",
									"name": "tokenPrices",
									"nameLocation": "667:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "632:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "640:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "632:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "651:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a82524b2",
									"id": 1016,
									"mutability": "mutable",
									"name": "presaleStartTime",
									"nameLocation": "737:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "722:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "249b7c19",
									"id": 1018,
									"mutability": "mutable",
									"name": "presaleEndTime",
									"nameLocation": "774:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "759:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 1020,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "810:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "795:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1019,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "795:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c",
									"id": 1026,
									"name": "TokenAdded",
									"nameLocation": "838:10:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "849:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "872:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "864:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:30:7"
									},
									"src": "832:47:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a",
									"id": 1032,
									"name": "TokenUpdated",
									"nameLocation": "890:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "911:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "903:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "926:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "918:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:30:7"
									},
									"src": "884:49:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c",
									"id": 1042,
									"name": "TokensBought",
									"nameLocation": "944:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "982:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "966:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1013:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "997:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1036:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1028:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensBought",
												"nameLocation": "1060:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1052:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:122:7"
									},
									"src": "938:141:7"
								},
								{
									"anonymous": false,
									"eventSelector": "03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a",
									"id": 1048,
									"name": "SaleTokenAdded",
									"nameLocation": "1090:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1105:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1128:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1120:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:31:7"
									},
									"src": "1084:52:7"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1156:2:7",
										"statements": []
									},
									"id": 1052,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:7"
									},
									"scope": 1627,
									"src": "1142:16:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1198:132:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1229:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1229:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f74207374617274656420796574",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1264:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															},
															"value": "Presale: Presale has not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1208:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1208:104:7"
											},
											{
												"id": 1061,
												"nodeType": "PlaceholderStatement",
												"src": "1322:1:7"
											}
										]
									},
									"id": 1063,
									"name": "isPresaleHasNotStarted",
									"nameLocation": "1173:22:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:7"
									},
									"src": "1164:166:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1364:146:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1066,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1395:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1401:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1395:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1068,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1414:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1395:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f74207374617274656420796574",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1444:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															},
															"value": "Presale: Presale has not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1374:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:118:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1374:118:7"
											},
											{
												"id": 1073,
												"nodeType": "PlaceholderStatement",
												"src": "1502:1:7"
											}
										]
									},
									"id": 1075,
									"name": "isPresaleStarted",
									"nameLocation": "1345:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:2:7"
									},
									"src": "1336:174:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1545:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1078,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1576:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1582:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1576:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1080,
																"name": "presaleEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "1594:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1576:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c652068617320656e646564",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																"typeString": "literal_string \"Presale: Presale has ended\""
															},
															"value": "Presale: Presale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																"typeString": "literal_string \"Presale: Presale has ended\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1555:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:105:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1555:105:7"
											},
											{
												"id": 1085,
												"nodeType": "PlaceholderStatement",
												"src": "1670:1:7"
											}
										]
									},
									"id": 1087,
									"name": "isPresaleNotEnded",
									"nameLocation": "1525:17:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:2:7"
									},
									"src": "1516:162:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1710:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1090,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1741:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1747:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1741:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1092,
																"name": "presaleEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "1760:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1741:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f7420656e64656420796574",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																"typeString": "literal_string \"Presale: Presale has not ended yet\""
															},
															"value": "Presale: Presale has not ended yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																"typeString": "literal_string \"Presale: Presale has not ended yet\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1720:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1720:114:7"
											},
											{
												"id": 1097,
												"nodeType": "PlaceholderStatement",
												"src": "1844:1:7"
											}
										]
									},
									"id": 1099,
									"name": "isPresaleEnded",
									"nameLocation": "1693:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:7"
									},
									"src": "1684:168:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "1976:622:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "_saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2007:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2029:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2021:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2021:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2021:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2007:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65726f2061646472657373",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2045:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																"typeString": "literal_string \"Presale: Sale token cannot be zero address\""
															},
															"value": "Presale: Sale token cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																"typeString": "literal_string \"Presale: Sale token cannot be zero address\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "1986:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "_totalTokensforSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "2130:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2152:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2130:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063616e6e6f74206265207a65726f",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																"typeString": "literal_string \"Presale: Total tokens for sale cannot be zero\""
															},
															"value": "Presale: Total tokens for sale cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																"typeString": "literal_string \"Presale: Total tokens for sale cannot be zero\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2109:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2109:115:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2109:115:7"
											},
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2234:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1126,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "2246:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2234:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "2234:22:7"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1129,
														"name": "saleTokenDec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2266:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1131,
																		"name": "saleToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "2296:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2281:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$215_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2281:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$215",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2307:8:7",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 214,
															"src": "2281:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2281:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2266:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "2266:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2376:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2380:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2376:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1145,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2408:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2400:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1143,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2400:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2400:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "_totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2427:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1138,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "2335:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1137,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2328:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2328:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2346:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "2328:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:128:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2328:128:7"
											},
											{
												"expression": {
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2466:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1157,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2523:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$1627",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$1627",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2515:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1155,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2515:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2515:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "saleToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "2494:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1151,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "2487:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:9:7",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "2487:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2487:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2466:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "2466:63:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1163,
															"name": "_saleToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2559:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "_totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2571:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "SaleTokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "2544:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2544:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "EmitStatement",
												"src": "2539:52:7"
											}
										]
									},
									"functionSelector": "89e6ce1e",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"1966:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1966:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1966:9:7"
										}
									],
									"name": "setSaleTokenParams",
									"nameLocation": "1867:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "1903:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1895:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_totalTokensforSale",
												"nameLocation": "1931:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1923:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:71:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:7"
									},
									"scope": 1627,
									"src": "1858:740:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "2697:112:7",
										"statements": [
											{
												"expression": {
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "presaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2707:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1176,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2726:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2732:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2726:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2707:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "2707:34:7"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1180,
														"name": "presaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2751:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1181,
															"name": "presaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2768:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1182,
															"name": "_presaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2787:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2768:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2751:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2751:51:7"
											}
										]
									},
									"functionSelector": "5b10bd6a",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1172,
												"name": "onlyOwner",
												"nameLocations": [
													"2687:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2687:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2687:9:7"
										}
									],
									"name": "startAndSetPresaleEndTime",
									"nameLocation": "2613:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_presaleEndTime",
												"nameLocation": "2656:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2648:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:39:7"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2697:0:7"
									},
									"scope": 1627,
									"src": "2604:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "2892:67:7",
										"statements": [
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "presaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2902:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1195,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2919:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2925:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2919:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1197,
															"name": "_presaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "2937:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2919:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2902:50:7"
											}
										]
									},
									"functionSelector": "0fabdd44",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1191,
												"name": "onlyOwner",
												"nameLocations": [
													"2882:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2882:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2882:9:7"
										}
									],
									"name": "upateTime",
									"nameLocation": "2824:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_presaleEndTime",
												"nameLocation": "2851:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2843:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2833:39:7"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:7"
									},
									"scope": 1627,
									"src": "2815:144:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "3067:118:7",
										"statements": [
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1211,
															"name": "tokenWL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "3077:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1212,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3085:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3077:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3095:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3077:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3077:22:7"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1217,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3109:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"id": 1218,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3121:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3109:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3131:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3109:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3109:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1224,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3163:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3171:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "TokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3152:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "3147:31:7"
											}
										]
									},
									"functionSelector": "444ad5ee",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyOwner",
												"nameLocations": [
													"3057:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3057:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3057:9:7"
										}
									],
									"name": "addWhiteListedToken",
									"nameLocation": "2974:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3011:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "3003:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3035:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "3027:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:54:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3067:0:7"
									},
									"scope": 1627,
									"src": "2965:220:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "3248:29:7",
										"statements": [
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3258:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3265:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3258:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "3258:12:7"
											}
										]
									},
									"functionSelector": "3f6f7ed6",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyOwner",
												"nameLocations": [
													"3238:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3238:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3238:9:7"
										}
									],
									"name": "updateEthRate",
									"nameLocation": "3200:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "3222:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3214:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:15:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3248:0:7"
									},
									"scope": 1627,
									"src": "3191:86:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "3381:156:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1251,
																"name": "tokenWL",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "3399:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1253,
															"indexExpression": {
																"id": 1252,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "3407:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3399:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3416:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																"typeString": "literal_string \"Presale: Token not whitelisted\""
															},
															"value": "Presale: Token not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																"typeString": "literal_string \"Presale: Token not whitelisted\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3391:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3391:58:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3459:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1259,
														"indexExpression": {
															"id": 1258,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "3471:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3459:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "3481:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3459:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "3459:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1264,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "3515:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "3523:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "TokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3502:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3502:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "EmitStatement",
												"src": "3497:33:7"
											}
										]
									},
									"functionSelector": "226ac321",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "onlyOwner",
												"nameLocations": [
													"3371:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3371:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3371:9:7"
										}
									],
									"name": "updateTokenRate",
									"nameLocation": "3292:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3325:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3317:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3349:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3341:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:54:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:0:7"
									},
									"scope": 1627,
									"src": "3283:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "3652:438:7",
										"statements": [
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "amtOut",
														"nameLocation": "3670:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "3662:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3662:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"nodeType": "VariableDeclarationStatement",
												"src": "3662:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1281,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "3690:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3707:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3699:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3699:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3699:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3690:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1335,
													"nodeType": "Block",
													"src": "3939:122:7",
													"statements": [
														{
															"expression": {
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1317,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "3953:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1318,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "3962:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3970:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3962:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4049:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3962:88:7",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1321,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "3991:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1322,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4001:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"id": 1323,
																									"name": "saleTokenDec",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1000,
																									"src": "4007:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4001:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1325,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4000:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3991:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1327,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3990:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"id": 1328,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "4025:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1329,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4024:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3990:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3953:97:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "3953:97:7"
														}
													]
												},
												"id": 1336,
												"nodeType": "IfStatement",
												"src": "3686:375:7",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "3711:222:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1288,
																			"name": "tokenWL",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "3733:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1290,
																		"indexExpression": {
																			"id": 1289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "3741:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3733:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3749:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		},
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		}
																	],
																	"id": 1287,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3725:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3725:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1293,
															"nodeType": "ExpressionStatement",
															"src": "3725:57:7"
														},
														{
															"expression": {
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1294,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "3797:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1295,
																				"name": "tokenPrices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "3806:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1297,
																			"indexExpression": {
																				"id": 1296,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1271,
																				"src": "3818:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3806:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3828:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3806:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3921:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3806:116:7",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1300,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "3849:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1303,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3859:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"id": 1302,
																									"name": "saleTokenDec",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1000,
																									"src": "3865:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3859:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1304,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3858:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3849:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1306,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3848:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"baseExpression": {
																						"id": 1307,
																						"name": "tokenPrices",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1014,
																						"src": "3883:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1309,
																					"indexExpression": {
																						"id": 1308,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1271,
																						"src": "3895:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3883:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1310,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3882:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3848:54:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3797:125:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "3797:125:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1337,
													"name": "amtOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1279,
													"src": "4077:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1338,
												"nodeType": "Return",
												"src": "4070:13:7"
											}
										]
									},
									"functionSelector": "115ece4c",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmount",
									"nameLocation": "3554:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3586:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3578:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3578:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3609:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3601:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:53:7"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3643:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:7"
									},
									"scope": 1627,
									"src": "3545:545:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "4221:957:7",
										"statements": [
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "saleTokenAmt",
														"nameLocation": "4240:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4232:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4232:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1353,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4273:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4265:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4265:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4265:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4255:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4359:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4351:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4351:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4363:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4367:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4363:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1363,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4336:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4336:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4255:118:7",
													"trueExpression": {
														"arguments": [
															{
																"id": 1360,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "4305:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1361,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "4313:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1359,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4290:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4290:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4232:141:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1374,
																			"name": "totalTokensSold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "4406:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1375,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4424:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4406:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4405:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1378,
																"name": "totalTokensforSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "4441:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4405:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f74616c20546f6b656e2053616c65205265616368656421",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4473:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																"typeString": "literal_string \"Presale: Total Token Sale Reached!\""
															},
															"value": "Presale: Total Token Sale Reached!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																"typeString": "literal_string \"Presale: Total Token Sale Reached!\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4384:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:135:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4384:135:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "4534:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4552:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4544:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4544:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4544:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4534:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "4738:323:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1407,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4760:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1408,
																			"name": "minBuyLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "4776:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4760:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c696d6974",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4789:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																			"typeString": "literal_string \"Presale: Amount below min buy limit\""
																		},
																		"value": "Presale: Amount below min buy limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																			"typeString": "literal_string \"Presale: Amount below min buy limit\""
																		}
																	],
																	"id": 1406,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4752:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4752:75:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "4752:75:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1414,
																			"name": "tokenWL",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "4849:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1416,
																		"indexExpression": {
																			"id": 1415,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "4857:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4849:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4866:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		},
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		}
																	],
																	"id": 1413,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4841:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4841:58:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "4841:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1424,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4945:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4949:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4945:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1428,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4965:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Presale_$1627",
																					"typeString": "contract Presale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Presale_$1627",
																					"typeString": "contract Presale"
																				}
																			],
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4957:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1426,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4957:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4957:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1430,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "4972:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1421,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "4920:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1420,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4913:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4913:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4928:16:7",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "4913:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4913:67:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "4913:67:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1437,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5025:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5029:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5025:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1439,
																		"name": "saleTokenAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "5037:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1434,
																				"name": "saleToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "5001:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1433,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4994:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4994:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5012:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "4994:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4994:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "4994:56:7"
														}
													]
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "4530:531:7",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "4556:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1390,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4578:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1391,
																			"name": "minBuyLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "4594:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4578:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20627579206c696d6974",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4607:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																			"typeString": "literal_string \"Presale: Token amount below min buy limit\""
																		},
																		"value": "Presale: Token amount below min buy limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																			"typeString": "literal_string \"Presale: Token amount below min buy limit\""
																		}
																	],
																	"id": 1389,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4570:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4570:81:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1395,
															"nodeType": "ExpressionStatement",
															"src": "4570:81:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1400,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4696:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4700:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4696:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1402,
																		"name": "saleTokenAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "4708:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1397,
																				"name": "saleToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "4672:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1396,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4665:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4683:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "4665:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4665:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "4665:56:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "5070:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1445,
														"name": "saleTokenAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "5089:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5070:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "5070:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5129:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5133:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5129:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5149:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1453,
															"name": "saleTokenAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "TokensBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5116:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5116:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "5111:60:7"
											}
										]
									},
									"functionSelector": "68f8fc10",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "isPresaleStarted",
												"nameLocations": [
													"4186:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1075,
												"src": "4186:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4186:16:7"
										},
										{
											"id": 1349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1348,
												"name": "isPresaleNotEnded",
												"nameLocations": [
													"4203:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1087,
												"src": "4203:17:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4203:17:7"
										}
									],
									"name": "buyToken",
									"nameLocation": "4105:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4131:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4123:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4155:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4147:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4113:55:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4221:0:7"
									},
									"scope": 1627,
									"src": "4096:1082:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "5249:43:7",
										"statements": [
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "minBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5259:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1465,
														"name": "_minBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "5273:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5259:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "5259:26:7"
											}
										]
									},
									"functionSelector": "99b77032",
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1462,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1461,
												"name": "onlyOwner",
												"nameLocations": [
													"5239:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5239:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5239:9:7"
										}
									],
									"name": "setMinBuyLimit",
									"nameLocation": "5193:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_minBuyLimit",
												"nameLocation": "5216:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5208:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:22:7"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5249:0:7"
									},
									"scope": 1627,
									"src": "5184:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5363:43:7",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "maxBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5373:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1477,
														"name": "_maxBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "5387:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5373:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "5373:26:7"
											}
										]
									},
									"functionSelector": "757765f8",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "onlyOwner",
												"nameLocations": [
													"5353:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5353:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5353:9:7"
										}
									],
									"name": "setMaxBuyLimit",
									"nameLocation": "5307:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "_maxBuyLimit",
												"nameLocation": "5330:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5322:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:22:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5363:0:7"
									},
									"scope": 1627,
									"src": "5298:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "5541:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5582:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5586:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5582:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5594:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1491,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5558:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1490,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5551:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5551:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5569:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "5551:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5551:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "5551:51:7"
											}
										]
									},
									"functionSelector": "ded441c2",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "onlyOwner",
												"nameLocations": [
													"5516:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5516:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5516:9:7"
										},
										{
											"id": 1488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1487,
												"name": "isPresaleEnded",
												"nameLocations": [
													"5526:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "5526:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5526:14:7"
										}
									],
									"name": "withdrawSaleToken",
									"nameLocation": "5472:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5498:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5490:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5489:17:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:0:7"
									},
									"scope": 1627,
									"src": "5463:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5746:130:7",
										"statements": [
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "5764:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5756:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5756:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1515,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5806:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5798:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1513,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5798:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5798:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1510,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5777:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1509,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5770:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5770:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5788:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "5770:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5770:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5756:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5853:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5857:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "5865:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1520,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5829:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1519,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5822:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5822:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5840:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "5822:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5822:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "5822:47:7"
											}
										]
									},
									"functionSelector": "fb00f3fc",
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "onlyOwner",
												"nameLocations": [
													"5721:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5721:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5721:9:7"
										},
										{
											"id": 1505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1504,
												"name": "isPresaleEnded",
												"nameLocations": [
													"5731:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "5731:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5731:14:7"
										}
									],
									"name": "withdrawAllSaleToken",
									"nameLocation": "5689:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5709:2:7"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5746:0:7"
									},
									"scope": 1627,
									"src": "5680:196:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "5976:146:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1542,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6052:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1543,
																"name": "tokenPrices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "6057:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1545,
															"indexExpression": {
																"id": 1544,
																"name": "_usdtAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6069:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6057:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1546,
															"name": "totalTokensSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "6083:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1547,
															"name": "presaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "6099:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1548,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6051:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1549,
												"nodeType": "Return",
												"src": "6044:70:7"
											}
										]
									},
									"functionSelector": "5a2696ca",
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchDataForFrontend",
									"nameLocation": "5891:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_usdtAddress",
												"nameLocation": "5920:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "5912:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5912:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5911:22:7"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "5956:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5956:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "5961:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "5966:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5966:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "5971:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5971:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:21:7"
									},
									"scope": 1627,
									"src": "5882:240:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "6254:186:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "6272:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1562,
																"name": "saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "6281:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6272:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f6b656e20776974682074686973206d6574686f642c2075736520776974686472617753616c65546f6b656e282920696e7374656164",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6292:87:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\""
															},
															"value": "Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\""
															}
														],
														"id": 1560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6264:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6264:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "6264:116:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6417:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6421:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6417:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "6429:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1568,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "6397:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1567,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6390:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6390:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6404:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "6390:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "6390:43:7"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1557,
												"name": "onlyOwner",
												"nameLocations": [
													"6244:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6244:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6244:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "6198:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6215:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "6207:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "6230:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "6222:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6222:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6206:28:7"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6254:0:7"
									},
									"scope": 1627,
									"src": "6189:251:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "6502:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1585,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "6520:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1586,
																"name": "saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "6529:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6520:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f6b656e20776974682074686973206d6574686f642c20757365207769746864726177416c6c53616c65546f6b656e282920696e7374656164",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6540:90:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\""
															},
															"value": "Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\""
															}
														],
														"id": 1584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6512:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6512:119:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "6512:119:7"
											},
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "6649:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "6641:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6641:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1599,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6687:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1627",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6679:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1597,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6679:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6679:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1594,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "6662:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1593,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6655:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6655:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6669:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "6655:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6655:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6641:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "6712:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "6719:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1603,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "6703:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6703:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "6703:20:7"
											}
										]
									},
									"functionSelector": "fa09e630",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1581,
												"name": "onlyOwner",
												"nameLocations": [
													"6492:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6492:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6492:9:7"
										}
									],
									"name": "withdrawAll",
									"nameLocation": "6456:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6476:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "6468:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6468:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6467:15:7"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6502:0:7"
									},
									"scope": 1627,
									"src": "6447:283:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "6837:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1622,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "6876:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1618,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6855:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6859:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6855:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6847:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1616,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6847:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6847:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6867:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6847:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6847:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "6847:33:7"
											}
										]
									},
									"functionSelector": "3c00a36c",
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "onlyOwner",
												"nameLocations": [
													"6827:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6827:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6827:9:7"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "6788:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "6813:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "6805:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6805:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6804:13:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6837:0:7"
									},
									"scope": 1627,
									"src": "6779:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1628,
							"src": "262:6627:7",
							"usedErrors": []
						}
					],
					"src": "41:6848:7"
				},
				"id": 7
			}
		}
	}
}