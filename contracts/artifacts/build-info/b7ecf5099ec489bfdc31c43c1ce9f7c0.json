{
	"id": "b7ecf5099ec489bfdc31c43c1ce9f7c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/preSale.sol": {
				"content": "// SPDX-License-Identifier: MIT\n//gautam\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Presale is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeERC20 for IERC20Metadata;\n\n    uint256 public rate; // Single uint value for rate\n    address public saleToken;\n    uint public saleTokenDec;\n    uint256 public totalTokensforSale;\n    uint256 public maxBuyLimit;\n    uint256 public minBuyLimit;\n    mapping(address => bool) public tokenWL;\n    mapping(address => uint256) public tokenPrices; // Single uint value for token price\n\n    uint256 public presaleStartTime;\n    uint256 public presaleEndTime;\n\n    uint256 public totalTokensSold;\n\n    event TokenAdded(address token, uint256 price);\n    event TokenUpdated(address token, uint256 price);\n    event TokensBought(\n        address indexed buyer,\n        address indexed token,\n        uint256 amount,\n        uint256 tokensBought\n    );\n    event SaleTokenAdded(address token, uint256 amount);\n\n    constructor() {}\n\n    modifier isPresaleHasNotStarted() {\n        require(\n            presaleStartTime != 0,\n            \"Presale: Presale has not started yet\"\n        );\n        _;\n    }\n\n    modifier isPresaleStarted() {\n        require(\n            block.timestamp >= presaleStartTime,\n            \"Presale: Presale has not started yet\"\n        );\n        _;\n    }\n\n    modifier isPresaleNotEnded() {\n        require(\n            block.timestamp < presaleEndTime,\n            \"Presale: Presale has ended\"\n        );\n        _;\n    }\n\n    modifier isPresaleEnded() {\n        require(\n            block.timestamp >= presaleEndTime,\n            \"Presale: Presale has not ended yet\"\n        );\n        _;\n    }\n\n    function setSaleTokenParams(\n        address _saleToken,\n        uint256 _totalTokensforSale\n    ) external onlyOwner {\n        require(\n            _saleToken != address(0),\n            \"Presale: Sale token cannot be zero address\"\n        );\n        require(\n            _totalTokensforSale > 0,\n            \"Presale: Total tokens for sale cannot be zero\"\n        );\n        saleToken = _saleToken;\n        saleTokenDec = IERC20Metadata(saleToken).decimals();\n\n        IERC20(saleToken).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _totalTokensforSale\n        );\n        totalTokensforSale = IERC20(saleToken).balanceOf(address(this));\n        emit SaleTokenAdded(_saleToken, _totalTokensforSale);\n    }\n\n    function startAndSetPresaleEndTime(\n        uint256 _presaleEndTime\n    ) external onlyOwner {\n        presaleStartTime = block.timestamp;\n        presaleEndTime = presaleStartTime + _presaleEndTime;\n    }\n\n    function upateTime(\n        uint256 _presaleEndTime\n    ) external onlyOwner {\n        presaleEndTime = block.timestamp + _presaleEndTime;\n    }\n\n    function addWhiteListedToken(\n        address _token,\n        uint256 _price\n    ) external onlyOwner {\n        tokenWL[_token] = true;\n        tokenPrices[_token] = _price;\n        emit TokenAdded(_token, _price);\n    }\n\n    function updateEthRate(uint256 _rate) external onlyOwner {\n        rate = _rate;\n    }\n\n    function updateTokenRate(\n        address _token,\n        uint256 _price\n    ) external onlyOwner {\n        require(tokenWL[_token], \"Presale: Token not whitelisted\");\n        tokenPrices[_token] = _price;\n        emit TokenUpdated(_token, _price);\n    }\n\n\n\n    function getTokenAmount(\n        address token,\n        uint256 amount\n    ) public view returns (uint256) {\n        uint256 amtOut;\n        if (token != address(0)) {\n            require(tokenWL[token], \"Presale: Token not whitelisted\");\n\n            amtOut = tokenPrices[token] != 0\n                ? (amount * (10 ** saleTokenDec)) / (tokenPrices[token])\n                : 0;\n        } else {\n            amtOut = rate != 0\n                ? (amount * (10 ** saleTokenDec)) / (rate)\n                : 0;\n        }\n        return amtOut;\n    }\n\n    function buyToken(\n        address _token,\n        uint256 _amount\n    ) external payable isPresaleStarted isPresaleNotEnded {\n\n        uint256 saleTokenAmt = _token != address(0)\n            ? getTokenAmount(_token, _amount)\n            : getTokenAmount(address(0), msg.value);\n\n        require(\n            (totalTokensSold + saleTokenAmt) <= totalTokensforSale,\n            \"Presale: Total Token Sale Reached!\"\n        );\n\n        if (_token == address(0)) {\n            require(saleTokenAmt >= minBuyLimit, \"Presale: Token amount below min buy limit\");\n            IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt);\n        } else {\n            require(saleTokenAmt >= minBuyLimit, \"Presale: Amount below min buy limit\");\n            require(tokenWL[_token], \"Presale: Token not whitelisted\");\n            IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n            IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt);\n        }\n        totalTokensSold += saleTokenAmt;\n        emit TokensBought(msg.sender, _token, _amount, saleTokenAmt);\n    }\n\n    function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {\n        minBuyLimit = _minBuyLimit;\n    }\n\n    function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {\n        maxBuyLimit = _maxBuyLimit;\n    }\n\n    // Withdraw sale tokens to the owner's address\n    function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {\n        IERC20(saleToken).safeTransfer(msg.sender, _amount);\n    }\n\n    // Withdraw all available sale tokens to the owner's address\n    function withdrawAllSaleToken() external onlyOwner isPresaleEnded {\n        uint256 amt = IERC20(saleToken).balanceOf(address(this));\n        IERC20(saleToken).safeTransfer(msg.sender, amt);\n    }\n\n    // Withdraw specific ERC20 tokens to the owner's address\n    function withdraw(address token, uint256 amt) public   onlyOwner {\n        require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\");\n        IERC20(token).safeTransfer(msg.sender, amt);\n    }\n\n     function withdrawAll(address token) external onlyOwner {\n        require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\");\n        uint256 amt = IERC20(token).balanceOf(address(this));\n        withdraw(token, amt);\n    }\n\n    // Withdraw ETH to the owner's address\n    function withdrawCurrency(uint256 amt) external onlyOwner {\n        payable(msg.sender).transfer(amt);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "701:6234:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/preSale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SaleTokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensBought",
									"type": "uint256"
								}
							],
							"name": "TokensBought",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addWhiteListedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBuyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBuyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTokenDec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxBuyLimit",
									"type": "uint256"
								}
							],
							"name": "setMaxBuyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minBuyLimit",
									"type": "uint256"
								}
							],
							"name": "setMinBuyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_totalTokensforSale",
									"type": "uint256"
								}
							],
							"name": "setSaleTokenParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_presaleEndTime",
									"type": "uint256"
								}
							],
							"name": "startAndSetPresaleEndTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenWL",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensforSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_presaleEndTime",
									"type": "uint256"
								}
							],
							"name": "upateTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "updateEthRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "updateTokenRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllSaleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawSaleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/preSale.sol\":262:6643  contract Presale is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/preSale.sol\":1142:1158  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/preSale.sol\":262:6643  contract Presale is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/preSale.sol\":262:6643  contract Presale is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/preSale.sol\":262:6643  contract Presale is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xace1741c\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfa09e630\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfb00f3fc\n      eq\n      tag_30\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0xace1741c\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb81df742\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xded441c2\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe985e367\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x8ce0b9d2\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x8ce0b9d2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x99b77032\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa82524b2\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x757765f8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x89e6ce1e\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x3f6f7ed6\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x68f8fc10\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6aa5b37f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6bcedf9c\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x3f6f7ed6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x444ad5ee\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5b10bd6a\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x226ac321\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x226ac321\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x249b7c19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c00a36c\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x0fabdd44\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x115ece4c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x204120bc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":632:678  mapping(address => uint256) public tokenPrices */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/preSale.sol\":759:788  uint256 public presaleEndTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":369:388  uint256 public rate */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":6533:6641  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/preSale.sol\":795:825  uint256 public totalTokensSold */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n    tag_13:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/preSale.sol\":523:549  uint256 public maxBuyLimit */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":484:517  uint256 public totalTokensforSale */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/preSale.sol\":587:626  mapping(address => bool) public tokenWL */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/preSale.sol\":722:753  uint256 public presaleStartTime */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":454:478  uint public saleTokenDec */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":555:581  uint256 public minBuyLimit */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/preSale.sol\":424:448  address public saleToken */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      stop\n        /* \"contracts/preSale.sol\":5943:6194  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"contracts/preSale.sol\":6201:6484  function withdrawAll(address token) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      stop\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/preSale.sol\":2937:2952  _presaleEndTime */\n      dup1\n        /* \"contracts/preSale.sol\":2919:2934  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":2919:2952  block.timestamp + _presaleEndTime */\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/preSale.sol\":2902:2916  presaleEndTime */\n      0x0a\n        /* \"contracts/preSale.sol\":2902:2952  presaleEndTime = block.timestamp + _presaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2815:2959  function upateTime(... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n    tag_47:\n        /* \"contracts/preSale.sol\":3643:3650  uint256 */\n      0x00\n        /* \"contracts/preSale.sol\":3662:3676  uint256 amtOut */\n      dup1\n        /* \"contracts/preSale.sol\":3707:3708  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3690:3709  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":3690:3695  token */\n      dup5\n        /* \"contracts/preSale.sol\":3690:3709  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/preSale.sol\":3733:3740  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3733:3747  tokenWL[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3741:3746  token */\n      dup6\n        /* \"contracts/preSale.sol\":3733:3747  tokenWL[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":3725:3782  require(tokenWL[token], \"Presale: Token not whitelisted\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/preSale.sol\":3828:3829  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3806:3817  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3806:3824  tokenPrices[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3818:3823  token */\n      dup7\n        /* \"contracts/preSale.sol\":3806:3824  tokenPrices[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/preSale.sol\":3806:3829  tokenPrices[token] != 0 */\n      sub\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n      tag_171\n      jumpi\n        /* \"contracts/preSale.sol\":3921:3922  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n      jump(tag_172)\n    tag_171:\n        /* \"contracts/preSale.sol\":3883:3894  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3883:3901  tokenPrices[token] */\n      0x00\n        /* \"contracts/preSale.sol\":3895:3900  token */\n      dup6\n        /* \"contracts/preSale.sol\":3883:3901  tokenPrices[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/preSale.sol\":3865:3877  saleTokenDec */\n      sload(0x03)\n        /* \"contracts/preSale.sol\":3859:3861  10 */\n      0x0a\n        /* \"contracts/preSale.sol\":3859:3877  10 ** saleTokenDec */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/preSale.sol\":3849:3855  amount */\n      dup5\n        /* \"contracts/preSale.sol\":3849:3878  amount * (10 ** saleTokenDec) */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/preSale.sol\":3848:3902  (amount * (10 ** saleTokenDec)) / (tokenPrices[token]) */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/preSale.sol\":3806:3922  tokenPrices[token] != 0... */\n    tag_172:\n        /* \"contracts/preSale.sol\":3797:3922  amtOut = tokenPrices[token] != 0... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n      jump(tag_179)\n    tag_167:\n        /* \"contracts/preSale.sol\":3970:3971  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3962:3966  rate */\n      sload(0x01)\n        /* \"contracts/preSale.sol\":3962:3971  rate != 0 */\n      sub\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n      tag_180\n      jumpi\n        /* \"contracts/preSale.sol\":4049:4050  0 */\n      0x00\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n      jump(tag_181)\n    tag_180:\n        /* \"contracts/preSale.sol\":4025:4029  rate */\n      sload(0x01)\n        /* \"contracts/preSale.sol\":4007:4019  saleTokenDec */\n      sload(0x03)\n        /* \"contracts/preSale.sol\":4001:4003  10 */\n      0x0a\n        /* \"contracts/preSale.sol\":4001:4019  10 ** saleTokenDec */\n      tag_182\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_182:\n        /* \"contracts/preSale.sol\":3991:3997  amount */\n      dup5\n        /* \"contracts/preSale.sol\":3991:4020  amount * (10 ** saleTokenDec) */\n      tag_183\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_183:\n        /* \"contracts/preSale.sol\":3990:4030  (amount * (10 ** saleTokenDec)) / (rate) */\n      tag_184\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_184:\n        /* \"contracts/preSale.sol\":3962:4050  rate != 0... */\n    tag_181:\n        /* \"contracts/preSale.sol\":3953:4050  amtOut = rate != 0... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":3686:4061  if (token != address(0)) {... */\n    tag_179:\n        /* \"contracts/preSale.sol\":4077:4083  amtOut */\n      dup1\n        /* \"contracts/preSale.sol\":4070:4083  return amtOut */\n      swap2\n      pop\n      pop\n        /* \"contracts/preSale.sol\":3545:4090  function getTokenAmount(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":632:678  mapping(address => uint256) public tokenPrices */\n    tag_54:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/preSale.sol\":3399:3406  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3399:3414  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3407:3413  _token */\n      dup4\n        /* \"contracts/preSale.sol\":3399:3414  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":3391:3449  require(tokenWL[_token], \"Presale: Token not whitelisted\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_170\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/preSale.sol\":3481:3487  _price */\n      dup1\n        /* \"contracts/preSale.sol\":3459:3470  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3459:3478  tokenPrices[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3471:3477  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3459:3478  tokenPrices[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/preSale.sol\":3459:3487  tokenPrices[_token] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3502:3530  TokenUpdated(_token, _price) */\n      0xc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a\n        /* \"contracts/preSale.sol\":3515:3521  _token */\n      dup3\n        /* \"contracts/preSale.sol\":3523:3529  _price */\n      dup3\n        /* \"contracts/preSale.sol\":3502:3530  TokenUpdated(_token, _price) */\n      mload(0x40)\n      tag_190\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":3283:3537  function updateTokenRate(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":759:788  uint256 public presaleEndTime */\n    tag_62:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":369:388  uint256 public rate */\n    tag_66:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":6533:6641  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/preSale.sol\":6609:6619  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":6601:6629  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6601:6634  payable(msg.sender).transfer(amt) */\n      0x08fc\n        /* \"contracts/preSale.sol\":6630:6633  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6601:6634  payable(msg.sender).transfer(amt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n        /* \"contracts/preSale.sol\":6533:6641  function withdrawCurrency(uint256 amt) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/preSale.sol\":3265:3270  _rate */\n      dup1\n        /* \"contracts/preSale.sol\":3258:3262  rate */\n      0x01\n        /* \"contracts/preSale.sol\":3258:3270  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3191:3277  function updateEthRate(uint256 _rate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/preSale.sol\":3095:3099  true */\n      0x01\n        /* \"contracts/preSale.sol\":3077:3084  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":3077:3092  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3085:3091  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3077:3092  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/preSale.sol\":3077:3099  tokenWL[_token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3131:3137  _price */\n      dup1\n        /* \"contracts/preSale.sol\":3109:3120  tokenPrices */\n      0x08\n        /* \"contracts/preSale.sol\":3109:3128  tokenPrices[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":3121:3127  _token */\n      dup5\n        /* \"contracts/preSale.sol\":3109:3128  tokenPrices[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/preSale.sol\":3109:3137  tokenPrices[_token] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":3152:3178  TokenAdded(_token, _price) */\n      0xf4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c\n        /* \"contracts/preSale.sol\":3163:3169  _token */\n      dup3\n        /* \"contracts/preSale.sol\":3171:3177  _price */\n      dup3\n        /* \"contracts/preSale.sol\":3152:3178  TokenAdded(_token, _price) */\n      mload(0x40)\n      tag_203\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":2965:3185  function addWhiteListedToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/preSale.sol\":2726:2741  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":2707:2723  presaleStartTime */\n      0x09\n        /* \"contracts/preSale.sol\":2707:2741  presaleStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2787:2802  _presaleEndTime */\n      dup1\n        /* \"contracts/preSale.sol\":2768:2784  presaleStartTime */\n      sload(0x09)\n        /* \"contracts/preSale.sol\":2768:2802  presaleStartTime + _presaleEndTime */\n      tag_207\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_207:\n        /* \"contracts/preSale.sol\":2751:2765  presaleEndTime */\n      0x0a\n        /* \"contracts/preSale.sol\":2751:2802  presaleEndTime = presaleStartTime + _presaleEndTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2604:2809  function startAndSetPresaleEndTime(... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":795:825  uint256 public totalTokensSold */\n    tag_86:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n    tag_90:\n        /* \"contracts/preSale.sol\":1414:1430  presaleStartTime */\n      sload(0x09)\n        /* \"contracts/preSale.sol\":1395:1410  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1395:1430  block.timestamp >= presaleStartTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1374:1492  require(... */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/preSale.sol\":1594:1608  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1576:1591  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1576:1608  block.timestamp < presaleEndTime */\n      lt\n        /* \"contracts/preSale.sol\":1555:1660  require(... */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/preSale.sol\":4232:4252  uint256 saleTokenAmt */\n      0x00\n        /* \"contracts/preSale.sol\":4273:4274  0 */\n      dup1\n        /* \"contracts/preSale.sol\":4255:4275  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4255:4261  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4255:4275  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n      tag_217\n      jumpi\n        /* \"contracts/preSale.sol\":4336:4373  getTokenAmount(address(0), msg.value) */\n      tag_218\n        /* \"contracts/preSale.sol\":4359:4360  0 */\n      0x00\n        /* \"contracts/preSale.sol\":4363:4372  msg.value */\n      callvalue\n        /* \"contracts/preSale.sol\":4336:4350  getTokenAmount */\n      tag_47\n        /* \"contracts/preSale.sol\":4336:4373  getTokenAmount(address(0), msg.value) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n      jump(tag_219)\n    tag_217:\n        /* \"contracts/preSale.sol\":4290:4321  getTokenAmount(_token, _amount) */\n      tag_220\n        /* \"contracts/preSale.sol\":4305:4311  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4313:4320  _amount */\n      dup4\n        /* \"contracts/preSale.sol\":4290:4304  getTokenAmount */\n      tag_47\n        /* \"contracts/preSale.sol\":4290:4321  getTokenAmount(_token, _amount) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/preSale.sol\":4255:4373  _token != address(0)... */\n    tag_219:\n        /* \"contracts/preSale.sol\":4232:4373  uint256 saleTokenAmt = _token != address(0)... */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":4441:4459  totalTokensforSale */\n      sload(0x04)\n        /* \"contracts/preSale.sol\":4424:4436  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4406:4421  totalTokensSold */\n      sload(0x0b)\n        /* \"contracts/preSale.sol\":4406:4436  totalTokensSold + saleTokenAmt */\n      tag_221\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_221:\n        /* \"contracts/preSale.sol\":4405:4459  (totalTokensSold + saleTokenAmt) <= totalTokensforSale */\n      gt\n      iszero\n        /* \"contracts/preSale.sol\":4384:4519  require(... */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/preSale.sol\":4552:4553  0 */\n      0x00\n        /* \"contracts/preSale.sol\":4534:4554  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4534:4540  _token */\n      dup4\n        /* \"contracts/preSale.sol\":4534:4554  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"contracts/preSale.sol\":4594:4605  minBuyLimit */\n      sload(0x06)\n        /* \"contracts/preSale.sol\":4578:4590  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4578:4605  saleTokenAmt >= minBuyLimit */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":4570:4651  require(saleTokenAmt >= minBuyLimit, \"Presale: Token amount below min buy limit\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/preSale.sol\":4665:4721  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      tag_229\n        /* \"contracts/preSale.sol\":4696:4706  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":4708:4720  saleTokenAmt */\n      dup3\n        /* \"contracts/preSale.sol\":4672:4681  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4665:4695  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"contracts/preSale.sol\":4665:4721  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n      jump(tag_231)\n    tag_225:\n        /* \"contracts/preSale.sol\":4776:4787  minBuyLimit */\n      sload(0x06)\n        /* \"contracts/preSale.sol\":4760:4772  saleTokenAmt */\n      dup2\n        /* \"contracts/preSale.sol\":4760:4787  saleTokenAmt >= minBuyLimit */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":4752:4827  require(saleTokenAmt >= minBuyLimit, \"Presale: Amount below min buy limit\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/preSale.sol\":4849:4856  tokenWL */\n      0x07\n        /* \"contracts/preSale.sol\":4849:4864  tokenWL[_token] */\n      0x00\n        /* \"contracts/preSale.sol\":4857:4863  _token */\n      dup5\n        /* \"contracts/preSale.sol\":4849:4864  tokenWL[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/preSale.sol\":4841:4899  require(tokenWL[_token], \"Presale: Token not whitelisted\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_170\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/preSale.sol\":4913:4980  IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_237\n        /* \"contracts/preSale.sol\":4945:4955  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":4965:4969  this */\n      address\n        /* \"contracts/preSale.sol\":4972:4979  _amount */\n      dup5\n        /* \"contracts/preSale.sol\":4920:4926  _token */\n      dup7\n        /* \"contracts/preSale.sol\":4913:4944  IERC20(_token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":4913:4980  IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/preSale.sol\":4994:5050  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      tag_239\n        /* \"contracts/preSale.sol\":5025:5035  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5037:5049  saleTokenAmt */\n      dup3\n        /* \"contracts/preSale.sol\":5001:5010  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":4994:5024  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"contracts/preSale.sol\":4994:5050  IERC20(saleToken).safeTransfer(msg.sender, saleTokenAmt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/preSale.sol\":4530:5061  if (_token == address(0)) {... */\n    tag_231:\n        /* \"contracts/preSale.sol\":5089:5101  saleTokenAmt */\n      dup1\n        /* \"contracts/preSale.sol\":5070:5085  totalTokensSold */\n      0x0b\n      0x00\n        /* \"contracts/preSale.sol\":5070:5101  totalTokensSold += saleTokenAmt */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5141:5147  _token */\n      dup3\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5129:5139  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c\n        /* \"contracts/preSale.sol\":5149:5156  _amount */\n      dup5\n        /* \"contracts/preSale.sol\":5158:5170  saleTokenAmt */\n      dup5\n        /* \"contracts/preSale.sol\":5116:5171  TokensBought(msg.sender, _token, _amount, saleTokenAmt) */\n      mload(0x40)\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/preSale.sol\":4221:5178  {... */\n      pop\n        /* \"contracts/preSale.sol\":4096:5178  function buyToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":523:549  uint256 public maxBuyLimit */\n    tag_93:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":484:517  uint256 public totalTokensforSale */\n    tag_97:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/preSale.sol\":5387:5399  _maxBuyLimit */\n      dup1\n        /* \"contracts/preSale.sol\":5373:5384  maxBuyLimit */\n      0x05\n        /* \"contracts/preSale.sol\":5373:5399  maxBuyLimit = _maxBuyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5298:5406  function setMaxBuyLimit(uint256 _maxBuyLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/preSale.sol\":2029:2030  0 */\n      0x00\n        /* \"contracts/preSale.sol\":2007:2031  _saleToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2007:2017  _saleToken */\n      dup3\n        /* \"contracts/preSale.sol\":2007:2031  _saleToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":1986:2099  require(... */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/preSale.sol\":2152:2153  0 */\n      0x00\n        /* \"contracts/preSale.sol\":2130:2149  _totalTokensforSale */\n      dup2\n        /* \"contracts/preSale.sol\":2130:2153  _totalTokensforSale > 0 */\n      gt\n        /* \"contracts/preSale.sol\":2109:2224  require(... */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/preSale.sol\":2246:2256  _saleToken */\n      dup2\n        /* \"contracts/preSale.sol\":2234:2243  saleToken */\n      0x02\n      0x00\n        /* \"contracts/preSale.sol\":2234:2256  saleToken = _saleToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2296:2305  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2281:2315  IERC20Metadata(saleToken).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/preSale.sol\":2281:2317  IERC20Metadata(saleToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"contracts/preSale.sol\":2266:2317  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      0xff\n      and\n        /* \"contracts/preSale.sol\":2266:2278  saleTokenDec */\n      0x03\n        /* \"contracts/preSale.sol\":2266:2317  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2328:2456  IERC20(saleToken).safeTransferFrom(... */\n      tag_264\n        /* \"contracts/preSale.sol\":2376:2386  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":2408:2412  this */\n      address\n        /* \"contracts/preSale.sol\":2427:2446  _totalTokensforSale */\n      dup4\n        /* \"contracts/preSale.sol\":2335:2344  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2328:2362  IERC20(saleToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_238\n      swap1\n        /* \"contracts/preSale.sol\":2328:2456  IERC20(saleToken).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/preSale.sol\":2494:2503  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":2487:2514  IERC20(saleToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":2523:2527  this */\n      address\n        /* \"contracts/preSale.sol\":2487:2529  IERC20(saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_265:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"contracts/preSale.sol\":2466:2484  totalTokensforSale */\n      0x04\n        /* \"contracts/preSale.sol\":2466:2529  totalTokensforSale = IERC20(saleToken).balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":2544:2591  SaleTokenAdded(_saleToken, _totalTokensforSale) */\n      0x03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a\n        /* \"contracts/preSale.sol\":2559:2569  _saleToken */\n      dup3\n        /* \"contracts/preSale.sol\":2571:2590  _totalTokensforSale */\n      dup3\n        /* \"contracts/preSale.sol\":2544:2591  SaleTokenAdded(_saleToken, _totalTokensforSale) */\n      mload(0x40)\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/preSale.sol\":1858:2598  function setSaleTokenParams(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":587:626  mapping(address => bool) public tokenWL */\n    tag_113:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/preSale.sol\":5273:5285  _minBuyLimit */\n      dup1\n        /* \"contracts/preSale.sol\":5259:5270  minBuyLimit */\n      0x06\n        /* \"contracts/preSale.sol\":5259:5285  minBuyLimit = _minBuyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/preSale.sol\":5184:5292  function setMinBuyLimit(uint256 _minBuyLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":722:753  uint256 public presaleStartTime */\n    tag_127:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":454:478  uint public saleTokenDec */\n    tag_131:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":555:581  uint256 public minBuyLimit */\n    tag_135:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/preSale.sol\":1760:1774  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1741:1756  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1741:1774  block.timestamp >= presaleEndTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1720:1834  require(... */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/preSale.sol\":5551:5602  IERC20(saleToken).safeTransfer(msg.sender, _amount) */\n      tag_282\n        /* \"contracts/preSale.sol\":5582:5592  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5594:5601  _amount */\n      dup3\n        /* \"contracts/preSale.sol\":5558:5567  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5551:5581  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"contracts/preSale.sol\":5551:5602  IERC20(saleToken).safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/preSale.sol\":5463:5609  function withdrawSaleToken(uint256 _amount) external onlyOwner isPresaleEnded {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":424:448  address public saleToken */\n    tag_143:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":5943:6194  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/preSale.sol\":6035:6044  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6026:6044  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6026:6031  token */\n      dup3\n        /* \"contracts/preSale.sol\":6026:6044  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":6018:6134  require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/preSale.sol\":6144:6187  IERC20(token).safeTransfer(msg.sender, amt) */\n      tag_296\n        /* \"contracts/preSale.sol\":6171:6181  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":6183:6186  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6151:6156  token */\n      dup5\n        /* \"contracts/preSale.sol\":6144:6170  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"contracts/preSale.sol\":6144:6187  IERC20(token).safeTransfer(msg.sender, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"contracts/preSale.sol\":5943:6194  function withdraw(address token, uint256 amt) public   onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":6201:6484  function withdrawAll(address token) external onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/preSale.sol\":6283:6292  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6274:6292  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":6274:6279  token */\n      dup2\n        /* \"contracts/preSale.sol\":6274:6292  token != saleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/preSale.sol\":6266:6385  require(token != saleToken, \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"contracts/preSale.sol\":6395:6406  uint256 amt */\n      0x00\n        /* \"contracts/preSale.sol\":6416:6421  token */\n      dup2\n        /* \"contracts/preSale.sol\":6409:6432  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":6441:6445  this */\n      address\n        /* \"contracts/preSale.sol\":6409:6447  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_303:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_306:\n        /* \"contracts/preSale.sol\":6395:6447  uint256 amt = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":6457:6477  withdraw(token, amt) */\n      tag_307\n        /* \"contracts/preSale.sol\":6466:6471  token */\n      dup3\n        /* \"contracts/preSale.sol\":6473:6476  amt */\n      dup3\n        /* \"contracts/preSale.sol\":6457:6465  withdraw */\n      tag_152\n        /* \"contracts/preSale.sol\":6457:6477  withdraw(token, amt) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/preSale.sol\":6256:6484  {... */\n      pop\n        /* \"contracts/preSale.sol\":6201:6484  function withdrawAll(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_309:\n        /* \"contracts/preSale.sol\":1760:1774  presaleEndTime */\n      sload(0x0a)\n        /* \"contracts/preSale.sol\":1741:1756  block.timestamp */\n      timestamp\n        /* \"contracts/preSale.sol\":1741:1774  block.timestamp >= presaleEndTime */\n      lt\n      iszero\n        /* \"contracts/preSale.sol\":1720:1834  require(... */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_280\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"contracts/preSale.sol\":5756:5767  uint256 amt */\n      0x00\n        /* \"contracts/preSale.sol\":5777:5786  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5770:5797  IERC20(saleToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/preSale.sol\":5806:5810  this */\n      address\n        /* \"contracts/preSale.sol\":5770:5812  IERC20(saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_317:\n        /* \"contracts/preSale.sol\":5756:5812  uint256 amt = IERC20(saleToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/preSale.sol\":5822:5869  IERC20(saleToken).safeTransfer(msg.sender, amt) */\n      tag_318\n        /* \"contracts/preSale.sol\":5853:5863  msg.sender */\n      caller\n        /* \"contracts/preSale.sol\":5865:5868  amt */\n      dup3\n        /* \"contracts/preSale.sol\":5829:5838  saleToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/preSale.sol\":5822:5852  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_230\n      swap1\n        /* \"contracts/preSale.sol\":5822:5869  IERC20(saleToken).safeTransfer(msg.sender, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/preSale.sol\":5746:5876  {... */\n      pop\n        /* \"contracts/preSale.sol\":5680:5876  function withdrawAllSaleToken() external onlyOwner isPresaleEnded {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_322\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_332\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_338\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_339\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_352\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_356\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_355)\n    tag_356:\n      0x60\n      swap2\n      pop\n    tag_355:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_362\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_359)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_369\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_359:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_377:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_379:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_380:\n        /* \"#utility.yul\":490:514   */\n      tag_447\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_379\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_448:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_381:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_450\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_380\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_41:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_453\n      tag_377\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":766:885   */\n    tag_452:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_454\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_381\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_382:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_383:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_457\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_382\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_384:\n        /* \"#utility.yul\":1332:1356   */\n      tag_459\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_383\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_460:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_385:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_462\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_384\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:2006   */\n    tag_46:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1657:1659   */\n      0x40\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1636:1643   */\n      dup6\n        /* \"#utility.yul\":1632:1655   */\n      sub\n        /* \"#utility.yul\":1628:1660   */\n      slt\n        /* \"#utility.yul\":1625:1744   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":1663:1742   */\n      tag_465\n      tag_377\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1625:1744   */\n    tag_464:\n        /* \"#utility.yul\":1783:1784   */\n      0x00\n        /* \"#utility.yul\":1808:1861   */\n      tag_466\n        /* \"#utility.yul\":1853:1860   */\n      dup6\n        /* \"#utility.yul\":1844:1850   */\n      dup3\n        /* \"#utility.yul\":1833:1842   */\n      dup7\n        /* \"#utility.yul\":1829:1851   */\n      add\n        /* \"#utility.yul\":1808:1861   */\n      tag_385\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1798:1861   */\n      swap3\n      pop\n        /* \"#utility.yul\":1754:1871   */\n      pop\n        /* \"#utility.yul\":1910:1912   */\n      0x20\n        /* \"#utility.yul\":1936:1989   */\n      tag_467\n        /* \"#utility.yul\":1981:1988   */\n      dup6\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup7\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_381\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1999   */\n      pop\n        /* \"#utility.yul\":1532:2006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_386:\n        /* \"#utility.yul\":2099:2123   */\n      tag_469\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_379\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_49:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_471\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_386\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_53:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_474\n      tag_377\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2440:2559   */\n    tag_473:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_475\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_385\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2789   */\n    tag_387:\n        /* \"#utility.yul\":2733:2740   */\n      0x00\n        /* \"#utility.yul\":2776:2781   */\n      dup2\n        /* \"#utility.yul\":2769:2782   */\n      iszero\n        /* \"#utility.yul\":2762:2783   */\n      iszero\n        /* \"#utility.yul\":2751:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2904   */\n    tag_388:\n        /* \"#utility.yul\":2876:2897   */\n      tag_478\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2876:2897   */\n      tag_387\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2871:2874   */\n      dup3\n        /* \"#utility.yul\":2864:2898   */\n      mstore\n        /* \"#utility.yul\":2795:2904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3120   */\n    tag_115:\n        /* \"#utility.yul\":2997:3001   */\n      0x00\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"#utility.yul\":3024:3033   */\n      dup3\n        /* \"#utility.yul\":3020:3038   */\n      add\n        /* \"#utility.yul\":3012:3038   */\n      swap1\n      pop\n        /* \"#utility.yul\":3048:3113   */\n      tag_480\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3099:3108   */\n      dup4\n        /* \"#utility.yul\":3095:3112   */\n      add\n        /* \"#utility.yul\":3086:3092   */\n      dup5\n        /* \"#utility.yul\":3048:3113   */\n      tag_388\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2910:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3244   */\n    tag_389:\n        /* \"#utility.yul\":3213:3237   */\n      tag_482\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_383\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3238   */\n      mstore\n        /* \"#utility.yul\":3126:3244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3472   */\n    tag_120:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_484\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3394:3465   */\n      tag_389\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3250:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3658   */\n    tag_390:\n        /* \"#utility.yul\":3526:3603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3523:3524   */\n      0x00\n        /* \"#utility.yul\":3516:3604   */\n      mstore\n        /* \"#utility.yul\":3623:3627   */\n      0x11\n        /* \"#utility.yul\":3620:3621   */\n      0x04\n        /* \"#utility.yul\":3613:3628   */\n      mstore\n        /* \"#utility.yul\":3647:3651   */\n      0x24\n        /* \"#utility.yul\":3644:3645   */\n      0x00\n        /* \"#utility.yul\":3637:3652   */\n      revert\n        /* \"#utility.yul\":3664:3855   */\n    tag_165:\n        /* \"#utility.yul\":3704:3707   */\n      0x00\n        /* \"#utility.yul\":3723:3743   */\n      tag_487\n        /* \"#utility.yul\":3741:3742   */\n      dup3\n        /* \"#utility.yul\":3723:3743   */\n      tag_379\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3718:3743   */\n      swap2\n      pop\n        /* \"#utility.yul\":3757:3777   */\n      tag_488\n        /* \"#utility.yul\":3775:3776   */\n      dup4\n        /* \"#utility.yul\":3757:3777   */\n      tag_379\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3752:3777   */\n      swap3\n      pop\n        /* \"#utility.yul\":3800:3801   */\n      dup3\n        /* \"#utility.yul\":3797:3798   */\n      dup3\n        /* \"#utility.yul\":3793:3802   */\n      add\n        /* \"#utility.yul\":3786:3802   */\n      swap1\n      pop\n        /* \"#utility.yul\":3821:3824   */\n      dup1\n        /* \"#utility.yul\":3818:3819   */\n      dup3\n        /* \"#utility.yul\":3815:3825   */\n      gt\n        /* \"#utility.yul\":3812:3848   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3828:3846   */\n      tag_490\n      tag_390\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3812:3848   */\n    tag_489:\n        /* \"#utility.yul\":3664:3855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3861:4030   */\n    tag_391:\n        /* \"#utility.yul\":3945:3956   */\n      0x00\n        /* \"#utility.yul\":3979:3985   */\n      dup3\n        /* \"#utility.yul\":3974:3977   */\n      dup3\n        /* \"#utility.yul\":3967:3986   */\n      mstore\n        /* \"#utility.yul\":4019:4023   */\n      0x20\n        /* \"#utility.yul\":4014:4017   */\n      dup3\n        /* \"#utility.yul\":4010:4024   */\n      add\n        /* \"#utility.yul\":3995:4024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3861:4030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4036:4216   */\n    tag_392:\n        /* \"#utility.yul\":4176:4208   */\n      0x50726573616c653a20546f6b656e206e6f742077686974656c69737465640000\n        /* \"#utility.yul\":4172:4173   */\n      0x00\n        /* \"#utility.yul\":4164:4170   */\n      dup3\n        /* \"#utility.yul\":4160:4174   */\n      add\n        /* \"#utility.yul\":4153:4209   */\n      mstore\n        /* \"#utility.yul\":4036:4216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4588   */\n    tag_393:\n        /* \"#utility.yul\":4364:4367   */\n      0x00\n        /* \"#utility.yul\":4385:4452   */\n      tag_494\n        /* \"#utility.yul\":4449:4451   */\n      0x1e\n        /* \"#utility.yul\":4444:4447   */\n      dup4\n        /* \"#utility.yul\":4385:4452   */\n      tag_391\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4378:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4461:4554   */\n      tag_495\n        /* \"#utility.yul\":4550:4553   */\n      dup3\n        /* \"#utility.yul\":4461:4554   */\n      tag_392\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4579:4581   */\n      0x20\n        /* \"#utility.yul\":4574:4577   */\n      dup3\n        /* \"#utility.yul\":4570:4582   */\n      add\n        /* \"#utility.yul\":4563:4582   */\n      swap1\n      pop\n        /* \"#utility.yul\":4222:4588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4594:5013   */\n    tag_170:\n        /* \"#utility.yul\":4760:4764   */\n      0x00\n        /* \"#utility.yul\":4798:4800   */\n      0x20\n        /* \"#utility.yul\":4787:4796   */\n      dup3\n        /* \"#utility.yul\":4783:4801   */\n      add\n        /* \"#utility.yul\":4775:4801   */\n      swap1\n      pop\n        /* \"#utility.yul\":4847:4856   */\n      dup2\n        /* \"#utility.yul\":4841:4845   */\n      dup2\n        /* \"#utility.yul\":4837:4857   */\n      sub\n        /* \"#utility.yul\":4833:4834   */\n      0x00\n        /* \"#utility.yul\":4822:4831   */\n      dup4\n        /* \"#utility.yul\":4818:4835   */\n      add\n        /* \"#utility.yul\":4811:4858   */\n      mstore\n        /* \"#utility.yul\":4875:5006   */\n      tag_497\n        /* \"#utility.yul\":5001:5005   */\n      dup2\n        /* \"#utility.yul\":4875:5006   */\n      tag_393\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4867:5006   */\n      swap1\n      pop\n        /* \"#utility.yul\":4594:5013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5019:5121   */\n    tag_394:\n        /* \"#utility.yul\":5061:5069   */\n      0x00\n        /* \"#utility.yul\":5108:5113   */\n      dup2\n        /* \"#utility.yul\":5105:5106   */\n      0x01\n        /* \"#utility.yul\":5101:5114   */\n      shr\n        /* \"#utility.yul\":5080:5114   */\n      swap1\n      pop\n        /* \"#utility.yul\":5019:5121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5127:5975   */\n    tag_395:\n        /* \"#utility.yul\":5188:5193   */\n      0x00\n        /* \"#utility.yul\":5195:5199   */\n      dup1\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5210:5225   */\n      swap2\n      pop\n        /* \"#utility.yul\":5243:5248   */\n      dup4\n        /* \"#utility.yul\":5234:5248   */\n      swap1\n      pop\n        /* \"#utility.yul\":5257:5969   */\n    tag_500:\n        /* \"#utility.yul\":5278:5279   */\n      0x01\n        /* \"#utility.yul\":5268:5276   */\n      dup6\n        /* \"#utility.yul\":5265:5280   */\n      gt\n        /* \"#utility.yul\":5257:5969   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5373:5377   */\n      dup1\n        /* \"#utility.yul\":5368:5371   */\n      dup7\n        /* \"#utility.yul\":5364:5378   */\n      div\n        /* \"#utility.yul\":5358:5362   */\n      dup2\n        /* \"#utility.yul\":5355:5379   */\n      gt\n        /* \"#utility.yul\":5352:5402   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5382:5400   */\n      tag_504\n      tag_390\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5352:5402   */\n    tag_503:\n        /* \"#utility.yul\":5432:5433   */\n      0x01\n        /* \"#utility.yul\":5422:5430   */\n      dup6\n        /* \"#utility.yul\":5418:5434   */\n      and\n        /* \"#utility.yul\":5415:5866   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":5847:5851   */\n      dup1\n        /* \"#utility.yul\":5840:5845   */\n      dup3\n        /* \"#utility.yul\":5836:5852   */\n      mul\n        /* \"#utility.yul\":5827:5852   */\n      swap2\n      pop\n        /* \"#utility.yul\":5415:5866   */\n    tag_505:\n        /* \"#utility.yul\":5897:5901   */\n      dup1\n        /* \"#utility.yul\":5891:5895   */\n      dup2\n        /* \"#utility.yul\":5887:5902   */\n      mul\n        /* \"#utility.yul\":5879:5902   */\n      swap1\n      pop\n        /* \"#utility.yul\":5927:5959   */\n      tag_506\n        /* \"#utility.yul\":5950:5958   */\n      dup6\n        /* \"#utility.yul\":5927:5959   */\n      tag_394\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5915:5959   */\n      swap5\n      pop\n        /* \"#utility.yul\":5257:5969   */\n      jump(tag_500)\n    tag_502:\n        /* \"#utility.yul\":5127:5975   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5981:7054   */\n    tag_396:\n        /* \"#utility.yul\":6035:6040   */\n      0x00\n        /* \"#utility.yul\":6226:6234   */\n      dup3\n        /* \"#utility.yul\":6216:6256   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":6247:6248   */\n      0x01\n        /* \"#utility.yul\":6238:6248   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6254   */\n      jump(tag_507)\n        /* \"#utility.yul\":6216:6256   */\n    tag_508:\n        /* \"#utility.yul\":6275:6279   */\n      dup2\n        /* \"#utility.yul\":6265:6301   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":6292:6293   */\n      0x00\n        /* \"#utility.yul\":6283:6293   */\n      swap1\n      pop\n        /* \"#utility.yul\":6294:6299   */\n      jump(tag_507)\n        /* \"#utility.yul\":6265:6301   */\n    tag_509:\n        /* \"#utility.yul\":6361:6365   */\n      dup2\n        /* \"#utility.yul\":6409:6410   */\n      0x01\n        /* \"#utility.yul\":6404:6431   */\n      dup2\n      eq\n      tag_511\n      jumpi\n        /* \"#utility.yul\":6445:6446   */\n      0x02\n        /* \"#utility.yul\":6440:6631   */\n      dup2\n      eq\n      tag_512\n      jumpi\n        /* \"#utility.yul\":6354:6631   */\n      jump(tag_510)\n        /* \"#utility.yul\":6404:6431   */\n    tag_511:\n        /* \"#utility.yul\":6422:6423   */\n      0x01\n        /* \"#utility.yul\":6413:6423   */\n      swap2\n      pop\n        /* \"#utility.yul\":6424:6429   */\n      pop\n      jump(tag_507)\n        /* \"#utility.yul\":6440:6631   */\n    tag_512:\n        /* \"#utility.yul\":6485:6488   */\n      0xff\n        /* \"#utility.yul\":6475:6483   */\n      dup5\n        /* \"#utility.yul\":6472:6489   */\n      gt\n        /* \"#utility.yul\":6469:6512   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_514\n      tag_390\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6469:6512   */\n    tag_513:\n        /* \"#utility.yul\":6541:6549   */\n      dup4\n        /* \"#utility.yul\":6538:6539   */\n      0x02\n        /* \"#utility.yul\":6534:6550   */\n      exp\n        /* \"#utility.yul\":6525:6550   */\n      swap2\n      pop\n        /* \"#utility.yul\":6576:6579   */\n      dup5\n        /* \"#utility.yul\":6569:6574   */\n      dup3\n        /* \"#utility.yul\":6566:6580   */\n      gt\n        /* \"#utility.yul\":6563:6603   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6583:6601   */\n      tag_516\n      tag_390\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6563:6603   */\n    tag_515:\n        /* \"#utility.yul\":6616:6621   */\n      pop\n      jump(tag_507)\n        /* \"#utility.yul\":6354:6631   */\n    tag_510:\n      pop\n        /* \"#utility.yul\":6740:6742   */\n      0x20\n        /* \"#utility.yul\":6730:6738   */\n      dup4\n        /* \"#utility.yul\":6727:6743   */\n      lt\n        /* \"#utility.yul\":6721:6724   */\n      0x0133\n        /* \"#utility.yul\":6715:6719   */\n      dup4\n        /* \"#utility.yul\":6712:6725   */\n      lt\n        /* \"#utility.yul\":6708:6744   */\n      and\n        /* \"#utility.yul\":6690:6692   */\n      0x4e\n        /* \"#utility.yul\":6680:6688   */\n      dup5\n        /* \"#utility.yul\":6677:6693   */\n      lt\n        /* \"#utility.yul\":6672:6674   */\n      0x0b\n        /* \"#utility.yul\":6666:6670   */\n      dup5\n        /* \"#utility.yul\":6663:6675   */\n      lt\n        /* \"#utility.yul\":6659:6694   */\n      and\n        /* \"#utility.yul\":6643:6754   */\n      or\n        /* \"#utility.yul\":6640:6886   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":6796:6804   */\n      dup3\n        /* \"#utility.yul\":6790:6794   */\n      dup3\n        /* \"#utility.yul\":6786:6805   */\n      exp\n        /* \"#utility.yul\":6777:6805   */\n      swap1\n      pop\n        /* \"#utility.yul\":6831:6834   */\n      dup4\n        /* \"#utility.yul\":6824:6829   */\n      dup2\n        /* \"#utility.yul\":6821:6835   */\n      gt\n        /* \"#utility.yul\":6818:6858   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":6838:6856   */\n      tag_519\n      tag_390\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6818:6858   */\n    tag_518:\n        /* \"#utility.yul\":6871:6876   */\n      jump(tag_507)\n        /* \"#utility.yul\":6640:6886   */\n    tag_517:\n        /* \"#utility.yul\":6911:6953   */\n      tag_520\n        /* \"#utility.yul\":6949:6952   */\n      dup5\n        /* \"#utility.yul\":6939:6947   */\n      dup5\n        /* \"#utility.yul\":6933:6937   */\n      dup5\n        /* \"#utility.yul\":6930:6931   */\n      0x01\n        /* \"#utility.yul\":6911:6953   */\n      tag_395\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":6896:6953   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":6985:6989   */\n      dup2\n        /* \"#utility.yul\":6980:6983   */\n      dup5\n        /* \"#utility.yul\":6976:6990   */\n      div\n        /* \"#utility.yul\":6969:6974   */\n      dup2\n        /* \"#utility.yul\":6966:6991   */\n      gt\n        /* \"#utility.yul\":6963:7014   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":6994:7012   */\n      tag_522\n      tag_390\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6963:7014   */\n    tag_521:\n        /* \"#utility.yul\":7043:7047   */\n      dup2\n        /* \"#utility.yul\":7036:7041   */\n      dup2\n        /* \"#utility.yul\":7032:7048   */\n      mul\n        /* \"#utility.yul\":7023:7048   */\n      swap1\n      pop\n        /* \"#utility.yul\":5981:7054   */\n    tag_507:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7060:7345   */\n    tag_174:\n        /* \"#utility.yul\":7120:7125   */\n      0x00\n        /* \"#utility.yul\":7144:7167   */\n      tag_524\n        /* \"#utility.yul\":7162:7166   */\n      dup3\n        /* \"#utility.yul\":7144:7167   */\n      tag_379\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7136:7167   */\n      swap2\n      pop\n        /* \"#utility.yul\":7188:7215   */\n      tag_525\n        /* \"#utility.yul\":7206:7214   */\n      dup4\n        /* \"#utility.yul\":7188:7215   */\n      tag_379\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7176:7215   */\n      swap3\n      pop\n        /* \"#utility.yul\":7234:7338   */\n      tag_526\n        /* \"#utility.yul\":7271:7337   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7261:7269   */\n      dup5\n        /* \"#utility.yul\":7255:7259   */\n      dup5\n        /* \"#utility.yul\":7234:7338   */\n      tag_396\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7225:7338   */\n      swap1\n      pop\n        /* \"#utility.yul\":7060:7345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7351:7761   */\n    tag_176:\n        /* \"#utility.yul\":7391:7398   */\n      0x00\n        /* \"#utility.yul\":7414:7434   */\n      tag_528\n        /* \"#utility.yul\":7432:7433   */\n      dup3\n        /* \"#utility.yul\":7414:7434   */\n      tag_379\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":7409:7434   */\n      swap2\n      pop\n        /* \"#utility.yul\":7448:7468   */\n      tag_529\n        /* \"#utility.yul\":7466:7467   */\n      dup4\n        /* \"#utility.yul\":7448:7468   */\n      tag_379\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7443:7468   */\n      swap3\n      pop\n        /* \"#utility.yul\":7503:7504   */\n      dup3\n        /* \"#utility.yul\":7500:7501   */\n      dup3\n        /* \"#utility.yul\":7496:7505   */\n      mul\n        /* \"#utility.yul\":7525:7555   */\n      tag_530\n        /* \"#utility.yul\":7543:7554   */\n      dup2\n        /* \"#utility.yul\":7525:7555   */\n      tag_379\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7514:7555   */\n      swap2\n      pop\n        /* \"#utility.yul\":7704:7705   */\n      dup3\n        /* \"#utility.yul\":7695:7702   */\n      dup3\n        /* \"#utility.yul\":7691:7706   */\n      div\n        /* \"#utility.yul\":7688:7689   */\n      dup5\n        /* \"#utility.yul\":7685:7707   */\n      eq\n        /* \"#utility.yul\":7665:7666   */\n      dup4\n        /* \"#utility.yul\":7658:7667   */\n      iszero\n        /* \"#utility.yul\":7638:7721   */\n      or\n        /* \"#utility.yul\":7615:7754   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":7734:7752   */\n      tag_532\n      tag_390\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7615:7754   */\n    tag_531:\n        /* \"#utility.yul\":7399:7761   */\n      pop\n        /* \"#utility.yul\":7351:7761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7767:7947   */\n    tag_397:\n        /* \"#utility.yul\":7815:7892   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7812:7813   */\n      0x00\n        /* \"#utility.yul\":7805:7893   */\n      mstore\n        /* \"#utility.yul\":7912:7916   */\n      0x12\n        /* \"#utility.yul\":7909:7910   */\n      0x04\n        /* \"#utility.yul\":7902:7917   */\n      mstore\n        /* \"#utility.yul\":7936:7940   */\n      0x24\n        /* \"#utility.yul\":7933:7934   */\n      0x00\n        /* \"#utility.yul\":7926:7941   */\n      revert\n        /* \"#utility.yul\":7953:8138   */\n    tag_178:\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":8010:8030   */\n      tag_535\n        /* \"#utility.yul\":8028:8029   */\n      dup3\n        /* \"#utility.yul\":8010:8030   */\n      tag_379\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":8005:8030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8044:8064   */\n      tag_536\n        /* \"#utility.yul\":8062:8063   */\n      dup4\n        /* \"#utility.yul\":8044:8064   */\n      tag_379\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8039:8064   */\n      swap3\n      pop\n        /* \"#utility.yul\":8083:8084   */\n      dup3\n        /* \"#utility.yul\":8073:8108   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":8088:8106   */\n      tag_538\n      tag_397\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":8073:8108   */\n    tag_537:\n        /* \"#utility.yul\":8130:8131   */\n      dup3\n        /* \"#utility.yul\":8127:8128   */\n      dup3\n        /* \"#utility.yul\":8123:8132   */\n      div\n        /* \"#utility.yul\":8118:8132   */\n      swap1\n      pop\n        /* \"#utility.yul\":7953:8138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8144:8476   */\n    tag_191:\n        /* \"#utility.yul\":8265:8269   */\n      0x00\n        /* \"#utility.yul\":8303:8305   */\n      0x40\n        /* \"#utility.yul\":8292:8301   */\n      dup3\n        /* \"#utility.yul\":8288:8306   */\n      add\n        /* \"#utility.yul\":8280:8306   */\n      swap1\n      pop\n        /* \"#utility.yul\":8316:8387   */\n      tag_540\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8373:8382   */\n      dup4\n        /* \"#utility.yul\":8369:8386   */\n      add\n        /* \"#utility.yul\":8360:8366   */\n      dup6\n        /* \"#utility.yul\":8316:8387   */\n      tag_389\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8397:8469   */\n      tag_541\n        /* \"#utility.yul\":8465:8467   */\n      0x20\n        /* \"#utility.yul\":8454:8463   */\n      dup4\n        /* \"#utility.yul\":8450:8468   */\n      add\n        /* \"#utility.yul\":8441:8447   */\n      dup5\n        /* \"#utility.yul\":8397:8469   */\n      tag_386\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8144:8476   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8482:8705   */\n    tag_398:\n        /* \"#utility.yul\":8622:8656   */\n      0x50726573616c653a2050726573616c6520686173206e6f742073746172746564\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8610:8616   */\n      dup3\n        /* \"#utility.yul\":8606:8620   */\n      add\n        /* \"#utility.yul\":8599:8657   */\n      mstore\n        /* \"#utility.yul\":8691:8697   */\n      0x2079657400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8686:8688   */\n      0x20\n        /* \"#utility.yul\":8678:8684   */\n      dup3\n        /* \"#utility.yul\":8674:8689   */\n      add\n        /* \"#utility.yul\":8667:8698   */\n      mstore\n        /* \"#utility.yul\":8482:8705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8711:9077   */\n    tag_399:\n        /* \"#utility.yul\":8853:8856   */\n      0x00\n        /* \"#utility.yul\":8874:8941   */\n      tag_544\n        /* \"#utility.yul\":8938:8940   */\n      0x24\n        /* \"#utility.yul\":8933:8936   */\n      dup4\n        /* \"#utility.yul\":8874:8941   */\n      tag_391\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":8867:8941   */\n      swap2\n      pop\n        /* \"#utility.yul\":8950:9043   */\n      tag_545\n        /* \"#utility.yul\":9039:9042   */\n      dup3\n        /* \"#utility.yul\":8950:9043   */\n      tag_398\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9068:9070   */\n      0x40\n        /* \"#utility.yul\":9063:9066   */\n      dup3\n        /* \"#utility.yul\":9059:9071   */\n      add\n        /* \"#utility.yul\":9052:9071   */\n      swap1\n      pop\n        /* \"#utility.yul\":8711:9077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9083:9502   */\n    tag_211:\n        /* \"#utility.yul\":9249:9253   */\n      0x00\n        /* \"#utility.yul\":9287:9289   */\n      0x20\n        /* \"#utility.yul\":9276:9285   */\n      dup3\n        /* \"#utility.yul\":9272:9290   */\n      add\n        /* \"#utility.yul\":9264:9290   */\n      swap1\n      pop\n        /* \"#utility.yul\":9336:9345   */\n      dup2\n        /* \"#utility.yul\":9330:9334   */\n      dup2\n        /* \"#utility.yul\":9326:9346   */\n      sub\n        /* \"#utility.yul\":9322:9323   */\n      0x00\n        /* \"#utility.yul\":9311:9320   */\n      dup4\n        /* \"#utility.yul\":9307:9324   */\n      add\n        /* \"#utility.yul\":9300:9347   */\n      mstore\n        /* \"#utility.yul\":9364:9495   */\n      tag_547\n        /* \"#utility.yul\":9490:9494   */\n      dup2\n        /* \"#utility.yul\":9364:9495   */\n      tag_399\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":9356:9495   */\n      swap1\n      pop\n        /* \"#utility.yul\":9083:9502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9508:9684   */\n    tag_400:\n        /* \"#utility.yul\":9648:9676   */\n      0x50726573616c653a2050726573616c652068617320656e646564000000000000\n        /* \"#utility.yul\":9644:9645   */\n      0x00\n        /* \"#utility.yul\":9636:9642   */\n      dup3\n        /* \"#utility.yul\":9632:9646   */\n      add\n        /* \"#utility.yul\":9625:9677   */\n      mstore\n        /* \"#utility.yul\":9508:9684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9690:10056   */\n    tag_401:\n        /* \"#utility.yul\":9832:9835   */\n      0x00\n        /* \"#utility.yul\":9853:9920   */\n      tag_550\n        /* \"#utility.yul\":9917:9919   */\n      0x1a\n        /* \"#utility.yul\":9912:9915   */\n      dup4\n        /* \"#utility.yul\":9853:9920   */\n      tag_391\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9846:9920   */\n      swap2\n      pop\n        /* \"#utility.yul\":9929:10022   */\n      tag_551\n        /* \"#utility.yul\":10018:10021   */\n      dup3\n        /* \"#utility.yul\":9929:10022   */\n      tag_400\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10042:10045   */\n      dup3\n        /* \"#utility.yul\":10038:10050   */\n      add\n        /* \"#utility.yul\":10031:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":9690:10056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10062:10481   */\n    tag_215:\n        /* \"#utility.yul\":10228:10232   */\n      0x00\n        /* \"#utility.yul\":10266:10268   */\n      0x20\n        /* \"#utility.yul\":10255:10264   */\n      dup3\n        /* \"#utility.yul\":10251:10269   */\n      add\n        /* \"#utility.yul\":10243:10269   */\n      swap1\n      pop\n        /* \"#utility.yul\":10315:10324   */\n      dup2\n        /* \"#utility.yul\":10309:10313   */\n      dup2\n        /* \"#utility.yul\":10305:10325   */\n      sub\n        /* \"#utility.yul\":10301:10302   */\n      0x00\n        /* \"#utility.yul\":10290:10299   */\n      dup4\n        /* \"#utility.yul\":10286:10303   */\n      add\n        /* \"#utility.yul\":10279:10326   */\n      mstore\n        /* \"#utility.yul\":10343:10474   */\n      tag_553\n        /* \"#utility.yul\":10469:10473   */\n      dup2\n        /* \"#utility.yul\":10343:10474   */\n      tag_401\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10335:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10062:10481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10487:10708   */\n    tag_402:\n        /* \"#utility.yul\":10627:10661   */\n      0x50726573616c653a20546f74616c20546f6b656e2053616c6520526561636865\n        /* \"#utility.yul\":10623:10624   */\n      0x00\n        /* \"#utility.yul\":10615:10621   */\n      dup3\n        /* \"#utility.yul\":10611:10625   */\n      add\n        /* \"#utility.yul\":10604:10662   */\n      mstore\n        /* \"#utility.yul\":10696:10700   */\n      0x6421000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10691:10693   */\n      0x20\n        /* \"#utility.yul\":10683:10689   */\n      dup3\n        /* \"#utility.yul\":10679:10694   */\n      add\n        /* \"#utility.yul\":10672:10701   */\n      mstore\n        /* \"#utility.yul\":10487:10708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10714:11080   */\n    tag_403:\n        /* \"#utility.yul\":10856:10859   */\n      0x00\n        /* \"#utility.yul\":10877:10944   */\n      tag_556\n        /* \"#utility.yul\":10941:10943   */\n      0x22\n        /* \"#utility.yul\":10936:10939   */\n      dup4\n        /* \"#utility.yul\":10877:10944   */\n      tag_391\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10870:10944   */\n      swap2\n      pop\n        /* \"#utility.yul\":10953:11046   */\n      tag_557\n        /* \"#utility.yul\":11042:11045   */\n      dup3\n        /* \"#utility.yul\":10953:11046   */\n      tag_402\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11071:11073   */\n      0x40\n        /* \"#utility.yul\":11066:11069   */\n      dup3\n        /* \"#utility.yul\":11062:11074   */\n      add\n        /* \"#utility.yul\":11055:11074   */\n      swap1\n      pop\n        /* \"#utility.yul\":10714:11080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11086:11505   */\n    tag_224:\n        /* \"#utility.yul\":11252:11256   */\n      0x00\n        /* \"#utility.yul\":11290:11292   */\n      0x20\n        /* \"#utility.yul\":11279:11288   */\n      dup3\n        /* \"#utility.yul\":11275:11293   */\n      add\n        /* \"#utility.yul\":11267:11293   */\n      swap1\n      pop\n        /* \"#utility.yul\":11339:11348   */\n      dup2\n        /* \"#utility.yul\":11333:11337   */\n      dup2\n        /* \"#utility.yul\":11329:11349   */\n      sub\n        /* \"#utility.yul\":11325:11326   */\n      0x00\n        /* \"#utility.yul\":11314:11323   */\n      dup4\n        /* \"#utility.yul\":11310:11327   */\n      add\n        /* \"#utility.yul\":11303:11350   */\n      mstore\n        /* \"#utility.yul\":11367:11498   */\n      tag_559\n        /* \"#utility.yul\":11493:11497   */\n      dup2\n        /* \"#utility.yul\":11367:11498   */\n      tag_403\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":11359:11498   */\n      swap1\n      pop\n        /* \"#utility.yul\":11086:11505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11511:11739   */\n    tag_404:\n        /* \"#utility.yul\":11651:11685   */\n      0x50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20\n        /* \"#utility.yul\":11647:11648   */\n      0x00\n        /* \"#utility.yul\":11639:11645   */\n      dup3\n        /* \"#utility.yul\":11635:11649   */\n      add\n        /* \"#utility.yul\":11628:11686   */\n      mstore\n        /* \"#utility.yul\":11720:11731   */\n      0x627579206c696d69740000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11715:11717   */\n      0x20\n        /* \"#utility.yul\":11707:11713   */\n      dup3\n        /* \"#utility.yul\":11703:11718   */\n      add\n        /* \"#utility.yul\":11696:11732   */\n      mstore\n        /* \"#utility.yul\":11511:11739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11745:12111   */\n    tag_405:\n        /* \"#utility.yul\":11887:11890   */\n      0x00\n        /* \"#utility.yul\":11908:11975   */\n      tag_562\n        /* \"#utility.yul\":11972:11974   */\n      0x29\n        /* \"#utility.yul\":11967:11970   */\n      dup4\n        /* \"#utility.yul\":11908:11975   */\n      tag_391\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11901:11975   */\n      swap2\n      pop\n        /* \"#utility.yul\":11984:12077   */\n      tag_563\n        /* \"#utility.yul\":12073:12076   */\n      dup3\n        /* \"#utility.yul\":11984:12077   */\n      tag_404\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":12102:12104   */\n      0x40\n        /* \"#utility.yul\":12097:12100   */\n      dup3\n        /* \"#utility.yul\":12093:12105   */\n      add\n        /* \"#utility.yul\":12086:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":11745:12111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12117:12536   */\n    tag_228:\n        /* \"#utility.yul\":12283:12287   */\n      0x00\n        /* \"#utility.yul\":12321:12323   */\n      0x20\n        /* \"#utility.yul\":12310:12319   */\n      dup3\n        /* \"#utility.yul\":12306:12324   */\n      add\n        /* \"#utility.yul\":12298:12324   */\n      swap1\n      pop\n        /* \"#utility.yul\":12370:12379   */\n      dup2\n        /* \"#utility.yul\":12364:12368   */\n      dup2\n        /* \"#utility.yul\":12360:12380   */\n      sub\n        /* \"#utility.yul\":12356:12357   */\n      0x00\n        /* \"#utility.yul\":12345:12354   */\n      dup4\n        /* \"#utility.yul\":12341:12358   */\n      add\n        /* \"#utility.yul\":12334:12381   */\n      mstore\n        /* \"#utility.yul\":12398:12529   */\n      tag_565\n        /* \"#utility.yul\":12524:12528   */\n      dup2\n        /* \"#utility.yul\":12398:12529   */\n      tag_405\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":12390:12529   */\n      swap1\n      pop\n        /* \"#utility.yul\":12117:12536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12542:12764   */\n    tag_406:\n        /* \"#utility.yul\":12682:12716   */\n      0x50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c69\n        /* \"#utility.yul\":12678:12679   */\n      0x00\n        /* \"#utility.yul\":12670:12676   */\n      dup3\n        /* \"#utility.yul\":12666:12680   */\n      add\n        /* \"#utility.yul\":12659:12717   */\n      mstore\n        /* \"#utility.yul\":12751:12756   */\n      0x6d69740000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12746:12748   */\n      0x20\n        /* \"#utility.yul\":12738:12744   */\n      dup3\n        /* \"#utility.yul\":12734:12749   */\n      add\n        /* \"#utility.yul\":12727:12757   */\n      mstore\n        /* \"#utility.yul\":12542:12764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12770:13136   */\n    tag_407:\n        /* \"#utility.yul\":12912:12915   */\n      0x00\n        /* \"#utility.yul\":12933:13000   */\n      tag_568\n        /* \"#utility.yul\":12997:12999   */\n      0x23\n        /* \"#utility.yul\":12992:12995   */\n      dup4\n        /* \"#utility.yul\":12933:13000   */\n      tag_391\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":12926:13000   */\n      swap2\n      pop\n        /* \"#utility.yul\":13009:13102   */\n      tag_569\n        /* \"#utility.yul\":13098:13101   */\n      dup3\n        /* \"#utility.yul\":13009:13102   */\n      tag_406\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13127:13129   */\n      0x40\n        /* \"#utility.yul\":13122:13125   */\n      dup3\n        /* \"#utility.yul\":13118:13130   */\n      add\n        /* \"#utility.yul\":13111:13130   */\n      swap1\n      pop\n        /* \"#utility.yul\":12770:13136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13142:13561   */\n    tag_234:\n        /* \"#utility.yul\":13308:13312   */\n      0x00\n        /* \"#utility.yul\":13346:13348   */\n      0x20\n        /* \"#utility.yul\":13335:13344   */\n      dup3\n        /* \"#utility.yul\":13331:13349   */\n      add\n        /* \"#utility.yul\":13323:13349   */\n      swap1\n      pop\n        /* \"#utility.yul\":13395:13404   */\n      dup2\n        /* \"#utility.yul\":13389:13393   */\n      dup2\n        /* \"#utility.yul\":13385:13405   */\n      sub\n        /* \"#utility.yul\":13381:13382   */\n      0x00\n        /* \"#utility.yul\":13370:13379   */\n      dup4\n        /* \"#utility.yul\":13366:13383   */\n      add\n        /* \"#utility.yul\":13359:13406   */\n      mstore\n        /* \"#utility.yul\":13423:13554   */\n      tag_571\n        /* \"#utility.yul\":13549:13553   */\n      dup2\n        /* \"#utility.yul\":13423:13554   */\n      tag_407\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13415:13554   */\n      swap1\n      pop\n        /* \"#utility.yul\":13142:13561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13567:13899   */\n    tag_242:\n        /* \"#utility.yul\":13688:13692   */\n      0x00\n        /* \"#utility.yul\":13726:13728   */\n      0x40\n        /* \"#utility.yul\":13715:13724   */\n      dup3\n        /* \"#utility.yul\":13711:13729   */\n      add\n        /* \"#utility.yul\":13703:13729   */\n      swap1\n      pop\n        /* \"#utility.yul\":13739:13810   */\n      tag_573\n        /* \"#utility.yul\":13807:13808   */\n      0x00\n        /* \"#utility.yul\":13796:13805   */\n      dup4\n        /* \"#utility.yul\":13792:13809   */\n      add\n        /* \"#utility.yul\":13783:13789   */\n      dup6\n        /* \"#utility.yul\":13739:13810   */\n      tag_386\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":13820:13892   */\n      tag_574\n        /* \"#utility.yul\":13888:13890   */\n      0x20\n        /* \"#utility.yul\":13877:13886   */\n      dup4\n        /* \"#utility.yul\":13873:13891   */\n      add\n        /* \"#utility.yul\":13864:13870   */\n      dup5\n        /* \"#utility.yul\":13820:13892   */\n      tag_386\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":13567:13899   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13905:14134   */\n    tag_408:\n        /* \"#utility.yul\":14045:14079   */\n      0x50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65\n        /* \"#utility.yul\":14041:14042   */\n      0x00\n        /* \"#utility.yul\":14033:14039   */\n      dup3\n        /* \"#utility.yul\":14029:14043   */\n      add\n        /* \"#utility.yul\":14022:14080   */\n      mstore\n        /* \"#utility.yul\":14114:14126   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14109:14111   */\n      0x20\n        /* \"#utility.yul\":14101:14107   */\n      dup3\n        /* \"#utility.yul\":14097:14112   */\n      add\n        /* \"#utility.yul\":14090:14127   */\n      mstore\n        /* \"#utility.yul\":13905:14134   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14140:14506   */\n    tag_409:\n        /* \"#utility.yul\":14282:14285   */\n      0x00\n        /* \"#utility.yul\":14303:14370   */\n      tag_577\n        /* \"#utility.yul\":14367:14369   */\n      0x2a\n        /* \"#utility.yul\":14362:14365   */\n      dup4\n        /* \"#utility.yul\":14303:14370   */\n      tag_391\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14296:14370   */\n      swap2\n      pop\n        /* \"#utility.yul\":14379:14472   */\n      tag_578\n        /* \"#utility.yul\":14468:14471   */\n      dup3\n        /* \"#utility.yul\":14379:14472   */\n      tag_408\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14497:14499   */\n      0x40\n        /* \"#utility.yul\":14492:14495   */\n      dup3\n        /* \"#utility.yul\":14488:14500   */\n      add\n        /* \"#utility.yul\":14481:14500   */\n      swap1\n      pop\n        /* \"#utility.yul\":14140:14506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14512:14931   */\n    tag_256:\n        /* \"#utility.yul\":14678:14682   */\n      0x00\n        /* \"#utility.yul\":14716:14718   */\n      0x20\n        /* \"#utility.yul\":14705:14714   */\n      dup3\n        /* \"#utility.yul\":14701:14719   */\n      add\n        /* \"#utility.yul\":14693:14719   */\n      swap1\n      pop\n        /* \"#utility.yul\":14765:14774   */\n      dup2\n        /* \"#utility.yul\":14759:14763   */\n      dup2\n        /* \"#utility.yul\":14755:14775   */\n      sub\n        /* \"#utility.yul\":14751:14752   */\n      0x00\n        /* \"#utility.yul\":14740:14749   */\n      dup4\n        /* \"#utility.yul\":14736:14753   */\n      add\n        /* \"#utility.yul\":14729:14776   */\n      mstore\n        /* \"#utility.yul\":14793:14924   */\n      tag_580\n        /* \"#utility.yul\":14919:14923   */\n      dup2\n        /* \"#utility.yul\":14793:14924   */\n      tag_409\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":14785:14924   */\n      swap1\n      pop\n        /* \"#utility.yul\":14512:14931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14937:15169   */\n    tag_410:\n        /* \"#utility.yul\":15077:15111   */\n      0x50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063\n        /* \"#utility.yul\":15073:15074   */\n      0x00\n        /* \"#utility.yul\":15065:15071   */\n      dup3\n        /* \"#utility.yul\":15061:15075   */\n      add\n        /* \"#utility.yul\":15054:15112   */\n      mstore\n        /* \"#utility.yul\":15146:15161   */\n      0x616e6e6f74206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":15141:15143   */\n      0x20\n        /* \"#utility.yul\":15133:15139   */\n      dup3\n        /* \"#utility.yul\":15129:15144   */\n      add\n        /* \"#utility.yul\":15122:15162   */\n      mstore\n        /* \"#utility.yul\":14937:15169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15175:15541   */\n    tag_411:\n        /* \"#utility.yul\":15317:15320   */\n      0x00\n        /* \"#utility.yul\":15338:15405   */\n      tag_583\n        /* \"#utility.yul\":15402:15404   */\n      0x2d\n        /* \"#utility.yul\":15397:15400   */\n      dup4\n        /* \"#utility.yul\":15338:15405   */\n      tag_391\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":15331:15405   */\n      swap2\n      pop\n        /* \"#utility.yul\":15414:15507   */\n      tag_584\n        /* \"#utility.yul\":15503:15506   */\n      dup3\n        /* \"#utility.yul\":15414:15507   */\n      tag_410\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15532:15534   */\n      0x40\n        /* \"#utility.yul\":15527:15530   */\n      dup3\n        /* \"#utility.yul\":15523:15535   */\n      add\n        /* \"#utility.yul\":15516:15535   */\n      swap1\n      pop\n        /* \"#utility.yul\":15175:15541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15547:15966   */\n    tag_259:\n        /* \"#utility.yul\":15713:15717   */\n      0x00\n        /* \"#utility.yul\":15751:15753   */\n      0x20\n        /* \"#utility.yul\":15740:15749   */\n      dup3\n        /* \"#utility.yul\":15736:15754   */\n      add\n        /* \"#utility.yul\":15728:15754   */\n      swap1\n      pop\n        /* \"#utility.yul\":15800:15809   */\n      dup2\n        /* \"#utility.yul\":15794:15798   */\n      dup2\n        /* \"#utility.yul\":15790:15810   */\n      sub\n        /* \"#utility.yul\":15786:15787   */\n      0x00\n        /* \"#utility.yul\":15775:15784   */\n      dup4\n        /* \"#utility.yul\":15771:15788   */\n      add\n        /* \"#utility.yul\":15764:15811   */\n      mstore\n        /* \"#utility.yul\":15828:15959   */\n      tag_586\n        /* \"#utility.yul\":15954:15958   */\n      dup2\n        /* \"#utility.yul\":15828:15959   */\n      tag_411\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15820:15959   */\n      swap1\n      pop\n        /* \"#utility.yul\":15547:15966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15972:16058   */\n    tag_412:\n        /* \"#utility.yul\":16007:16014   */\n      0x00\n        /* \"#utility.yul\":16047:16051   */\n      0xff\n        /* \"#utility.yul\":16040:16045   */\n      dup3\n        /* \"#utility.yul\":16036:16052   */\n      and\n        /* \"#utility.yul\":16025:16052   */\n      swap1\n      pop\n        /* \"#utility.yul\":15972:16058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16064:16182   */\n    tag_413:\n        /* \"#utility.yul\":16135:16157   */\n      tag_589\n        /* \"#utility.yul\":16151:16156   */\n      dup2\n        /* \"#utility.yul\":16135:16157   */\n      tag_412\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":16128:16133   */\n      dup2\n        /* \"#utility.yul\":16125:16158   */\n      eq\n        /* \"#utility.yul\":16115:16176   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":16172:16173   */\n      0x00\n        /* \"#utility.yul\":16169:16170   */\n      dup1\n        /* \"#utility.yul\":16162:16174   */\n      revert\n        /* \"#utility.yul\":16115:16176   */\n    tag_590:\n        /* \"#utility.yul\":16064:16182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16188:16327   */\n    tag_414:\n        /* \"#utility.yul\":16243:16248   */\n      0x00\n        /* \"#utility.yul\":16274:16280   */\n      dup2\n        /* \"#utility.yul\":16268:16281   */\n      mload\n        /* \"#utility.yul\":16259:16281   */\n      swap1\n      pop\n        /* \"#utility.yul\":16290:16321   */\n      tag_592\n        /* \"#utility.yul\":16315:16320   */\n      dup2\n        /* \"#utility.yul\":16290:16321   */\n      tag_413\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16188:16327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16333:16680   */\n    tag_263:\n        /* \"#utility.yul\":16401:16407   */\n      0x00\n        /* \"#utility.yul\":16450:16452   */\n      0x20\n        /* \"#utility.yul\":16438:16447   */\n      dup3\n        /* \"#utility.yul\":16429:16436   */\n      dup5\n        /* \"#utility.yul\":16425:16448   */\n      sub\n        /* \"#utility.yul\":16421:16453   */\n      slt\n        /* \"#utility.yul\":16418:16537   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":16456:16535   */\n      tag_595\n      tag_377\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":16418:16537   */\n    tag_594:\n        /* \"#utility.yul\":16576:16577   */\n      0x00\n        /* \"#utility.yul\":16601:16663   */\n      tag_596\n        /* \"#utility.yul\":16655:16662   */\n      dup5\n        /* \"#utility.yul\":16646:16652   */\n      dup3\n        /* \"#utility.yul\":16635:16644   */\n      dup6\n        /* \"#utility.yul\":16631:16653   */\n      add\n        /* \"#utility.yul\":16601:16663   */\n      tag_414\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16591:16663   */\n      swap2\n      pop\n        /* \"#utility.yul\":16547:16673   */\n      pop\n        /* \"#utility.yul\":16333:16680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16686:16829   */\n    tag_415:\n        /* \"#utility.yul\":16743:16748   */\n      0x00\n        /* \"#utility.yul\":16774:16780   */\n      dup2\n        /* \"#utility.yul\":16768:16781   */\n      mload\n        /* \"#utility.yul\":16759:16781   */\n      swap1\n      pop\n        /* \"#utility.yul\":16790:16823   */\n      tag_598\n        /* \"#utility.yul\":16817:16822   */\n      dup2\n        /* \"#utility.yul\":16790:16823   */\n      tag_380\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16686:16829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16835:17186   */\n    tag_269:\n        /* \"#utility.yul\":16905:16911   */\n      0x00\n        /* \"#utility.yul\":16954:16956   */\n      0x20\n        /* \"#utility.yul\":16942:16951   */\n      dup3\n        /* \"#utility.yul\":16933:16940   */\n      dup5\n        /* \"#utility.yul\":16929:16952   */\n      sub\n        /* \"#utility.yul\":16925:16957   */\n      slt\n        /* \"#utility.yul\":16922:17041   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":16960:17039   */\n      tag_601\n      tag_377\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16922:17041   */\n    tag_600:\n        /* \"#utility.yul\":17080:17081   */\n      0x00\n        /* \"#utility.yul\":17105:17169   */\n      tag_602\n        /* \"#utility.yul\":17161:17168   */\n      dup5\n        /* \"#utility.yul\":17152:17158   */\n      dup3\n        /* \"#utility.yul\":17141:17150   */\n      dup6\n        /* \"#utility.yul\":17137:17159   */\n      add\n        /* \"#utility.yul\":17105:17169   */\n      tag_415\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17095:17169   */\n      swap2\n      pop\n        /* \"#utility.yul\":17051:17179   */\n      pop\n        /* \"#utility.yul\":16835:17186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17192:17413   */\n    tag_416:\n        /* \"#utility.yul\":17332:17366   */\n      0x50726573616c653a2050726573616c6520686173206e6f7420656e6465642079\n        /* \"#utility.yul\":17328:17329   */\n      0x00\n        /* \"#utility.yul\":17320:17326   */\n      dup3\n        /* \"#utility.yul\":17316:17330   */\n      add\n        /* \"#utility.yul\":17309:17367   */\n      mstore\n        /* \"#utility.yul\":17401:17405   */\n      0x6574000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17396:17398   */\n      0x20\n        /* \"#utility.yul\":17388:17394   */\n      dup3\n        /* \"#utility.yul\":17384:17399   */\n      add\n        /* \"#utility.yul\":17377:17406   */\n      mstore\n        /* \"#utility.yul\":17192:17413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17419:17785   */\n    tag_417:\n        /* \"#utility.yul\":17561:17564   */\n      0x00\n        /* \"#utility.yul\":17582:17649   */\n      tag_605\n        /* \"#utility.yul\":17646:17648   */\n      0x22\n        /* \"#utility.yul\":17641:17644   */\n      dup4\n        /* \"#utility.yul\":17582:17649   */\n      tag_391\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17575:17649   */\n      swap2\n      pop\n        /* \"#utility.yul\":17658:17751   */\n      tag_606\n        /* \"#utility.yul\":17747:17750   */\n      dup3\n        /* \"#utility.yul\":17658:17751   */\n      tag_416\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17776:17778   */\n      0x40\n        /* \"#utility.yul\":17771:17774   */\n      dup3\n        /* \"#utility.yul\":17767:17779   */\n      add\n        /* \"#utility.yul\":17760:17779   */\n      swap1\n      pop\n        /* \"#utility.yul\":17419:17785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17791:18210   */\n    tag_280:\n        /* \"#utility.yul\":17957:17961   */\n      0x00\n        /* \"#utility.yul\":17995:17997   */\n      0x20\n        /* \"#utility.yul\":17984:17993   */\n      dup3\n        /* \"#utility.yul\":17980:17998   */\n      add\n        /* \"#utility.yul\":17972:17998   */\n      swap1\n      pop\n        /* \"#utility.yul\":18044:18053   */\n      dup2\n        /* \"#utility.yul\":18038:18042   */\n      dup2\n        /* \"#utility.yul\":18034:18054   */\n      sub\n        /* \"#utility.yul\":18030:18031   */\n      0x00\n        /* \"#utility.yul\":18019:18028   */\n      dup4\n        /* \"#utility.yul\":18015:18032   */\n      add\n        /* \"#utility.yul\":18008:18055   */\n      mstore\n        /* \"#utility.yul\":18072:18203   */\n      tag_608\n        /* \"#utility.yul\":18198:18202   */\n      dup2\n        /* \"#utility.yul\":18072:18203   */\n      tag_417\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":18064:18203   */\n      swap1\n      pop\n        /* \"#utility.yul\":17791:18210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18216:18441   */\n    tag_418:\n        /* \"#utility.yul\":18356:18390   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18352:18353   */\n      0x00\n        /* \"#utility.yul\":18344:18350   */\n      dup3\n        /* \"#utility.yul\":18340:18354   */\n      add\n        /* \"#utility.yul\":18333:18391   */\n      mstore\n        /* \"#utility.yul\":18425:18433   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18420:18422   */\n      0x20\n        /* \"#utility.yul\":18412:18418   */\n      dup3\n        /* \"#utility.yul\":18408:18423   */\n      add\n        /* \"#utility.yul\":18401:18434   */\n      mstore\n        /* \"#utility.yul\":18216:18441   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18447:18813   */\n    tag_419:\n        /* \"#utility.yul\":18589:18592   */\n      0x00\n        /* \"#utility.yul\":18610:18677   */\n      tag_611\n        /* \"#utility.yul\":18674:18676   */\n      0x26\n        /* \"#utility.yul\":18669:18672   */\n      dup4\n        /* \"#utility.yul\":18610:18677   */\n      tag_391\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":18603:18677   */\n      swap2\n      pop\n        /* \"#utility.yul\":18686:18779   */\n      tag_612\n        /* \"#utility.yul\":18775:18778   */\n      dup3\n        /* \"#utility.yul\":18686:18779   */\n      tag_418\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18804:18806   */\n      0x40\n        /* \"#utility.yul\":18799:18802   */\n      dup3\n        /* \"#utility.yul\":18795:18807   */\n      add\n        /* \"#utility.yul\":18788:18807   */\n      swap1\n      pop\n        /* \"#utility.yul\":18447:18813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18819:19238   */\n    tag_288:\n        /* \"#utility.yul\":18985:18989   */\n      0x00\n        /* \"#utility.yul\":19023:19025   */\n      0x20\n        /* \"#utility.yul\":19012:19021   */\n      dup3\n        /* \"#utility.yul\":19008:19026   */\n      add\n        /* \"#utility.yul\":19000:19026   */\n      swap1\n      pop\n        /* \"#utility.yul\":19072:19081   */\n      dup2\n        /* \"#utility.yul\":19066:19070   */\n      dup2\n        /* \"#utility.yul\":19062:19082   */\n      sub\n        /* \"#utility.yul\":19058:19059   */\n      0x00\n        /* \"#utility.yul\":19047:19056   */\n      dup4\n        /* \"#utility.yul\":19043:19060   */\n      add\n        /* \"#utility.yul\":19036:19083   */\n      mstore\n        /* \"#utility.yul\":19100:19231   */\n      tag_614\n        /* \"#utility.yul\":19226:19230   */\n      dup2\n        /* \"#utility.yul\":19100:19231   */\n      tag_419\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19092:19231   */\n      swap1\n      pop\n        /* \"#utility.yul\":18819:19238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19244:19553   */\n    tag_420:\n        /* \"#utility.yul\":19384:19418   */\n      0x50726573616c653a2043616e6e6f742077697468647261772073616c6520746f\n        /* \"#utility.yul\":19380:19381   */\n      0x00\n        /* \"#utility.yul\":19372:19378   */\n      dup3\n        /* \"#utility.yul\":19368:19382   */\n      add\n        /* \"#utility.yul\":19361:19419   */\n      mstore\n        /* \"#utility.yul\":19453:19487   */\n      0x6b656e20776974682074686973206d6574686f642c2075736520776974686472\n        /* \"#utility.yul\":19448:19450   */\n      0x20\n        /* \"#utility.yul\":19440:19446   */\n      dup3\n        /* \"#utility.yul\":19436:19451   */\n      add\n        /* \"#utility.yul\":19429:19488   */\n      mstore\n        /* \"#utility.yul\":19522:19545   */\n      0x617753616c65546f6b656e282920696e73746561640000000000000000000000\n        /* \"#utility.yul\":19517:19519   */\n      0x40\n        /* \"#utility.yul\":19509:19515   */\n      dup3\n        /* \"#utility.yul\":19505:19520   */\n      add\n        /* \"#utility.yul\":19498:19546   */\n      mstore\n        /* \"#utility.yul\":19244:19553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19559:19925   */\n    tag_421:\n        /* \"#utility.yul\":19701:19704   */\n      0x00\n        /* \"#utility.yul\":19722:19789   */\n      tag_617\n        /* \"#utility.yul\":19786:19788   */\n      0x55\n        /* \"#utility.yul\":19781:19784   */\n      dup4\n        /* \"#utility.yul\":19722:19789   */\n      tag_391\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":19715:19789   */\n      swap2\n      pop\n        /* \"#utility.yul\":19798:19891   */\n      tag_618\n        /* \"#utility.yul\":19887:19890   */\n      dup3\n        /* \"#utility.yul\":19798:19891   */\n      tag_420\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19916:19918   */\n      0x60\n        /* \"#utility.yul\":19911:19914   */\n      dup3\n        /* \"#utility.yul\":19907:19919   */\n      add\n        /* \"#utility.yul\":19900:19919   */\n      swap1\n      pop\n        /* \"#utility.yul\":19559:19925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19931:20350   */\n    tag_295:\n        /* \"#utility.yul\":20097:20101   */\n      0x00\n        /* \"#utility.yul\":20135:20137   */\n      0x20\n        /* \"#utility.yul\":20124:20133   */\n      dup3\n        /* \"#utility.yul\":20120:20138   */\n      add\n        /* \"#utility.yul\":20112:20138   */\n      swap1\n      pop\n        /* \"#utility.yul\":20184:20193   */\n      dup2\n        /* \"#utility.yul\":20178:20182   */\n      dup2\n        /* \"#utility.yul\":20174:20194   */\n      sub\n        /* \"#utility.yul\":20170:20171   */\n      0x00\n        /* \"#utility.yul\":20159:20168   */\n      dup4\n        /* \"#utility.yul\":20155:20172   */\n      add\n        /* \"#utility.yul\":20148:20195   */\n      mstore\n        /* \"#utility.yul\":20212:20343   */\n      tag_620\n        /* \"#utility.yul\":20338:20342   */\n      dup2\n        /* \"#utility.yul\":20212:20343   */\n      tag_421\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":20204:20343   */\n      swap1\n      pop\n        /* \"#utility.yul\":19931:20350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20356:20668   */\n    tag_422:\n        /* \"#utility.yul\":20496:20530   */\n      0x50726573616c653a2043616e6e6f742077697468647261772073616c6520746f\n        /* \"#utility.yul\":20492:20493   */\n      0x00\n        /* \"#utility.yul\":20484:20490   */\n      dup3\n        /* \"#utility.yul\":20480:20494   */\n      add\n        /* \"#utility.yul\":20473:20531   */\n      mstore\n        /* \"#utility.yul\":20565:20599   */\n      0x6b656e20776974682074686973206d6574686f642c2075736520776974686472\n        /* \"#utility.yul\":20560:20562   */\n      0x20\n        /* \"#utility.yul\":20552:20558   */\n      dup3\n        /* \"#utility.yul\":20548:20563   */\n      add\n        /* \"#utility.yul\":20541:20600   */\n      mstore\n        /* \"#utility.yul\":20634:20660   */\n      0x6177416c6c53616c65546f6b656e282920696e73746561640000000000000000\n        /* \"#utility.yul\":20629:20631   */\n      0x40\n        /* \"#utility.yul\":20621:20627   */\n      dup3\n        /* \"#utility.yul\":20617:20632   */\n      add\n        /* \"#utility.yul\":20610:20661   */\n      mstore\n        /* \"#utility.yul\":20356:20668   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20674:21040   */\n    tag_423:\n        /* \"#utility.yul\":20816:20819   */\n      0x00\n        /* \"#utility.yul\":20837:20904   */\n      tag_623\n        /* \"#utility.yul\":20901:20903   */\n      0x58\n        /* \"#utility.yul\":20896:20899   */\n      dup4\n        /* \"#utility.yul\":20837:20904   */\n      tag_391\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":20830:20904   */\n      swap2\n      pop\n        /* \"#utility.yul\":20913:21006   */\n      tag_624\n        /* \"#utility.yul\":21002:21005   */\n      dup3\n        /* \"#utility.yul\":20913:21006   */\n      tag_422\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":21031:21033   */\n      0x60\n        /* \"#utility.yul\":21026:21029   */\n      dup3\n        /* \"#utility.yul\":21022:21034   */\n      add\n        /* \"#utility.yul\":21015:21034   */\n      swap1\n      pop\n        /* \"#utility.yul\":20674:21040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21046:21465   */\n    tag_302:\n        /* \"#utility.yul\":21212:21216   */\n      0x00\n        /* \"#utility.yul\":21250:21252   */\n      0x20\n        /* \"#utility.yul\":21239:21248   */\n      dup3\n        /* \"#utility.yul\":21235:21253   */\n      add\n        /* \"#utility.yul\":21227:21253   */\n      swap1\n      pop\n        /* \"#utility.yul\":21299:21308   */\n      dup2\n        /* \"#utility.yul\":21293:21297   */\n      dup2\n        /* \"#utility.yul\":21289:21309   */\n      sub\n        /* \"#utility.yul\":21285:21286   */\n      0x00\n        /* \"#utility.yul\":21274:21283   */\n      dup4\n        /* \"#utility.yul\":21270:21287   */\n      add\n        /* \"#utility.yul\":21263:21310   */\n      mstore\n        /* \"#utility.yul\":21327:21458   */\n      tag_626\n        /* \"#utility.yul\":21453:21457   */\n      dup2\n        /* \"#utility.yul\":21327:21458   */\n      tag_423\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":21319:21458   */\n      swap1\n      pop\n        /* \"#utility.yul\":21046:21465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21471:21653   */\n    tag_424:\n        /* \"#utility.yul\":21611:21645   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":21607:21608   */\n      0x00\n        /* \"#utility.yul\":21599:21605   */\n      dup3\n        /* \"#utility.yul\":21595:21609   */\n      add\n        /* \"#utility.yul\":21588:21646   */\n      mstore\n        /* \"#utility.yul\":21471:21653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21659:22025   */\n    tag_425:\n        /* \"#utility.yul\":21801:21804   */\n      0x00\n        /* \"#utility.yul\":21822:21889   */\n      tag_629\n        /* \"#utility.yul\":21886:21888   */\n      0x20\n        /* \"#utility.yul\":21881:21884   */\n      dup4\n        /* \"#utility.yul\":21822:21889   */\n      tag_391\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":21815:21889   */\n      swap2\n      pop\n        /* \"#utility.yul\":21898:21991   */\n      tag_630\n        /* \"#utility.yul\":21987:21990   */\n      dup3\n        /* \"#utility.yul\":21898:21991   */\n      tag_424\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":22016:22018   */\n      0x20\n        /* \"#utility.yul\":22011:22014   */\n      dup3\n        /* \"#utility.yul\":22007:22019   */\n      add\n        /* \"#utility.yul\":22000:22019   */\n      swap1\n      pop\n        /* \"#utility.yul\":21659:22025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22031:22450   */\n    tag_325:\n        /* \"#utility.yul\":22197:22201   */\n      0x00\n        /* \"#utility.yul\":22235:22237   */\n      0x20\n        /* \"#utility.yul\":22224:22233   */\n      dup3\n        /* \"#utility.yul\":22220:22238   */\n      add\n        /* \"#utility.yul\":22212:22238   */\n      swap1\n      pop\n        /* \"#utility.yul\":22284:22293   */\n      dup2\n        /* \"#utility.yul\":22278:22282   */\n      dup2\n        /* \"#utility.yul\":22274:22294   */\n      sub\n        /* \"#utility.yul\":22270:22271   */\n      0x00\n        /* \"#utility.yul\":22259:22268   */\n      dup4\n        /* \"#utility.yul\":22255:22272   */\n      add\n        /* \"#utility.yul\":22248:22295   */\n      mstore\n        /* \"#utility.yul\":22312:22443   */\n      tag_632\n        /* \"#utility.yul\":22438:22442   */\n      dup2\n        /* \"#utility.yul\":22312:22443   */\n      tag_425\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":22304:22443   */\n      swap1\n      pop\n        /* \"#utility.yul\":22031:22450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22456:22898   */\n    tag_333:\n        /* \"#utility.yul\":22605:22609   */\n      0x00\n        /* \"#utility.yul\":22643:22645   */\n      0x60\n        /* \"#utility.yul\":22632:22641   */\n      dup3\n        /* \"#utility.yul\":22628:22646   */\n      add\n        /* \"#utility.yul\":22620:22646   */\n      swap1\n      pop\n        /* \"#utility.yul\":22656:22727   */\n      tag_634\n        /* \"#utility.yul\":22724:22725   */\n      0x00\n        /* \"#utility.yul\":22713:22722   */\n      dup4\n        /* \"#utility.yul\":22709:22726   */\n      add\n        /* \"#utility.yul\":22700:22706   */\n      dup7\n        /* \"#utility.yul\":22656:22727   */\n      tag_389\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":22737:22809   */\n      tag_635\n        /* \"#utility.yul\":22805:22807   */\n      0x20\n        /* \"#utility.yul\":22794:22803   */\n      dup4\n        /* \"#utility.yul\":22790:22808   */\n      add\n        /* \"#utility.yul\":22781:22787   */\n      dup6\n        /* \"#utility.yul\":22737:22809   */\n      tag_389\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":22819:22891   */\n      tag_636\n        /* \"#utility.yul\":22887:22889   */\n      0x40\n        /* \"#utility.yul\":22876:22885   */\n      dup4\n        /* \"#utility.yul\":22872:22890   */\n      add\n        /* \"#utility.yul\":22863:22869   */\n      dup5\n        /* \"#utility.yul\":22819:22891   */\n      tag_386\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":22456:22898   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22904:23020   */\n    tag_426:\n        /* \"#utility.yul\":22974:22995   */\n      tag_638\n        /* \"#utility.yul\":22989:22994   */\n      dup2\n        /* \"#utility.yul\":22974:22995   */\n      tag_387\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":22967:22972   */\n      dup2\n        /* \"#utility.yul\":22964:22996   */\n      eq\n        /* \"#utility.yul\":22954:23014   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":23010:23011   */\n      0x00\n        /* \"#utility.yul\":23007:23008   */\n      dup1\n        /* \"#utility.yul\":23000:23012   */\n      revert\n        /* \"#utility.yul\":22954:23014   */\n    tag_639:\n        /* \"#utility.yul\":22904:23020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23026:23163   */\n    tag_427:\n        /* \"#utility.yul\":23080:23085   */\n      0x00\n        /* \"#utility.yul\":23111:23117   */\n      dup2\n        /* \"#utility.yul\":23105:23118   */\n      mload\n        /* \"#utility.yul\":23096:23118   */\n      swap1\n      pop\n        /* \"#utility.yul\":23127:23157   */\n      tag_641\n        /* \"#utility.yul\":23151:23156   */\n      dup2\n        /* \"#utility.yul\":23127:23157   */\n      tag_426\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":23026:23163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23169:23514   */\n    tag_341:\n        /* \"#utility.yul\":23236:23242   */\n      0x00\n        /* \"#utility.yul\":23285:23287   */\n      0x20\n        /* \"#utility.yul\":23273:23282   */\n      dup3\n        /* \"#utility.yul\":23264:23271   */\n      dup5\n        /* \"#utility.yul\":23260:23283   */\n      sub\n        /* \"#utility.yul\":23256:23288   */\n      slt\n        /* \"#utility.yul\":23253:23372   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":23291:23370   */\n      tag_644\n      tag_377\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":23253:23372   */\n    tag_643:\n        /* \"#utility.yul\":23411:23412   */\n      0x00\n        /* \"#utility.yul\":23436:23497   */\n      tag_645\n        /* \"#utility.yul\":23489:23496   */\n      dup5\n        /* \"#utility.yul\":23480:23486   */\n      dup3\n        /* \"#utility.yul\":23469:23478   */\n      dup6\n        /* \"#utility.yul\":23465:23487   */\n      add\n        /* \"#utility.yul\":23436:23497   */\n      tag_427\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":23426:23497   */\n      swap2\n      pop\n        /* \"#utility.yul\":23382:23507   */\n      pop\n        /* \"#utility.yul\":23169:23514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23520:23749   */\n    tag_428:\n        /* \"#utility.yul\":23660:23694   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":23656:23657   */\n      0x00\n        /* \"#utility.yul\":23648:23654   */\n      dup3\n        /* \"#utility.yul\":23644:23658   */\n      add\n        /* \"#utility.yul\":23637:23695   */\n      mstore\n        /* \"#utility.yul\":23729:23741   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23724:23726   */\n      0x20\n        /* \"#utility.yul\":23716:23722   */\n      dup3\n        /* \"#utility.yul\":23712:23727   */\n      add\n        /* \"#utility.yul\":23705:23742   */\n      mstore\n        /* \"#utility.yul\":23520:23749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23755:24121   */\n    tag_429:\n        /* \"#utility.yul\":23897:23900   */\n      0x00\n        /* \"#utility.yul\":23918:23985   */\n      tag_648\n        /* \"#utility.yul\":23982:23984   */\n      0x2a\n        /* \"#utility.yul\":23977:23980   */\n      dup4\n        /* \"#utility.yul\":23918:23985   */\n      tag_391\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23911:23985   */\n      swap2\n      pop\n        /* \"#utility.yul\":23994:24087   */\n      tag_649\n        /* \"#utility.yul\":24083:24086   */\n      dup3\n        /* \"#utility.yul\":23994:24087   */\n      tag_428\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":24112:24114   */\n      0x40\n        /* \"#utility.yul\":24107:24110   */\n      dup3\n        /* \"#utility.yul\":24103:24115   */\n      add\n        /* \"#utility.yul\":24096:24115   */\n      swap1\n      pop\n        /* \"#utility.yul\":23755:24121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24127:24546   */\n    tag_344:\n        /* \"#utility.yul\":24293:24297   */\n      0x00\n        /* \"#utility.yul\":24331:24333   */\n      0x20\n        /* \"#utility.yul\":24320:24329   */\n      dup3\n        /* \"#utility.yul\":24316:24334   */\n      add\n        /* \"#utility.yul\":24308:24334   */\n      swap1\n      pop\n        /* \"#utility.yul\":24380:24389   */\n      dup2\n        /* \"#utility.yul\":24374:24378   */\n      dup2\n        /* \"#utility.yul\":24370:24390   */\n      sub\n        /* \"#utility.yul\":24366:24367   */\n      0x00\n        /* \"#utility.yul\":24355:24364   */\n      dup4\n        /* \"#utility.yul\":24351:24368   */\n      add\n        /* \"#utility.yul\":24344:24391   */\n      mstore\n        /* \"#utility.yul\":24408:24539   */\n      tag_651\n        /* \"#utility.yul\":24534:24538   */\n      dup2\n        /* \"#utility.yul\":24408:24539   */\n      tag_429\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":24400:24539   */\n      swap1\n      pop\n        /* \"#utility.yul\":24127:24546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24552:24777   */\n    tag_430:\n        /* \"#utility.yul\":24692:24726   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24688:24689   */\n      0x00\n        /* \"#utility.yul\":24680:24686   */\n      dup3\n        /* \"#utility.yul\":24676:24690   */\n      add\n        /* \"#utility.yul\":24669:24727   */\n      mstore\n        /* \"#utility.yul\":24761:24769   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24756:24758   */\n      0x20\n        /* \"#utility.yul\":24748:24754   */\n      dup3\n        /* \"#utility.yul\":24744:24759   */\n      add\n        /* \"#utility.yul\":24737:24770   */\n      mstore\n        /* \"#utility.yul\":24552:24777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24783:25149   */\n    tag_431:\n        /* \"#utility.yul\":24925:24928   */\n      0x00\n        /* \"#utility.yul\":24946:25013   */\n      tag_654\n        /* \"#utility.yul\":25010:25012   */\n      0x26\n        /* \"#utility.yul\":25005:25008   */\n      dup4\n        /* \"#utility.yul\":24946:25013   */\n      tag_391\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":24939:25013   */\n      swap2\n      pop\n        /* \"#utility.yul\":25022:25115   */\n      tag_655\n        /* \"#utility.yul\":25111:25114   */\n      dup3\n        /* \"#utility.yul\":25022:25115   */\n      tag_430\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":25140:25142   */\n      0x40\n        /* \"#utility.yul\":25135:25138   */\n      dup3\n        /* \"#utility.yul\":25131:25143   */\n      add\n        /* \"#utility.yul\":25124:25143   */\n      swap1\n      pop\n        /* \"#utility.yul\":24783:25149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25155:25574   */\n    tag_351:\n        /* \"#utility.yul\":25321:25325   */\n      0x00\n        /* \"#utility.yul\":25359:25361   */\n      0x20\n        /* \"#utility.yul\":25348:25357   */\n      dup3\n        /* \"#utility.yul\":25344:25362   */\n      add\n        /* \"#utility.yul\":25336:25362   */\n      swap1\n      pop\n        /* \"#utility.yul\":25408:25417   */\n      dup2\n        /* \"#utility.yul\":25402:25406   */\n      dup2\n        /* \"#utility.yul\":25398:25418   */\n      sub\n        /* \"#utility.yul\":25394:25395   */\n      0x00\n        /* \"#utility.yul\":25383:25392   */\n      dup4\n        /* \"#utility.yul\":25379:25396   */\n      add\n        /* \"#utility.yul\":25372:25419   */\n      mstore\n        /* \"#utility.yul\":25436:25567   */\n      tag_657\n        /* \"#utility.yul\":25562:25566   */\n      dup2\n        /* \"#utility.yul\":25436:25567   */\n      tag_431\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":25428:25567   */\n      swap1\n      pop\n        /* \"#utility.yul\":25155:25574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25580:25678   */\n    tag_432:\n        /* \"#utility.yul\":25631:25637   */\n      0x00\n        /* \"#utility.yul\":25665:25670   */\n      dup2\n        /* \"#utility.yul\":25659:25671   */\n      mload\n        /* \"#utility.yul\":25649:25671   */\n      swap1\n      pop\n        /* \"#utility.yul\":25580:25678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25684:25831   */\n    tag_433:\n        /* \"#utility.yul\":25785:25796   */\n      0x00\n        /* \"#utility.yul\":25822:25825   */\n      dup2\n        /* \"#utility.yul\":25807:25825   */\n      swap1\n      pop\n        /* \"#utility.yul\":25684:25831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25837:26083   */\n    tag_434:\n        /* \"#utility.yul\":25918:25919   */\n      0x00\n        /* \"#utility.yul\":25928:26041   */\n    tag_661:\n        /* \"#utility.yul\":25942:25948   */\n      dup4\n        /* \"#utility.yul\":25939:25940   */\n      dup2\n        /* \"#utility.yul\":25936:25949   */\n      lt\n        /* \"#utility.yul\":25928:26041   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":26027:26028   */\n      dup1\n        /* \"#utility.yul\":26022:26025   */\n      dup3\n        /* \"#utility.yul\":26018:26029   */\n      add\n        /* \"#utility.yul\":26012:26030   */\n      mload\n        /* \"#utility.yul\":26008:26009   */\n      dup2\n        /* \"#utility.yul\":26003:26006   */\n      dup5\n        /* \"#utility.yul\":25999:26010   */\n      add\n        /* \"#utility.yul\":25992:26031   */\n      mstore\n        /* \"#utility.yul\":25964:25966   */\n      0x20\n        /* \"#utility.yul\":25961:25962   */\n      dup2\n        /* \"#utility.yul\":25957:25967   */\n      add\n        /* \"#utility.yul\":25952:25967   */\n      swap1\n      pop\n        /* \"#utility.yul\":25928:26041   */\n      jump(tag_661)\n    tag_663:\n        /* \"#utility.yul\":26075:26076   */\n      0x00\n        /* \"#utility.yul\":26066:26072   */\n      dup5\n        /* \"#utility.yul\":26061:26064   */\n      dup5\n        /* \"#utility.yul\":26057:26073   */\n      add\n        /* \"#utility.yul\":26050:26077   */\n      mstore\n        /* \"#utility.yul\":25899:26083   */\n      pop\n        /* \"#utility.yul\":25837:26083   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26089:26475   */\n    tag_435:\n        /* \"#utility.yul\":26193:26196   */\n      0x00\n        /* \"#utility.yul\":26221:26259   */\n      tag_665\n        /* \"#utility.yul\":26253:26258   */\n      dup3\n        /* \"#utility.yul\":26221:26259   */\n      tag_432\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":26275:26363   */\n      tag_666\n        /* \"#utility.yul\":26356:26362   */\n      dup2\n        /* \"#utility.yul\":26351:26354   */\n      dup6\n        /* \"#utility.yul\":26275:26363   */\n      tag_433\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":26268:26363   */\n      swap4\n      pop\n        /* \"#utility.yul\":26372:26437   */\n      tag_667\n        /* \"#utility.yul\":26430:26436   */\n      dup2\n        /* \"#utility.yul\":26425:26428   */\n      dup6\n        /* \"#utility.yul\":26418:26422   */\n      0x20\n        /* \"#utility.yul\":26411:26416   */\n      dup7\n        /* \"#utility.yul\":26407:26423   */\n      add\n        /* \"#utility.yul\":26372:26437   */\n      tag_434\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":26462:26468   */\n      dup1\n        /* \"#utility.yul\":26457:26460   */\n      dup5\n        /* \"#utility.yul\":26453:26469   */\n      add\n        /* \"#utility.yul\":26446:26469   */\n      swap2\n      pop\n        /* \"#utility.yul\":26197:26475   */\n      pop\n        /* \"#utility.yul\":26089:26475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26481:26752   */\n    tag_353:\n        /* \"#utility.yul\":26611:26614   */\n      0x00\n        /* \"#utility.yul\":26633:26726   */\n      tag_669\n        /* \"#utility.yul\":26722:26725   */\n      dup3\n        /* \"#utility.yul\":26713:26719   */\n      dup5\n        /* \"#utility.yul\":26633:26726   */\n      tag_435\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":26626:26726   */\n      swap2\n      pop\n        /* \"#utility.yul\":26743:26746   */\n      dup2\n        /* \"#utility.yul\":26736:26746   */\n      swap1\n      pop\n        /* \"#utility.yul\":26481:26752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26758:26937   */\n    tag_436:\n        /* \"#utility.yul\":26898:26929   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":26894:26895   */\n      0x00\n        /* \"#utility.yul\":26886:26892   */\n      dup3\n        /* \"#utility.yul\":26882:26896   */\n      add\n        /* \"#utility.yul\":26875:26930   */\n      mstore\n        /* \"#utility.yul\":26758:26937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26943:27309   */\n    tag_437:\n        /* \"#utility.yul\":27085:27088   */\n      0x00\n        /* \"#utility.yul\":27106:27173   */\n      tag_672\n        /* \"#utility.yul\":27170:27172   */\n      0x1d\n        /* \"#utility.yul\":27165:27168   */\n      dup4\n        /* \"#utility.yul\":27106:27173   */\n      tag_391\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":27099:27173   */\n      swap2\n      pop\n        /* \"#utility.yul\":27182:27275   */\n      tag_673\n        /* \"#utility.yul\":27271:27274   */\n      dup3\n        /* \"#utility.yul\":27182:27275   */\n      tag_436\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":27300:27302   */\n      0x20\n        /* \"#utility.yul\":27295:27298   */\n      dup3\n        /* \"#utility.yul\":27291:27303   */\n      add\n        /* \"#utility.yul\":27284:27303   */\n      swap1\n      pop\n        /* \"#utility.yul\":26943:27309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27315:27734   */\n    tag_366:\n        /* \"#utility.yul\":27481:27485   */\n      0x00\n        /* \"#utility.yul\":27519:27521   */\n      0x20\n        /* \"#utility.yul\":27508:27517   */\n      dup3\n        /* \"#utility.yul\":27504:27522   */\n      add\n        /* \"#utility.yul\":27496:27522   */\n      swap1\n      pop\n        /* \"#utility.yul\":27568:27577   */\n      dup2\n        /* \"#utility.yul\":27562:27566   */\n      dup2\n        /* \"#utility.yul\":27558:27578   */\n      sub\n        /* \"#utility.yul\":27554:27555   */\n      0x00\n        /* \"#utility.yul\":27543:27552   */\n      dup4\n        /* \"#utility.yul\":27539:27556   */\n      add\n        /* \"#utility.yul\":27532:27579   */\n      mstore\n        /* \"#utility.yul\":27596:27727   */\n      tag_675\n        /* \"#utility.yul\":27722:27726   */\n      dup2\n        /* \"#utility.yul\":27596:27727   */\n      tag_437\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":27588:27727   */\n      swap1\n      pop\n        /* \"#utility.yul\":27315:27734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27740:27839   */\n    tag_438:\n        /* \"#utility.yul\":27792:27798   */\n      0x00\n        /* \"#utility.yul\":27826:27831   */\n      dup2\n        /* \"#utility.yul\":27820:27832   */\n      mload\n        /* \"#utility.yul\":27810:27832   */\n      swap1\n      pop\n        /* \"#utility.yul\":27740:27839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27845:27947   */\n    tag_439:\n        /* \"#utility.yul\":27886:27892   */\n      0x00\n        /* \"#utility.yul\":27937:27939   */\n      0x1f\n        /* \"#utility.yul\":27933:27940   */\n      not\n        /* \"#utility.yul\":27928:27930   */\n      0x1f\n        /* \"#utility.yul\":27921:27926   */\n      dup4\n        /* \"#utility.yul\":27917:27931   */\n      add\n        /* \"#utility.yul\":27913:27941   */\n      and\n        /* \"#utility.yul\":27903:27941   */\n      swap1\n      pop\n        /* \"#utility.yul\":27845:27947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27953:28330   */\n    tag_440:\n        /* \"#utility.yul\":28041:28044   */\n      0x00\n        /* \"#utility.yul\":28069:28108   */\n      tag_679\n        /* \"#utility.yul\":28102:28107   */\n      dup3\n        /* \"#utility.yul\":28069:28108   */\n      tag_438\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":28124:28195   */\n      tag_680\n        /* \"#utility.yul\":28188:28194   */\n      dup2\n        /* \"#utility.yul\":28183:28186   */\n      dup6\n        /* \"#utility.yul\":28124:28195   */\n      tag_391\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":28117:28195   */\n      swap4\n      pop\n        /* \"#utility.yul\":28204:28269   */\n      tag_681\n        /* \"#utility.yul\":28262:28268   */\n      dup2\n        /* \"#utility.yul\":28257:28260   */\n      dup6\n        /* \"#utility.yul\":28250:28254   */\n      0x20\n        /* \"#utility.yul\":28243:28248   */\n      dup7\n        /* \"#utility.yul\":28239:28255   */\n      add\n        /* \"#utility.yul\":28204:28269   */\n      tag_434\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":28294:28323   */\n      tag_682\n        /* \"#utility.yul\":28316:28322   */\n      dup2\n        /* \"#utility.yul\":28294:28323   */\n      tag_439\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":28289:28292   */\n      dup5\n        /* \"#utility.yul\":28285:28324   */\n      add\n        /* \"#utility.yul\":28278:28324   */\n      swap2\n      pop\n        /* \"#utility.yul\":28045:28330   */\n      pop\n        /* \"#utility.yul\":27953:28330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28336:28649   */\n    tag_375:\n        /* \"#utility.yul\":28449:28453   */\n      0x00\n        /* \"#utility.yul\":28487:28489   */\n      0x20\n        /* \"#utility.yul\":28476:28485   */\n      dup3\n        /* \"#utility.yul\":28472:28490   */\n      add\n        /* \"#utility.yul\":28464:28490   */\n      swap1\n      pop\n        /* \"#utility.yul\":28536:28545   */\n      dup2\n        /* \"#utility.yul\":28530:28534   */\n      dup2\n        /* \"#utility.yul\":28526:28546   */\n      sub\n        /* \"#utility.yul\":28522:28523   */\n      0x00\n        /* \"#utility.yul\":28511:28520   */\n      dup4\n        /* \"#utility.yul\":28507:28524   */\n      add\n        /* \"#utility.yul\":28500:28547   */\n      mstore\n        /* \"#utility.yul\":28564:28642   */\n      tag_684\n        /* \"#utility.yul\":28637:28641   */\n      dup2\n        /* \"#utility.yul\":28628:28634   */\n      dup5\n        /* \"#utility.yul\":28564:28642   */\n      tag_440\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":28556:28642   */\n      swap1\n      pop\n        /* \"#utility.yul\":28336:28649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122047fb47b139e46bce3b010c1d12cee81698fa9dd4c0a89923969cd0d2bae7b8b764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1052": {
									"entryPoint": null,
									"id": 1052,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_969": {
									"entryPoint": 56,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 64,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612b8080620001146000396000f3fe6080604052600436106101c25760003560e01c8063715018a6116100f7578063ace1741c11610095578063f2fde38b11610064578063f2fde38b146105f9578063f3fef3a314610622578063fa09e6301461064b578063fb00f3fc14610674576101c2565b8063ace1741c1461054f578063b81df7421461057a578063ded441c2146105a5578063e985e367146105ce576101c2565b80638ce0b9d2116100d15780638ce0b9d2146104935780638da5cb5b146104d057806399b77032146104fb578063a82524b214610524576101c2565b8063715018a61461042a578063757765f81461044157806389e6ce1e1461046a576101c2565b80633f6f7ed61161016457806363b201171161013e57806363b201171461038d57806368f8fc10146103b85780636aa5b37f146103d45780636bcedf9c146103ff576101c2565b80633f6f7ed614610312578063444ad5ee1461033b5780635b10bd6a14610364576101c2565b8063226ac321116101a0578063226ac3211461026a578063249b7c19146102935780632c4e722e146102be5780633c00a36c146102e9576101c2565b80630fabdd44146101c7578063115ece4c146101f0578063204120bc1461022d575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190611bd7565b61068b565b005b3480156101fc57600080fd5b5061021760048036038101906102129190611c62565b6106a8565b6040516102249190611cb1565b60405180910390f35b34801561023957600080fd5b50610254600480360381019061024f9190611ccc565b61086b565b6040516102619190611cb1565b60405180910390f35b34801561027657600080fd5b50610291600480360381019061028c9190611c62565b610883565b005b34801561029f57600080fd5b506102a8610998565b6040516102b59190611cb1565b60405180910390f35b3480156102ca57600080fd5b506102d361099e565b6040516102e09190611cb1565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190611bd7565b6109a4565b005b34801561031e57600080fd5b5061033960048036038101906103349190611bd7565b6109f6565b005b34801561034757600080fd5b50610362600480360381019061035d9190611c62565b610a08565b005b34801561037057600080fd5b5061038b60048036038101906103869190611bd7565b610ae9565b005b34801561039957600080fd5b506103a2610b0f565b6040516103af9190611cb1565b60405180910390f35b6103d260048036038101906103cd9190611c62565b610b15565b005b3480156103e057600080fd5b506103e9610ede565b6040516103f69190611cb1565b60405180910390f35b34801561040b57600080fd5b50610414610ee4565b6040516104219190611cb1565b60405180910390f35b34801561043657600080fd5b5061043f610eea565b005b34801561044d57600080fd5b5061046860048036038101906104639190611bd7565b610efe565b005b34801561047657600080fd5b50610491600480360381019061048c9190611c62565b610f10565b005b34801561049f57600080fd5b506104ba60048036038101906104b59190611ccc565b6111d3565b6040516104c79190611d14565b60405180910390f35b3480156104dc57600080fd5b506104e56111f3565b6040516104f29190611d3e565b60405180910390f35b34801561050757600080fd5b50610522600480360381019061051d9190611bd7565b61121c565b005b34801561053057600080fd5b5061053961122e565b6040516105469190611cb1565b60405180910390f35b34801561055b57600080fd5b50610564611234565b6040516105719190611cb1565b60405180910390f35b34801561058657600080fd5b5061058f61123a565b60405161059c9190611cb1565b60405180910390f35b3480156105b157600080fd5b506105cc60048036038101906105c79190611bd7565b611240565b005b3480156105da57600080fd5b506105e36112dd565b6040516105f09190611d3e565b60405180910390f35b34801561060557600080fd5b50610620600480360381019061061b9190611ccc565b611303565b005b34801561062e57600080fd5b5061064960048036038101906106449190611c62565b611386565b005b34801561065757600080fd5b50610672600480360381019061066d9190611ccc565b61144d565b005b34801561068057600080fd5b50610689611571565b005b6106936116ae565b804261069f9190611d88565b600a8190555050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461082557600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290611e19565b60405180910390fd5b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036107b957600061081e565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600354600a6108089190611f6c565b846108139190611fb7565b61081d9190612028565b5b9050610861565b60006001540361083657600061085e565b600154600354600a6108489190611f6c565b846108539190611fb7565b61085d9190612028565b5b90505b8091505092915050565b60086020528060005260406000206000915090505481565b61088b6116ae565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611e19565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a828260405161098c929190612059565b60405180910390a15050565b600a5481565b60015481565b6109ac6116ae565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109f2573d6000803e3d6000fd5b5050565b6109fe6116ae565b8060018190555050565b610a106116ae565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c8282604051610add929190612059565b60405180910390a15050565b610af16116ae565b4260098190555080600954610b069190611d88565b600a8190555050565b600b5481565b600954421015610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b51906120f4565b60405180910390fd5b600a544210610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590612160565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be357610bde6000346106a8565b610bee565b610bed83836106a8565b5b905060045481600b54610c019190611d88565b1115610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c39906121f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0d57600654811015610cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb290612284565b60405180910390fd5b610d083382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b610e59565b600654811015610d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4990612316565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd590611e19565b60405180910390fd5b610e0b3330848673ffffffffffffffffffffffffffffffffffffffff166117b2909392919063ffffffff16565b610e583382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b5b80600b6000828254610e6b9190611d88565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c8484604051610ed1929190612336565b60405180910390a3505050565b60055481565b60045481565b610ef26116ae565b610efc600061183b565b565b610f066116ae565b8060058190555050565b610f186116ae565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e906123d1565b60405180910390fd5b60008111610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc190612463565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109c91906124bc565b60ff166003819055506110f4333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117b2909392919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161114f9190611d3e565b602060405180830381865afa15801561116c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119091906124fe565b6004819055507f03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a82826040516111c7929190612059565b60405180910390a15050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6112246116ae565b8060068190555050565b60095481565b60035481565b60065481565b6112486116ae565b600a5442101561128d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112849061259d565b60405180910390fd5b6112da3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61130b6116ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361137a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113719061262f565b60405180910390fd5b6113838161183b565b50565b61138e6116ae565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361141e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611415906126e7565b60405180910390fd5b61144933828473ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b5050565b6114556116ae565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc9061279f565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115209190611d3e565b602060405180830381865afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156191906124fe565b905061156d8282611386565b5050565b6115796116ae565b600a544210156115be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b59061259d565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161161b9190611d3e565b602060405180830381865afa158015611638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165c91906124fe565b90506116ab3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b50565b6116b66118ff565b73ffffffffffffffffffffffffffffffffffffffff166116d46111f3565b73ffffffffffffffffffffffffffffffffffffffff161461172a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117219061280b565b60405180910390fd5b565b6117ad8363a9059cbb60e01b848460405160240161174b929190612059565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611907565b505050565b611835846323b872dd60e01b8585856040516024016117d39392919061282b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611907565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611969826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119cf9092919063ffffffff16565b905060008151148061198b57508080602001905181019061198a919061288e565b5b6119ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c19061292d565b60405180910390fd5b505050565b60606119de84846000856119e7565b90509392505050565b606082471015611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a23906129bf565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611a559190612a50565b60006040518083038185875af1925050503d8060008114611a92576040519150601f19603f3d011682016040523d82523d6000602084013e611a97565b606091505b5091509150611aa887838387611ab4565b92505050949350505050565b60608315611b16576000835103611b0e57611ace85611b29565b611b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0490612ab3565b60405180910390fd5b5b829050611b21565b611b208383611b4c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611b5f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b939190612b28565b60405180910390fd5b600080fd5b6000819050919050565b611bb481611ba1565b8114611bbf57600080fd5b50565b600081359050611bd181611bab565b92915050565b600060208284031215611bed57611bec611b9c565b5b6000611bfb84828501611bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c2f82611c04565b9050919050565b611c3f81611c24565b8114611c4a57600080fd5b50565b600081359050611c5c81611c36565b92915050565b60008060408385031215611c7957611c78611b9c565b5b6000611c8785828601611c4d565b9250506020611c9885828601611bc2565b9150509250929050565b611cab81611ba1565b82525050565b6000602082019050611cc66000830184611ca2565b92915050565b600060208284031215611ce257611ce1611b9c565b5b6000611cf084828501611c4d565b91505092915050565b60008115159050919050565b611d0e81611cf9565b82525050565b6000602082019050611d296000830184611d05565b92915050565b611d3881611c24565b82525050565b6000602082019050611d536000830184611d2f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d9382611ba1565b9150611d9e83611ba1565b9250828201905080821115611db657611db5611d59565b5b92915050565b600082825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f742077686974656c69737465640000600082015250565b6000611e03601e83611dbc565b9150611e0e82611dcd565b602082019050919050565b60006020820190508181036000830152611e3281611df6565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115611e9057808604811115611e6c57611e6b611d59565b5b6001851615611e7b5780820291505b8081029050611e8985611e39565b9450611e50565b94509492505050565b600082611ea95760019050611f65565b81611eb75760009050611f65565b8160018114611ecd5760028114611ed757611f06565b6001915050611f65565b60ff841115611ee957611ee8611d59565b5b8360020a915084821115611f0057611eff611d59565b5b50611f65565b5060208310610133831016604e8410600b8410161715611f3b5782820a905083811115611f3657611f35611d59565b5b611f65565b611f488484846001611e46565b92509050818404811115611f5f57611f5e611d59565b5b81810290505b9392505050565b6000611f7782611ba1565b9150611f8283611ba1565b9250611faf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e99565b905092915050565b6000611fc282611ba1565b9150611fcd83611ba1565b9250828202611fdb81611ba1565b91508282048414831517611ff257611ff1611d59565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061203382611ba1565b915061203e83611ba1565b92508261204e5761204d611ff9565b5b828204905092915050565b600060408201905061206e6000830185611d2f565b61207b6020830184611ca2565b9392505050565b7f50726573616c653a2050726573616c6520686173206e6f74207374617274656460008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b60006120de602483611dbc565b91506120e982612082565b604082019050919050565b6000602082019050818103600083015261210d816120d1565b9050919050565b7f50726573616c653a2050726573616c652068617320656e646564000000000000600082015250565b600061214a601a83611dbc565b915061215582612114565b602082019050919050565b600060208201905081810360008301526121798161213d565b9050919050565b7f50726573616c653a20546f74616c20546f6b656e2053616c652052656163686560008201527f6421000000000000000000000000000000000000000000000000000000000000602082015250565b60006121dc602283611dbc565b91506121e782612180565b604082019050919050565b6000602082019050818103600083015261220b816121cf565b9050919050565b7f50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e2060008201527f627579206c696d69740000000000000000000000000000000000000000000000602082015250565b600061226e602983611dbc565b915061227982612212565b604082019050919050565b6000602082019050818103600083015261229d81612261565b9050919050565b7f50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c6960008201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b6000612300602383611dbc565b915061230b826122a4565b604082019050919050565b6000602082019050818103600083015261232f816122f3565b9050919050565b600060408201905061234b6000830185611ca2565b6123586020830184611ca2565b9392505050565b7f50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006123bb602a83611dbc565b91506123c68261235f565b604082019050919050565b600060208201905081810360008301526123ea816123ae565b9050919050565b7f50726573616c653a20546f74616c20746f6b656e7320666f722073616c65206360008201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000602082015250565b600061244d602d83611dbc565b9150612458826123f1565b604082019050919050565b6000602082019050818103600083015261247c81612440565b9050919050565b600060ff82169050919050565b61249981612483565b81146124a457600080fd5b50565b6000815190506124b681612490565b92915050565b6000602082840312156124d2576124d1611b9c565b5b60006124e0848285016124a7565b91505092915050565b6000815190506124f881611bab565b92915050565b60006020828403121561251457612513611b9c565b5b6000612522848285016124e9565b91505092915050565b7f50726573616c653a2050726573616c6520686173206e6f7420656e646564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000612587602283611dbc565b91506125928261252b565b604082019050919050565b600060208201905081810360008301526125b68161257a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612619602683611dbc565b9150612624826125bd565b604082019050919050565b600060208201905081810360008301526126488161260c565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f617753616c65546f6b656e282920696e73746561640000000000000000000000604082015250565b60006126d1605583611dbc565b91506126dc8261264f565b606082019050919050565b60006020820190508181036000830152612700816126c4565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f6177416c6c53616c65546f6b656e282920696e73746561640000000000000000604082015250565b6000612789605883611dbc565b915061279482612707565b606082019050919050565b600060208201905081810360008301526127b88161277c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127f5602083611dbc565b9150612800826127bf565b602082019050919050565b60006020820190508181036000830152612824816127e8565b9050919050565b60006060820190506128406000830186611d2f565b61284d6020830185611d2f565b61285a6040830184611ca2565b949350505050565b61286b81611cf9565b811461287657600080fd5b50565b60008151905061288881612862565b92915050565b6000602082840312156128a4576128a3611b9c565b5b60006128b284828501612879565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612917602a83611dbc565b9150612922826128bb565b604082019050919050565b600060208201905081810360008301526129468161290a565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129a9602683611dbc565b91506129b48261294d565b604082019050919050565b600060208201905081810360008301526129d88161299c565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612a135780820151818401526020810190506129f8565b60008484015250505050565b6000612a2a826129df565b612a3481856129ea565b9350612a448185602086016129f5565b80840191505092915050565b6000612a5c8284612a1f565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a9d601d83611dbc565b9150612aa882612a67565b602082019050919050565b60006020820190508181036000830152612acc81612a90565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612afa82612ad3565b612b048185611dbc565b9350612b148185602086016129f5565b612b1d81612ade565b840191505092915050565b60006020820190508181036000830152612b428184612aef565b90509291505056fea264697066735822122047fb47b139e46bce3b010c1d12cee81698fa9dd4c0a89923969cd0d2bae7b8b764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x40 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2B80 DUP1 PUSH3 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xACE1741C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xFB00F3FC EQ PUSH2 0x674 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xACE1741C EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xB81DF742 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xDED441C2 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x5CE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8CE0B9D2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8CE0B9D2 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x99B77032 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x524 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x757765F8 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x89E6CE1E EQ PUSH2 0x46A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x6AA5B37F EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x3FF JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x444AD5EE EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x5B10BD6A EQ PUSH2 0x364 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x226AC321 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x226AC321 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x2E9 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xFABDD44 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xEEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x121C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x539 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58F PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E3 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x620 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x1303 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x649 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1386 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x689 PUSH2 0x1571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x693 PUSH2 0x16AE JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x825 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x7B9 JUMPI PUSH1 0x0 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST DUP5 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x836 JUMPI PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST DUP5 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9AC PUSH2 0x16AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xADD SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAF1 PUSH2 0x16AE JUMP JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 SLOAD PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE3 JUMPI PUSH2 0xBDE PUSH1 0x0 CALLVALUE PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xBED DUP4 DUP4 PUSH2 0x6A8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0xB SLOAD PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST GT ISZERO PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0D JUMPI PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD08 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0B CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE58 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEF2 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0xEFC PUSH1 0x0 PUSH2 0x183B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF06 PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP1 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10F4 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1224 PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1284 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DA CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x130B PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x183B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x138E PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1449 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1455 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DC SWAP1 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP PUSH2 0x156D DUP3 DUP3 PUSH2 0x1386 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x15BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B5 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP PUSH2 0x16AB CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16B6 PUSH2 0x18FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D4 PUSH2 0x11F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1721 SWAP1 PUSH2 0x280B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17AD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x174B SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1835 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1907 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1969 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x198B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x198A SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C1 SWAP1 PUSH2 0x292D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19DE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19E7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A23 SWAP1 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AA8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B16 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1B0E JUMPI PUSH2 0x1ACE DUP6 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x1B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B04 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B20 DUP4 DUP4 PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1B5F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B93 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB4 DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD1 DUP2 PUSH2 0x1BAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BEC PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFB DUP5 DUP3 DUP6 ADD PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP3 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5C DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAB DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D53 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D93 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9E DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F742077686974656C69737465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 PUSH1 0x1E DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E32 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E90 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E7B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E89 DUP6 PUSH2 0x1E39 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E50 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EA9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F65 JUMP JUMPDEST DUP2 PUSH2 0x1EB7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F65 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1ECD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1ED7 JUMPI PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EFF PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F65 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F3B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F36 JUMPI PUSH2 0x1F35 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1F48 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F5F JUMPI PUSH2 0x1F5E PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FAF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FDB DUP2 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2033 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x203E DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x207B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2079657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DE PUSH1 0x24 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x20E9 DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210D DUP2 PUSH2 0x20D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C652068617320656E646564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH1 0x1A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2179 DUP2 PUSH2 0x213D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6421000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DC PUSH1 0x22 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x21E7 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220B DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x627579206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226E PUSH1 0x29 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2279 DUP3 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2300 PUSH1 0x23 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x230B DUP3 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232F DUP2 PUSH2 0x22F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x234B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x2358 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BB PUSH1 0x2A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x23C6 DUP3 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23EA DUP2 PUSH2 0x23AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E6E6F74206265207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244D PUSH1 0x2D DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2499 DUP2 PUSH2 0x2483 JUMP JUMPDEST DUP2 EQ PUSH2 0x24A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B6 DUP2 PUSH2 0x2490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E0 DUP5 DUP3 DUP6 ADD PUSH2 0x24A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F8 DUP2 PUSH2 0x1BAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2514 JUMPI PUSH2 0x2513 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2522 DUP5 DUP3 DUP6 ADD PUSH2 0x24E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F7420656E6465642079 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2587 PUSH1 0x22 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2592 DUP3 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B6 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2619 PUSH1 0x26 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2624 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2648 DUP2 PUSH2 0x260C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x617753616C65546F6B656E282920696E73746561640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D1 PUSH1 0x55 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x26DC DUP3 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2700 DUP2 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6177416C6C53616C65546F6B656E282920696E73746561640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 PUSH1 0x58 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2794 DUP3 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 PUSH2 0x277C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F5 PUSH1 0x20 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2800 DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2824 DUP2 PUSH2 0x27E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2840 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x284D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x285A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x286B DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2888 DUP2 PUSH2 0x2862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A4 JUMPI PUSH2 0x28A3 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28B2 DUP5 DUP3 DUP6 ADD PUSH2 0x2879 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2917 PUSH1 0x2A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2922 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2946 DUP2 PUSH2 0x290A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A9 PUSH1 0x26 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x29B4 DUP3 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29D8 DUP2 PUSH2 0x299C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2A DUP3 PUSH2 0x29DF JUMP JUMPDEST PUSH2 0x2A34 DUP2 DUP6 PUSH2 0x29EA JUMP JUMPDEST SWAP4 POP PUSH2 0x2A44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5C DUP3 DUP5 PUSH2 0x2A1F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9D PUSH1 0x1D DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA8 DUP3 PUSH2 0x2A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ACC DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFA DUP3 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x2B04 DUP2 DUP6 PUSH2 0x1DBC JUMP JUMPDEST SWAP4 POP PUSH2 0x2B14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F5 JUMP JUMPDEST PUSH2 0x2B1D DUP2 PUSH2 0x2ADE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B42 DUP2 DUP5 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xFB SELFBALANCE 0xB1 CODECOPY 0xE4 PUSH12 0xCE3B010C1D12CEE81698FA9D 0xD4 0xC0 0xA8 SWAP10 0x23 SWAP7 SWAP13 0xD0 0xD2 0xBA 0xE7 0xB8 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "262:6381:7:-:0;;;1142:16;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;262:6381:7;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;262:6381:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_578": {
									"entryPoint": 6407,
									"id": 578,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5806,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_969": {
									"entryPoint": 6399,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_956": {
									"entryPoint": 6988,
									"id": 956,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 6203,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addWhiteListedToken_1229": {
									"entryPoint": 2568,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyToken_1457": {
									"entryPoint": 2837,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_781": {
									"entryPoint": 6631,
									"id": 781,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_717": {
									"entryPoint": 6607,
									"id": 717,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTokenAmount_1340": {
									"entryPoint": 1704,
									"id": 1340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_645": {
									"entryPoint": 6953,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxBuyLimit_1004": {
									"entryPoint": 3806,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minBuyLimit_1006": {
									"entryPoint": 4666,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 4595,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleEndTime_1018": {
									"entryPoint": 2456,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleStartTime_1016": {
									"entryPoint": 4654,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rate_996": {
									"entryPoint": 2462,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 3818,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_311": {
									"entryPoint": 6066,
									"id": 311,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_284": {
									"entryPoint": 5932,
									"id": 284,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleTokenDec_1000": {
									"entryPoint": 4660,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleToken_998": {
									"entryPoint": 4829,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMaxBuyLimit_1481": {
									"entryPoint": 3838,
									"id": 1481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinBuyLimit_1469": {
									"entryPoint": 4636,
									"id": 1469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSaleTokenParams_1168": {
									"entryPoint": 3856,
									"id": 1168,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startAndSetPresaleEndTime_1187": {
									"entryPoint": 2793,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenPrices_1014": {
									"entryPoint": 2155,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenWL_1010": {
									"entryPoint": 4563,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_1020": {
									"entryPoint": 2831,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensforSale_1002": {
									"entryPoint": 3812,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4867,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upateTime_1202": {
									"entryPoint": 1675,
									"id": 1202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateEthRate_1241": {
									"entryPoint": 2550,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTokenRate_1269": {
									"entryPoint": 2179,
									"id": 1269,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_912": {
									"entryPoint": 6836,
									"id": 912,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawAllSaleToken_1529": {
									"entryPoint": 5489,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_1587": {
									"entryPoint": 5197,
									"id": 1587,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCurrency_1604": {
									"entryPoint": 2468,
									"id": 1604,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawSaleToken_1500": {
									"entryPoint": 4672,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1555": {
									"entryPoint": 4998,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 9404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d": {
									"entryPoint": 9807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c": {
									"entryPoint": 9055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f": {
									"entryPoint": 9991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f": {
									"entryPoint": 8722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3": {
									"entryPoint": 7629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503": {
									"entryPoint": 9515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28652:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:8"
															},
															"nodeType": "YulIf",
															"src": "766:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:8",
														"type": ""
													}
												],
												"src": "690:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:8",
														"type": ""
													}
												],
												"src": "1025:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:8",
														"type": ""
													}
												],
												"src": "1157:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:8"
															},
															"nodeType": "YulIf",
															"src": "1312:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:8",
														"type": ""
													}
												],
												"src": "1259:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:8",
														"type": ""
													}
												],
												"src": "1387:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1661:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1663:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1663:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1645:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:32:8"
															},
															"nodeType": "YulIf",
															"src": "1625:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1754:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1769:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1773:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1798:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1833:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1844:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1829:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1853:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1808:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1798:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1881:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1896:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1900:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:8",
														"type": ""
													}
												],
												"src": "1532:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2065:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:8",
														"type": ""
													}
												],
												"src": "2012:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2206:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2218:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2229:4:8",
														"type": ""
													}
												],
												"src": "2136:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2476:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:32:8"
															},
															"nodeType": "YulIf",
															"src": "2440:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2569:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2400:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2411:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2423:6:8",
														"type": ""
													}
												],
												"src": "2364:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2751:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2776:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2769:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2751:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2733:7:8",
														"type": ""
													}
												],
												"src": "2699:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2871:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2891:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2876:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2864:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2864:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2842:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2849:3:8",
														"type": ""
													}
												],
												"src": "2795:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3002:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3012:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3024:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3012:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3110:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3048:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2974:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2986:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2997:4:8",
														"type": ""
													}
												],
												"src": "2910:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3191:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3213:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3201:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3179:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3186:3:8",
														"type": ""
													}
												],
												"src": "3126:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3358:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3320:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3332:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:8",
														"type": ""
													}
												],
												"src": "3250:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3523:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3516:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3620:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3637:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3478:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3718:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3741:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3723:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3718:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3752:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3775:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3757:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3752:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3786:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3797:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3800:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3826:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3828:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3828:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3828:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3818:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3815:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:10:8"
															},
															"nodeType": "YulIf",
															"src": "3812:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3695:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3698:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3704:3:8",
														"type": ""
													}
												],
												"src": "3664:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3974:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3979:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3995:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4014:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4019:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4010:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3995:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3929:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3934:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3945:11:8",
														"type": ""
													}
												],
												"src": "3861:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4142:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4164:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4160:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4176:32:8",
																		"type": "",
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4153:56:8"
														}
													]
												},
												"name": "store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4134:6:8",
														"type": ""
													}
												],
												"src": "4036:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4378:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4444:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4385:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4550:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																	"nodeType": "YulIdentifier",
																	"src": "4461:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4563:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4574:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4356:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4364:3:8",
														"type": ""
													}
												],
												"src": "4222:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4765:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4775:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4787:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4775:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4822:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4833:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4841:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4847:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4867:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5001:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4875:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4867:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4745:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4760:4:8",
														"type": ""
													}
												],
												"src": "4594:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5080:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5105:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5108:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5101:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5101:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5080:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5051:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5061:8:8",
														"type": ""
													}
												],
												"src": "5019:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5200:775:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5210:15:8",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5219:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5210:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5234:14:8",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5243:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5234:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5292:677:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5380:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5382:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5382:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5382:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5358:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5368:3:8"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5373:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5364:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5364:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5355:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5355:24:8"
																		},
																		"nodeType": "YulIf",
																		"src": "5352:50:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5447:419:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5827:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5840:5:8"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5847:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5836:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5836:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5827:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5422:8:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5432:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5418:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5418:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "5415:451:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5879:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5891:4:8"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5897:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5887:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5887:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5879:4:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5915:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5950:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "5927:22:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5927:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5915:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5268:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5265:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5281:2:8",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5261:3:8",
																"statements": []
															},
															"src": "5257:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5155:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5163:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5170:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5180:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5188:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5195:4:8",
														"type": ""
													}
												],
												"src": "5127:848:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6041:1013:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6236:20:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6238:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6247:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6238:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6249:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6226:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:16:8"
															},
															"nodeType": "YulIf",
															"src": "6216:40:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6281:20:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6283:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6292:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6283:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6294:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6275:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6268:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:12:8"
															},
															"nodeType": "YulIf",
															"src": "6265:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6411:20:8",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6413:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6422:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6413:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6424:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6404:27:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6409:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6455:176:8",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6490:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6492:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6492:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6492:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6475:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6485:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6472:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6472:17:8"
																				},
																				"nodeType": "YulIf",
																				"src": "6469:43:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6525:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6538:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6541:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6534:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6534:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6525:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6581:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6583:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6583:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6583:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6569:5:8"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6576:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6566:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6566:14:8"
																				},
																				"nodeType": "YulIf",
																				"src": "6563:40:8"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6616:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6440:191:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6445:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6361:4:8"
															},
															"nodeType": "YulSwitch",
															"src": "6354:277:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6763:123:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6777:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6790:4:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6796:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "6786:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6786:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6777:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6836:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6838:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6838:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6838:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "6824:5:8"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "6831:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6821:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6821:14:8"
																		},
																		"nodeType": "YulIf",
																		"src": "6818:40:8"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6871:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6666:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6672:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6663:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6663:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6680:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6690:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6677:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6677:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6715:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6721:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6712:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6712:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6730:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6740:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6727:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6727:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6708:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6708:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6643:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:111:8"
															},
															"nodeType": "YulIf",
															"src": "6640:246:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6896:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6930:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6933:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6939:8:8"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "6949:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "6911:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6896:5:8"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6903:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6992:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6994:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6994:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6994:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6969:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "6980:3:8"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6985:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6976:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6976:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6966:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:25:8"
															},
															"nodeType": "YulIf",
															"src": "6963:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7023:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:8"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7043:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7023:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6011:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6017:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6027:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6035:5:8",
														"type": ""
													}
												],
												"src": "5981:1073:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7126:219:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7136:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7162:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7144:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7176:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7206:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7188:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:27:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7176:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7225:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7255:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7261:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7271:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7234:20:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7234:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7225:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7101:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7107:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7120:5:8",
														"type": ""
													}
												],
												"src": "7060:285:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7399:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7409:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7432:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7414:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7443:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7466:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7448:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7443:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7477:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7500:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7503:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7496:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7496:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7481:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7514:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7543:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7525:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7732:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7734:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7734:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7734:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7665:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7658:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7658:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7688:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7695:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7704:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7691:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7691:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7685:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7685:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7638:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7638:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:113:8"
															},
															"nodeType": "YulIf",
															"src": "7615:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7382:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7385:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7391:7:8",
														"type": ""
													}
												],
												"src": "7351:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7795:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7815:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7909:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7902:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7902:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7933:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7936:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7767:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7995:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8005:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8010:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8005:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8062:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8044:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8039:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8086:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8088:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8088:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8088:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8083:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:9:8"
															},
															"nodeType": "YulIf",
															"src": "8073:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8118:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8127:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8130:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8123:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8118:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7984:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7987:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7993:1:8",
														"type": ""
													}
												],
												"src": "7953:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8270:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8280:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8292:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8303:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8288:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8280:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8360:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8384:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8369:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8316:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8316:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8454:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8465:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8450:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8450:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8397:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8397:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8234:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8246:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8254:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8265:4:8",
														"type": ""
													}
												],
												"src": "8144:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8588:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8610:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8606:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8606:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c6520686173206e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8622:34:8",
																		"type": "",
																		"value": "Presale: Presale has not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8599:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8678:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8686:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8674:15:8"
																	},
																	{
																		"hexValue": "20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8691:6:8",
																		"type": "",
																		"value": " yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8667:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8580:6:8",
														"type": ""
													}
												],
												"src": "8482:223:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8857:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8867:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8933:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8938:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8874:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8867:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9039:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																	"nodeType": "YulIdentifier",
																	"src": "8950:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8950:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9052:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9063:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9059:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9059:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8845:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8853:3:8",
														"type": ""
													}
												],
												"src": "8711:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9254:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9264:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9276:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9287:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9272:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9272:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9264:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9322:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9330:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9336:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9326:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9300:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9300:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9356:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9490:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9364:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9356:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9234:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9249:4:8",
														"type": ""
													}
												],
												"src": "9083:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9614:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9636:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9644:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c652068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9648:28:8",
																		"type": "",
																		"value": "Presale: Presale has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9606:6:8",
														"type": ""
													}
												],
												"src": "9508:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9836:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9846:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9912:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9853:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9853:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9846:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10018:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																	"nodeType": "YulIdentifier",
																	"src": "9929:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9929:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9929:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10031:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10042:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10031:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9824:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9832:3:8",
														"type": ""
													}
												],
												"src": "9690:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10233:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10243:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10255:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10266:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10251:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10243:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10290:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10301:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10286:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10309:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10315:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10305:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10279:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10279:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10279:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10335:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10469:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10343:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10335:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10213:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10228:4:8",
														"type": ""
													}
												],
												"src": "10062:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10593:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10615:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10611:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f74616c20546f6b656e2053616c6520526561636865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10627:34:8",
																		"type": "",
																		"value": "Presale: Total Token Sale Reache"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10604:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10604:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10604:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10683:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10691:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10679:15:8"
																	},
																	{
																		"hexValue": "6421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10696:4:8",
																		"type": "",
																		"value": "d!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10672:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10672:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10585:6:8",
														"type": ""
													}
												],
												"src": "10487:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10860:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10870:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10936:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10941:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10877:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10877:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10870:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11042:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																	"nodeType": "YulIdentifier",
																	"src": "10953:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10953:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10953:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11055:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11066:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11071:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11062:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11055:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10848:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10856:3:8",
														"type": ""
													}
												],
												"src": "10714:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11257:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11267:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11279:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11290:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11275:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11267:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11314:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11325:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11310:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11310:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11333:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11339:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11329:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11303:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11303:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11303:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11359:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11493:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11367:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11359:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11237:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11252:4:8",
														"type": ""
													}
												],
												"src": "11086:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11617:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11639:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11647:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11635:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11651:34:8",
																		"type": "",
																		"value": "Presale: Token amount below min "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11628:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11628:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11715:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11703:15:8"
																	},
																	{
																		"hexValue": "627579206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11720:11:8",
																		"type": "",
																		"value": "buy limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11696:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11696:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11609:6:8",
														"type": ""
													}
												],
												"src": "11511:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11891:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11901:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11967:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11972:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11908:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11908:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11901:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12073:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																	"nodeType": "YulIdentifier",
																	"src": "11984:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11984:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11984:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12086:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12097:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12102:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12093:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12086:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11879:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11887:3:8",
														"type": ""
													}
												],
												"src": "11745:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12288:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12298:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12310:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12321:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12306:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12298:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12345:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12356:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12341:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12341:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12364:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12370:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12360:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12360:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12334:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12334:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12390:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12524:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12398:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12398:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12390:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12268:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12283:4:8",
														"type": ""
													}
												],
												"src": "12117:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12648:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12670:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12678:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12666:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12666:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12682:34:8",
																		"type": "",
																		"value": "Presale: Amount below min buy li"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12659:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12738:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12746:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12734:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12734:15:8"
																	},
																	{
																		"hexValue": "6d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12751:5:8",
																		"type": "",
																		"value": "mit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12727:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12727:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12640:6:8",
														"type": ""
													}
												],
												"src": "12542:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12916:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12926:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12992:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12933:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12926:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13098:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																	"nodeType": "YulIdentifier",
																	"src": "13009:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13009:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13009:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13111:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13122:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13127:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13118:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13111:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12904:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12912:3:8",
														"type": ""
													}
												],
												"src": "12770:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13313:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13323:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13335:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13346:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13331:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13331:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13323:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13370:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13366:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13366:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13389:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13395:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13359:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13359:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13359:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13415:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13549:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13423:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13423:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13415:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13293:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13308:4:8",
														"type": ""
													}
												],
												"src": "13142:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13693:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13703:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13715:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13726:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13711:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13711:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13703:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13783:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13796:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13807:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13792:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13792:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13739:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13739:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13864:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13877:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13888:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13873:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13873:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13820:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13820:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13820:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13657:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13669:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13677:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13688:4:8",
														"type": ""
													}
												],
												"src": "13567:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14011:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14033:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14041:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14029:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14029:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14045:34:8",
																		"type": "",
																		"value": "Presale: Sale token cannot be ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14022:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14022:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14022:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14101:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14109:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14097:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14097:15:8"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14114:12:8",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14090:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14090:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14090:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14003:6:8",
														"type": ""
													}
												],
												"src": "13905:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14286:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14296:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14362:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14367:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14303:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14303:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14296:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																	"nodeType": "YulIdentifier",
																	"src": "14379:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14379:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14379:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14481:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14492:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14497:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14488:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14488:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14481:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14274:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14282:3:8",
														"type": ""
													}
												],
												"src": "14140:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14683:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14693:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14705:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14716:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14701:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14693:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14740:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14751:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14736:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14736:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14759:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14765:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14755:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14755:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14729:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14729:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14785:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14919:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14793:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14793:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14785:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14663:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14678:4:8",
														"type": ""
													}
												],
												"src": "14512:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15043:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15065:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15073:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15061:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15061:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15077:34:8",
																		"type": "",
																		"value": "Presale: Total tokens for sale c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15054:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15054:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15054:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15133:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15141:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15129:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15129:15:8"
																	},
																	{
																		"hexValue": "616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15146:15:8",
																		"type": "",
																		"value": "annot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15122:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15122:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15122:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15035:6:8",
														"type": ""
													}
												],
												"src": "14937:232:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15321:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15331:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15397:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15402:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15338:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15338:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15331:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15503:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																	"nodeType": "YulIdentifier",
																	"src": "15414:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15414:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15516:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15527:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15532:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15523:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15523:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15516:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15309:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15317:3:8",
														"type": ""
													}
												],
												"src": "15175:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15718:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15728:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15740:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15751:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15736:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15728:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15775:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15786:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15771:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15771:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15794:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15800:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15790:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15764:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15764:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15764:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15820:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15954:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15828:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15828:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15820:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15698:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15713:4:8",
														"type": ""
													}
												],
												"src": "15547:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16015:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16025:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16040:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16047:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16036:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16036:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16025:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15997:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16007:7:8",
														"type": ""
													}
												],
												"src": "15972:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16105:77:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16160:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16169:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16172:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16162:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16162:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16162:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16151:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "16135:15:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16135:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16125:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16125:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16118:41:8"
															},
															"nodeType": "YulIf",
															"src": "16115:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16098:5:8",
														"type": ""
													}
												],
												"src": "16064:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16249:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16259:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16274:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16268:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16268:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16259:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16315:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "16290:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16290:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16290:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16227:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16235:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16243:5:8",
														"type": ""
													}
												],
												"src": "16188:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16408:272:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16454:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16456:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16456:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16456:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16429:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16438:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16425:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16425:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16450:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16421:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16421:32:8"
															},
															"nodeType": "YulIf",
															"src": "16418:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "16547:126:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16562:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16566:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16591:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16635:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16646:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16631:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16631:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16655:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16601:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16601:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16591:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16378:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16389:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16401:6:8",
														"type": ""
													}
												],
												"src": "16333:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16749:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16759:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16774:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16768:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16768:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16759:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16817:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16790:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16790:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16790:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16727:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16743:5:8",
														"type": ""
													}
												],
												"src": "16686:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16912:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16958:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16960:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16960:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16960:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16933:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16942:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16929:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16954:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16925:32:8"
															},
															"nodeType": "YulIf",
															"src": "16922:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "17051:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17066:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17080:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17070:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17095:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17141:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17152:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17137:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17137:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17161:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17105:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17105:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17095:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16882:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16893:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16905:6:8",
														"type": ""
													}
												],
												"src": "16835:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17298:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17320:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17328:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17316:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2050726573616c6520686173206e6f7420656e6465642079",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17332:34:8",
																		"type": "",
																		"value": "Presale: Presale has not ended y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17309:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17309:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17388:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17396:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17384:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17384:15:8"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17401:4:8",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17377:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17377:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17377:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17290:6:8",
														"type": ""
													}
												],
												"src": "17192:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17565:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17575:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17641:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17646:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17582:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17575:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17747:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																	"nodeType": "YulIdentifier",
																	"src": "17658:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17658:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17658:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17760:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17771:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17776:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17767:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17760:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17553:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17561:3:8",
														"type": ""
													}
												],
												"src": "17419:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17962:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17972:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17984:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17995:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17980:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17980:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17972:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18019:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18030:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18015:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18038:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18044:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18034:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18034:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18008:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18008:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18008:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18064:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18198:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18072:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18072:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18064:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17942:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17957:4:8",
														"type": ""
													}
												],
												"src": "17791:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18322:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18344:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18352:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18340:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18356:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18333:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18333:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18333:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18412:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18420:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18408:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18425:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18401:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18401:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18401:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18314:6:8",
														"type": ""
													}
												],
												"src": "18216:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18593:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18603:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18669:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18674:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18610:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18610:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18603:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18775:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "18686:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18686:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18686:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18788:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18804:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18795:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18795:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18788:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18581:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18589:3:8",
														"type": ""
													}
												],
												"src": "18447:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18990:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19000:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19012:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19023:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19008:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19008:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19000:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19047:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19058:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19043:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19043:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19066:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19072:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19062:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19036:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19036:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19036:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19092:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19226:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19100:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19100:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19092:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18970:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18985:4:8",
														"type": ""
													}
												],
												"src": "18819:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19350:203:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19372:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19380:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19368:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19368:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19384:34:8",
																		"type": "",
																		"value": "Presale: Cannot withdraw sale to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19361:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19361:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19361:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19440:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19448:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19436:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19436:15:8"
																	},
																	{
																		"hexValue": "6b656e20776974682074686973206d6574686f642c2075736520776974686472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19453:34:8",
																		"type": "",
																		"value": "ken with this method, use withdr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19429:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19429:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19429:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19509:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19517:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19505:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19505:15:8"
																	},
																	{
																		"hexValue": "617753616c65546f6b656e282920696e7374656164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19522:23:8",
																		"type": "",
																		"value": "awSaleToken() instead"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19498:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19498:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19498:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19342:6:8",
														"type": ""
													}
												],
												"src": "19244:309:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19705:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19715:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19781:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19786:2:8",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19722:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19722:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19715:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19887:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																	"nodeType": "YulIdentifier",
																	"src": "19798:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19798:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19798:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19900:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19911:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19916:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19907:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19907:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19900:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19693:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19701:3:8",
														"type": ""
													}
												],
												"src": "19559:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20102:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20112:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20124:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20135:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20120:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20120:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20112:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20159:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20170:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20155:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20155:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20178:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20174:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20174:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20148:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20148:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20148:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20204:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20338:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20212:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20212:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20204:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20082:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20097:4:8",
														"type": ""
													}
												],
												"src": "19931:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20462:206:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20484:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20492:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20480:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20480:14:8"
																	},
																	{
																		"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20496:34:8",
																		"type": "",
																		"value": "Presale: Cannot withdraw sale to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20473:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20473:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20552:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20560:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20548:15:8"
																	},
																	{
																		"hexValue": "6b656e20776974682074686973206d6574686f642c2075736520776974686472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20565:34:8",
																		"type": "",
																		"value": "ken with this method, use withdr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20541:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20541:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20541:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20621:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20629:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20617:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20617:15:8"
																	},
																	{
																		"hexValue": "6177416c6c53616c65546f6b656e282920696e7374656164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20634:26:8",
																		"type": "",
																		"value": "awAllSaleToken() instead"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20610:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20610:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20610:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20454:6:8",
														"type": ""
													}
												],
												"src": "20356:312:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20820:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20830:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20896:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20901:2:8",
																		"type": "",
																		"value": "88"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20837:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20837:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20830:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21002:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																	"nodeType": "YulIdentifier",
																	"src": "20913:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20913:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20913:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21015:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21026:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21031:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21022:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21022:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21015:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20808:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20816:3:8",
														"type": ""
													}
												],
												"src": "20674:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21217:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21227:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21239:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21250:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21235:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21235:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21227:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21274:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21285:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21270:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21270:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21293:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21299:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21289:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21289:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21263:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21263:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21263:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21319:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21453:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21327:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21327:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21319:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21197:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21212:4:8",
														"type": ""
													}
												],
												"src": "21046:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21577:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21599:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21607:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21595:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21611:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21588:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21588:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21569:6:8",
														"type": ""
													}
												],
												"src": "21471:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21805:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21815:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21881:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21886:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21822:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21822:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21815:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21987:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "21898:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21898:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21898:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22000:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22011:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22016:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22007:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22007:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22000:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21793:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21801:3:8",
														"type": ""
													}
												],
												"src": "21659:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22202:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22212:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22224:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22235:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22220:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22220:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22212:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22259:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22270:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22255:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22255:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22278:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22274:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22248:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22248:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22248:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22304:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22438:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22312:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22312:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22304:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22182:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22197:4:8",
														"type": ""
													}
												],
												"src": "22031:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22610:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22620:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22632:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22643:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22628:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22620:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22700:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22713:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22724:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22709:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22709:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22656:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22656:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22656:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22781:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22805:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22790:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22737:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22737:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22737:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22863:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22876:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22887:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22872:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22819:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22819:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22819:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22566:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22578:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22586:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22594:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22605:4:8",
														"type": ""
													}
												],
												"src": "22456:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22944:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22998:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23007:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23010:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23000:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23000:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23000:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22967:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22989:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "22974:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22974:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22964:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22964:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22957:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22957:40:8"
															},
															"nodeType": "YulIf",
															"src": "22954:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22937:5:8",
														"type": ""
													}
												],
												"src": "22904:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23086:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23096:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "23111:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23105:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23105:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23096:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23151:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "23127:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23127:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23127:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23064:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23072:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23080:5:8",
														"type": ""
													}
												],
												"src": "23026:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23243:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23289:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "23291:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23291:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23291:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23264:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23273:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23260:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23260:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23285:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23256:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23256:32:8"
															},
															"nodeType": "YulIf",
															"src": "23253:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "23382:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23397:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23411:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23401:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23426:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "23469:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "23480:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23465:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23465:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23489:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "23436:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23436:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23426:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23213:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23224:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23236:6:8",
														"type": ""
													}
												],
												"src": "23169:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23626:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23648:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23656:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23644:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23644:14:8"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23660:34:8",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23637:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23637:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23716:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23724:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23712:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23729:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23705:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23705:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23705:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23618:6:8",
														"type": ""
													}
												],
												"src": "23520:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23901:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23911:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23977:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23982:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23918:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23918:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23911:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24083:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "23994:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23994:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23994:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24096:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24107:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24112:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24103:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24103:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24096:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23889:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23897:3:8",
														"type": ""
													}
												],
												"src": "23755:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24298:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24308:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24320:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24331:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24316:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24308:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24355:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24366:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24351:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24374:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24380:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24370:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24370:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24344:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24344:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24400:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24534:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24408:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24408:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24400:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24278:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24293:4:8",
														"type": ""
													}
												],
												"src": "24127:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24658:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24680:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24688:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24676:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24676:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24692:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24669:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24669:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24748:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24756:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24744:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24744:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24761:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24737:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24737:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24737:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24650:6:8",
														"type": ""
													}
												],
												"src": "24552:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24929:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24939:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25005:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25010:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24946:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24946:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24939:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25111:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "25022:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25022:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25022:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25124:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25135:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25140:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25131:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25131:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25124:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24917:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24925:3:8",
														"type": ""
													}
												],
												"src": "24783:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25326:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25336:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25348:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25359:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25344:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25344:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25336:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25383:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25394:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25379:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25402:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25408:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25398:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25398:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25372:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25372:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25428:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25562:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25436:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25436:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25428:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25306:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25321:4:8",
														"type": ""
													}
												],
												"src": "25155:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25638:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25649:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25665:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25659:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25659:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25649:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25621:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25631:6:8",
														"type": ""
													}
												],
												"src": "25580:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25797:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25807:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25822:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25807:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25769:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25774:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25785:11:8",
														"type": ""
													}
												],
												"src": "25684:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25899:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25909:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25918:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25913:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25978:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26003:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26008:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25999:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25999:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26022:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26027:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26018:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26018:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26012:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26012:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25992:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25992:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25992:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25939:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25942:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25936:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25936:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25950:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25952:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25961:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25964:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25957:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25957:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25952:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25932:3:8",
																"statements": []
															},
															"src": "25928:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26061:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26066:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26057:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26057:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26075:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26050:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26050:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26050:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25881:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25886:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25891:6:8",
														"type": ""
													}
												],
												"src": "25837:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26197:278:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26207:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26253:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26221:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26221:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26211:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26268:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26351:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26356:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26275:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26275:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26268:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26411:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26418:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26407:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26407:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26425:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26430:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26372:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26372:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26372:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26446:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26457:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26462:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26453:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26453:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26446:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26178:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26185:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26193:3:8",
														"type": ""
													}
												],
												"src": "26089:386:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26615:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26626:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26713:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26722:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26633:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26633:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26626:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26736:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26743:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26736:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26594:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26600:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26611:3:8",
														"type": ""
													}
												],
												"src": "26481:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26864:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26886:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26894:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26882:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26882:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26898:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26875:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26875:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26856:6:8",
														"type": ""
													}
												],
												"src": "26758:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27089:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27099:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27165:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27170:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27106:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27106:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27099:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27271:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "27182:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27182:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27182:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27284:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27295:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27300:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27291:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27291:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27284:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27077:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27085:3:8",
														"type": ""
													}
												],
												"src": "26943:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27486:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27496:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27508:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27519:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27504:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27504:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27496:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27543:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27554:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27539:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27539:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27562:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27568:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27558:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27532:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27532:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27532:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27588:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27722:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27596:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27596:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27588:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27466:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27481:4:8",
														"type": ""
													}
												],
												"src": "27315:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27799:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27810:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27826:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27820:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27820:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27810:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27782:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27792:6:8",
														"type": ""
													}
												],
												"src": "27740:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27893:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27903:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27921:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27928:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27917:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27917:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27937:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "27933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27933:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27913:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27913:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27903:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27876:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "27886:6:8",
														"type": ""
													}
												],
												"src": "27845:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28045:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28055:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28102:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28069:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28069:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28059:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28117:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28183:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28188:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28124:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28124:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28117:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28243:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28250:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28239:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28257:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28262:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28204:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28204:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28204:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28278:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28289:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28316:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28294:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28294:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28285:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28285:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28278:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28026:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28033:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28041:3:8",
														"type": ""
													}
												],
												"src": "27953:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28454:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28464:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28476:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28487:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28472:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28472:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28464:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28511:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28522:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28507:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28530:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28536:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28526:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28526:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28500:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28500:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28556:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28628:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28637:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28564:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28564:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28556:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28426:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28438:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28449:4:8",
														"type": ""
													}
												],
												"src": "28336:313:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has not started\")\n\n        mstore(add(memPtr, 32), \" yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Total Token Sale Reache\")\n\n        mstore(add(memPtr, 32), \"d!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token amount below min \")\n\n        mstore(add(memPtr, 32), \"buy limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Amount below min buy li\")\n\n        mstore(add(memPtr, 32), \"mit\")\n\n    }\n\n    function abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Sale token cannot be ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Total tokens for sale c\")\n\n        mstore(add(memPtr, 32), \"annot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Presale has not ended y\")\n\n        mstore(add(memPtr, 32), \"et\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Cannot withdraw sale to\")\n\n        mstore(add(memPtr, 32), \"ken with this method, use withdr\")\n\n        mstore(add(memPtr, 64), \"awSaleToken() instead\")\n\n    }\n\n    function abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 85)\n        store_literal_in_memory_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Cannot withdraw sale to\")\n\n        mstore(add(memPtr, 32), \"ken with this method, use withdr\")\n\n        mstore(add(memPtr, 64), \"awAllSaleToken() instead\")\n\n    }\n\n    function abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 88)\n        store_literal_in_memory_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101c25760003560e01c8063715018a6116100f7578063ace1741c11610095578063f2fde38b11610064578063f2fde38b146105f9578063f3fef3a314610622578063fa09e6301461064b578063fb00f3fc14610674576101c2565b8063ace1741c1461054f578063b81df7421461057a578063ded441c2146105a5578063e985e367146105ce576101c2565b80638ce0b9d2116100d15780638ce0b9d2146104935780638da5cb5b146104d057806399b77032146104fb578063a82524b214610524576101c2565b8063715018a61461042a578063757765f81461044157806389e6ce1e1461046a576101c2565b80633f6f7ed61161016457806363b201171161013e57806363b201171461038d57806368f8fc10146103b85780636aa5b37f146103d45780636bcedf9c146103ff576101c2565b80633f6f7ed614610312578063444ad5ee1461033b5780635b10bd6a14610364576101c2565b8063226ac321116101a0578063226ac3211461026a578063249b7c19146102935780632c4e722e146102be5780633c00a36c146102e9576101c2565b80630fabdd44146101c7578063115ece4c146101f0578063204120bc1461022d575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190611bd7565b61068b565b005b3480156101fc57600080fd5b5061021760048036038101906102129190611c62565b6106a8565b6040516102249190611cb1565b60405180910390f35b34801561023957600080fd5b50610254600480360381019061024f9190611ccc565b61086b565b6040516102619190611cb1565b60405180910390f35b34801561027657600080fd5b50610291600480360381019061028c9190611c62565b610883565b005b34801561029f57600080fd5b506102a8610998565b6040516102b59190611cb1565b60405180910390f35b3480156102ca57600080fd5b506102d361099e565b6040516102e09190611cb1565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190611bd7565b6109a4565b005b34801561031e57600080fd5b5061033960048036038101906103349190611bd7565b6109f6565b005b34801561034757600080fd5b50610362600480360381019061035d9190611c62565b610a08565b005b34801561037057600080fd5b5061038b60048036038101906103869190611bd7565b610ae9565b005b34801561039957600080fd5b506103a2610b0f565b6040516103af9190611cb1565b60405180910390f35b6103d260048036038101906103cd9190611c62565b610b15565b005b3480156103e057600080fd5b506103e9610ede565b6040516103f69190611cb1565b60405180910390f35b34801561040b57600080fd5b50610414610ee4565b6040516104219190611cb1565b60405180910390f35b34801561043657600080fd5b5061043f610eea565b005b34801561044d57600080fd5b5061046860048036038101906104639190611bd7565b610efe565b005b34801561047657600080fd5b50610491600480360381019061048c9190611c62565b610f10565b005b34801561049f57600080fd5b506104ba60048036038101906104b59190611ccc565b6111d3565b6040516104c79190611d14565b60405180910390f35b3480156104dc57600080fd5b506104e56111f3565b6040516104f29190611d3e565b60405180910390f35b34801561050757600080fd5b50610522600480360381019061051d9190611bd7565b61121c565b005b34801561053057600080fd5b5061053961122e565b6040516105469190611cb1565b60405180910390f35b34801561055b57600080fd5b50610564611234565b6040516105719190611cb1565b60405180910390f35b34801561058657600080fd5b5061058f61123a565b60405161059c9190611cb1565b60405180910390f35b3480156105b157600080fd5b506105cc60048036038101906105c79190611bd7565b611240565b005b3480156105da57600080fd5b506105e36112dd565b6040516105f09190611d3e565b60405180910390f35b34801561060557600080fd5b50610620600480360381019061061b9190611ccc565b611303565b005b34801561062e57600080fd5b5061064960048036038101906106449190611c62565b611386565b005b34801561065757600080fd5b50610672600480360381019061066d9190611ccc565b61144d565b005b34801561068057600080fd5b50610689611571565b005b6106936116ae565b804261069f9190611d88565b600a8190555050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461082557600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661076b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076290611e19565b60405180910390fd5b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036107b957600061081e565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600354600a6108089190611f6c565b846108139190611fb7565b61081d9190612028565b5b9050610861565b60006001540361083657600061085e565b600154600354600a6108489190611f6c565b846108539190611fb7565b61085d9190612028565b5b90505b8091505092915050565b60086020528060005260406000206000915090505481565b61088b6116ae565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611e19565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a828260405161098c929190612059565b60405180910390a15050565b600a5481565b60015481565b6109ac6116ae565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109f2573d6000803e3d6000fd5b5050565b6109fe6116ae565b8060018190555050565b610a106116ae565b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c8282604051610add929190612059565b60405180910390a15050565b610af16116ae565b4260098190555080600954610b069190611d88565b600a8190555050565b600b5481565b600954421015610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b51906120f4565b60405180910390fd5b600a544210610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9590612160565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be357610bde6000346106a8565b610bee565b610bed83836106a8565b5b905060045481600b54610c019190611d88565b1115610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c39906121f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0d57600654811015610cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb290612284565b60405180910390fd5b610d083382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b610e59565b600654811015610d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4990612316565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd590611e19565b60405180910390fd5b610e0b3330848673ffffffffffffffffffffffffffffffffffffffff166117b2909392919063ffffffff16565b610e583382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b5b80600b6000828254610e6b9190611d88565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c8484604051610ed1929190612336565b60405180910390a3505050565b60055481565b60045481565b610ef26116ae565b610efc600061183b565b565b610f066116ae565b8060058190555050565b610f186116ae565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e906123d1565b60405180910390fd5b60008111610fca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc190612463565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109c91906124bc565b60ff166003819055506110f4333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117b2909392919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161114f9190611d3e565b602060405180830381865afa15801561116c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119091906124fe565b6004819055507f03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a82826040516111c7929190612059565b60405180910390a15050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6112246116ae565b8060068190555050565b60095481565b60035481565b60065481565b6112486116ae565b600a5442101561128d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112849061259d565b60405180910390fd5b6112da3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61130b6116ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361137a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113719061262f565b60405180910390fd5b6113838161183b565b50565b61138e6116ae565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361141e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611415906126e7565b60405180910390fd5b61144933828473ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b5050565b6114556116ae565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc9061279f565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115209190611d3e565b602060405180830381865afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156191906124fe565b905061156d8282611386565b5050565b6115796116ae565b600a544210156115be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b59061259d565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161161b9190611d3e565b602060405180830381865afa158015611638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165c91906124fe565b90506116ab3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661172c9092919063ffffffff16565b50565b6116b66118ff565b73ffffffffffffffffffffffffffffffffffffffff166116d46111f3565b73ffffffffffffffffffffffffffffffffffffffff161461172a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117219061280b565b60405180910390fd5b565b6117ad8363a9059cbb60e01b848460405160240161174b929190612059565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611907565b505050565b611835846323b872dd60e01b8585856040516024016117d39392919061282b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611907565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000611969826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119cf9092919063ffffffff16565b905060008151148061198b57508080602001905181019061198a919061288e565b5b6119ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c19061292d565b60405180910390fd5b505050565b60606119de84846000856119e7565b90509392505050565b606082471015611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a23906129bf565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611a559190612a50565b60006040518083038185875af1925050503d8060008114611a92576040519150601f19603f3d011682016040523d82523d6000602084013e611a97565b606091505b5091509150611aa887838387611ab4565b92505050949350505050565b60608315611b16576000835103611b0e57611ace85611b29565b611b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0490612ab3565b60405180910390fd5b5b829050611b21565b611b208383611b4c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611b5f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b939190612b28565b60405180910390fd5b600080fd5b6000819050919050565b611bb481611ba1565b8114611bbf57600080fd5b50565b600081359050611bd181611bab565b92915050565b600060208284031215611bed57611bec611b9c565b5b6000611bfb84828501611bc2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c2f82611c04565b9050919050565b611c3f81611c24565b8114611c4a57600080fd5b50565b600081359050611c5c81611c36565b92915050565b60008060408385031215611c7957611c78611b9c565b5b6000611c8785828601611c4d565b9250506020611c9885828601611bc2565b9150509250929050565b611cab81611ba1565b82525050565b6000602082019050611cc66000830184611ca2565b92915050565b600060208284031215611ce257611ce1611b9c565b5b6000611cf084828501611c4d565b91505092915050565b60008115159050919050565b611d0e81611cf9565b82525050565b6000602082019050611d296000830184611d05565b92915050565b611d3881611c24565b82525050565b6000602082019050611d536000830184611d2f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d9382611ba1565b9150611d9e83611ba1565b9250828201905080821115611db657611db5611d59565b5b92915050565b600082825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f742077686974656c69737465640000600082015250565b6000611e03601e83611dbc565b9150611e0e82611dcd565b602082019050919050565b60006020820190508181036000830152611e3281611df6565b9050919050565b60008160011c9050919050565b6000808291508390505b6001851115611e9057808604811115611e6c57611e6b611d59565b5b6001851615611e7b5780820291505b8081029050611e8985611e39565b9450611e50565b94509492505050565b600082611ea95760019050611f65565b81611eb75760009050611f65565b8160018114611ecd5760028114611ed757611f06565b6001915050611f65565b60ff841115611ee957611ee8611d59565b5b8360020a915084821115611f0057611eff611d59565b5b50611f65565b5060208310610133831016604e8410600b8410161715611f3b5782820a905083811115611f3657611f35611d59565b5b611f65565b611f488484846001611e46565b92509050818404811115611f5f57611f5e611d59565b5b81810290505b9392505050565b6000611f7782611ba1565b9150611f8283611ba1565b9250611faf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e99565b905092915050565b6000611fc282611ba1565b9150611fcd83611ba1565b9250828202611fdb81611ba1565b91508282048414831517611ff257611ff1611d59565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061203382611ba1565b915061203e83611ba1565b92508261204e5761204d611ff9565b5b828204905092915050565b600060408201905061206e6000830185611d2f565b61207b6020830184611ca2565b9392505050565b7f50726573616c653a2050726573616c6520686173206e6f74207374617274656460008201527f2079657400000000000000000000000000000000000000000000000000000000602082015250565b60006120de602483611dbc565b91506120e982612082565b604082019050919050565b6000602082019050818103600083015261210d816120d1565b9050919050565b7f50726573616c653a2050726573616c652068617320656e646564000000000000600082015250565b600061214a601a83611dbc565b915061215582612114565b602082019050919050565b600060208201905081810360008301526121798161213d565b9050919050565b7f50726573616c653a20546f74616c20546f6b656e2053616c652052656163686560008201527f6421000000000000000000000000000000000000000000000000000000000000602082015250565b60006121dc602283611dbc565b91506121e782612180565b604082019050919050565b6000602082019050818103600083015261220b816121cf565b9050919050565b7f50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e2060008201527f627579206c696d69740000000000000000000000000000000000000000000000602082015250565b600061226e602983611dbc565b915061227982612212565b604082019050919050565b6000602082019050818103600083015261229d81612261565b9050919050565b7f50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c6960008201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b6000612300602383611dbc565b915061230b826122a4565b604082019050919050565b6000602082019050818103600083015261232f816122f3565b9050919050565b600060408201905061234b6000830185611ca2565b6123586020830184611ca2565b9392505050565b7f50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006123bb602a83611dbc565b91506123c68261235f565b604082019050919050565b600060208201905081810360008301526123ea816123ae565b9050919050565b7f50726573616c653a20546f74616c20746f6b656e7320666f722073616c65206360008201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000602082015250565b600061244d602d83611dbc565b9150612458826123f1565b604082019050919050565b6000602082019050818103600083015261247c81612440565b9050919050565b600060ff82169050919050565b61249981612483565b81146124a457600080fd5b50565b6000815190506124b681612490565b92915050565b6000602082840312156124d2576124d1611b9c565b5b60006124e0848285016124a7565b91505092915050565b6000815190506124f881611bab565b92915050565b60006020828403121561251457612513611b9c565b5b6000612522848285016124e9565b91505092915050565b7f50726573616c653a2050726573616c6520686173206e6f7420656e646564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000612587602283611dbc565b91506125928261252b565b604082019050919050565b600060208201905081810360008301526125b68161257a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612619602683611dbc565b9150612624826125bd565b604082019050919050565b600060208201905081810360008301526126488161260c565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f617753616c65546f6b656e282920696e73746561640000000000000000000000604082015250565b60006126d1605583611dbc565b91506126dc8261264f565b606082019050919050565b60006020820190508181036000830152612700816126c4565b9050919050565b7f50726573616c653a2043616e6e6f742077697468647261772073616c6520746f60008201527f6b656e20776974682074686973206d6574686f642c207573652077697468647260208201527f6177416c6c53616c65546f6b656e282920696e73746561640000000000000000604082015250565b6000612789605883611dbc565b915061279482612707565b606082019050919050565b600060208201905081810360008301526127b88161277c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127f5602083611dbc565b9150612800826127bf565b602082019050919050565b60006020820190508181036000830152612824816127e8565b9050919050565b60006060820190506128406000830186611d2f565b61284d6020830185611d2f565b61285a6040830184611ca2565b949350505050565b61286b81611cf9565b811461287657600080fd5b50565b60008151905061288881612862565b92915050565b6000602082840312156128a4576128a3611b9c565b5b60006128b284828501612879565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612917602a83611dbc565b9150612922826128bb565b604082019050919050565b600060208201905081810360008301526129468161290a565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129a9602683611dbc565b91506129b48261294d565b604082019050919050565b600060208201905081810360008301526129d88161299c565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612a135780820151818401526020810190506129f8565b60008484015250505050565b6000612a2a826129df565b612a3481856129ea565b9350612a448185602086016129f5565b80840191505092915050565b6000612a5c8284612a1f565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a9d601d83611dbc565b9150612aa882612a67565b602082019050919050565b60006020820190508181036000830152612acc81612a90565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612afa82612ad3565b612b048185611dbc565b9350612b148185602086016129f5565b612b1d81612ade565b840191505092915050565b60006020820190508181036000830152612b428184612aef565b90509291505056fea264697066735822122047fb47b139e46bce3b010c1d12cee81698fa9dd4c0a89923969cd0d2bae7b8b764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xACE1741C GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xFB00F3FC EQ PUSH2 0x674 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xACE1741C EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xB81DF742 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xDED441C2 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x5CE JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8CE0B9D2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8CE0B9D2 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x99B77032 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x524 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x757765F8 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x89E6CE1E EQ PUSH2 0x46A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x6AA5B37F EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x3FF JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x3F6F7ED6 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x444AD5EE EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x5B10BD6A EQ PUSH2 0x364 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x226AC321 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x226AC321 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x2E9 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xFABDD44 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xEEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x121C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x539 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x564 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58F PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E3 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x620 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x1303 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x649 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1386 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x689 PUSH2 0x1571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x693 PUSH2 0x16AE JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x825 JUMPI PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x7B9 JUMPI PUSH1 0x0 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST DUP5 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x836 JUMPI PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST DUP5 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x2028 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9AC PUSH2 0x16AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xADD SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xAF1 PUSH2 0x16AE JUMP JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 SLOAD PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE3 JUMPI PUSH2 0xBDE PUSH1 0x0 CALLVALUE PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xBED DUP4 DUP4 PUSH2 0x6A8 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0xB SLOAD PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST GT ISZERO PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0D JUMPI PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB2 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD08 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD49 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0B CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE58 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEF2 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0xEFC PUSH1 0x0 PUSH2 0x183B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF06 PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7E SWAP1 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10F4 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1224 PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1248 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1284 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12DA CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x130B PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x183B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x138E PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1449 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1455 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DC SWAP1 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP PUSH2 0x156D DUP3 DUP3 PUSH2 0x1386 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x15BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B5 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP PUSH2 0x16AB CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16B6 PUSH2 0x18FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16D4 PUSH2 0x11F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1721 SWAP1 PUSH2 0x280B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17AD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x174B SWAP3 SWAP2 SWAP1 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1835 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1907 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1969 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x198B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x198A SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST JUMPDEST PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C1 SWAP1 PUSH2 0x292D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19DE DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19E7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A23 SWAP1 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2A50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1AA8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B16 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1B0E JUMPI PUSH2 0x1ACE DUP6 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x1B0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B04 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B20 DUP4 DUP4 PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1B5F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B93 SWAP2 SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB4 DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD1 DUP2 PUSH2 0x1BAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BEC PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFB DUP5 DUP3 DUP6 ADD PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2F DUP3 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5C DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C98 DUP6 DUP3 DUP7 ADD PUSH2 0x1BC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAB DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0E DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D53 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D93 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9E DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F742077686974656C69737465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E03 PUSH1 0x1E DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0E DUP3 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E32 DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E90 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E7B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E89 DUP6 PUSH2 0x1E39 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E50 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EA9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F65 JUMP JUMPDEST DUP2 PUSH2 0x1EB7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F65 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1ECD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1ED7 JUMPI PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EFF PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F65 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F3B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F36 JUMPI PUSH2 0x1F35 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1F48 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F5F JUMPI PUSH2 0x1F5E PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FAF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FDB DUP2 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1D59 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2033 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x203E DUP4 PUSH2 0x1BA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x207B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2079657400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DE PUSH1 0x24 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x20E9 DUP3 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210D DUP2 PUSH2 0x20D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C652068617320656E646564000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH1 0x1A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2179 DUP2 PUSH2 0x213D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6421000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DC PUSH1 0x22 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x21E7 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220B DUP2 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x627579206C696D69740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226E PUSH1 0x29 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2279 DUP3 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229D DUP2 PUSH2 0x2261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2300 PUSH1 0x23 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x230B DUP3 PUSH2 0x22A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232F DUP2 PUSH2 0x22F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x234B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x2358 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BB PUSH1 0x2A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x23C6 DUP3 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23EA DUP2 PUSH2 0x23AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E6E6F74206265207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244D PUSH1 0x2D DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2458 DUP3 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247C DUP2 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2499 DUP2 PUSH2 0x2483 JUMP JUMPDEST DUP2 EQ PUSH2 0x24A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B6 DUP2 PUSH2 0x2490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E0 DUP5 DUP3 DUP6 ADD PUSH2 0x24A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F8 DUP2 PUSH2 0x1BAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2514 JUMPI PUSH2 0x2513 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2522 DUP5 DUP3 DUP6 ADD PUSH2 0x24E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726573616C6520686173206E6F7420656E6465642079 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2587 PUSH1 0x22 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2592 DUP3 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B6 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2619 PUSH1 0x26 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2624 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2648 DUP2 PUSH2 0x260C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x617753616C65546F6B656E282920696E73746561640000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D1 PUSH1 0x55 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x26DC DUP3 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2700 DUP2 PUSH2 0x26C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2043616E6E6F742077697468647261772073616C6520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20776974682074686973206D6574686F642C2075736520776974686472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6177416C6C53616C65546F6B656E282920696E73746561640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 PUSH1 0x58 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2794 DUP3 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 PUSH2 0x277C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F5 PUSH1 0x20 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2800 DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2824 DUP2 PUSH2 0x27E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2840 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x284D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x285A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CA2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x286B DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2888 DUP2 PUSH2 0x2862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A4 JUMPI PUSH2 0x28A3 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28B2 DUP5 DUP3 DUP6 ADD PUSH2 0x2879 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2917 PUSH1 0x2A DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2922 DUP3 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2946 DUP2 PUSH2 0x290A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A9 PUSH1 0x26 DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x29B4 DUP3 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29D8 DUP2 PUSH2 0x299C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A13 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2A DUP3 PUSH2 0x29DF JUMP JUMPDEST PUSH2 0x2A34 DUP2 DUP6 PUSH2 0x29EA JUMP JUMPDEST SWAP4 POP PUSH2 0x2A44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5C DUP3 DUP5 PUSH2 0x2A1F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9D PUSH1 0x1D DUP4 PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA8 DUP3 PUSH2 0x2A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ACC DUP2 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFA DUP3 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x2B04 DUP2 DUP6 PUSH2 0x1DBC JUMP JUMPDEST SWAP4 POP PUSH2 0x2B14 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F5 JUMP JUMPDEST PUSH2 0x2B1D DUP2 PUSH2 0x2ADE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B42 DUP2 DUP5 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xFB SELFBALANCE 0xB1 CODECOPY 0xE4 PUSH12 0xCE3B010C1D12CEE81698FA9D 0xD4 0xC0 0xA8 SWAP10 0x23 SWAP7 SWAP13 0xD0 0xD2 0xBA 0xE7 0xB8 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "262:6381:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3545:545;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3283:254;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;759:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6533:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2965:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2604:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;795:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4096:1082;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;523:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;5298:108:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:740;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;587:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5184:108:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5463:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;424:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5943:251:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6201:283;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5680:196;;;;;;;;;;;;;:::i;:::-;;2815:144;1094:13:0;:11;:13::i;:::-;2937:15:7::1;2919;:33;;;;:::i;:::-;2902:14;:50;;;;2815:144:::0;:::o;3545:545::-;3643:7;3662:14;3707:1;3690:19;;:5;:19;;;3686:375;;3733:7;:14;3741:5;3733:14;;;;;;;;;;;;;;;;;;;;;;;;;3725:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3828:1;3806:11;:18;3818:5;3806:18;;;;;;;;;;;;;;;;:23;:116;;3921:1;3806:116;;;3883:11;:18;3895:5;3883:18;;;;;;;;;;;;;;;;3865:12;;3859:2;:18;;;;:::i;:::-;3849:6;:29;;;;:::i;:::-;3848:54;;;;:::i;:::-;3806:116;3797:125;;3686:375;;;3970:1;3962:4;;:9;:88;;4049:1;3962:88;;;4025:4;;4007:12;;4001:2;:18;;;;:::i;:::-;3991:6;:29;;;;:::i;:::-;3990:40;;;;:::i;:::-;3962:88;3953:97;;3686:375;4077:6;4070:13;;;3545:545;;;;:::o;632:46::-;;;;;;;;;;;;;;;;;:::o;3283:254::-;1094:13:0;:11;:13::i;:::-;3399:7:7::1;:15;3407:6;3399:15;;;;;;;;;;;;;;;;;;;;;;;;;3391:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3481:6;3459:11;:19;3471:6;3459:19;;;;;;;;;;;;;;;:28;;;;3502;3515:6;3523;3502:28;;;;;;;:::i;:::-;;;;;;;;3283:254:::0;;:::o;759:29::-;;;;:::o;369:19::-;;;;:::o;6533:108::-;1094:13:0;:11;:13::i;:::-;6609:10:7::1;6601:28;;:33;6630:3;6601:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6533:108:::0;:::o;3191:86::-;1094:13:0;:11;:13::i;:::-;3265:5:7::1;3258:4;:12;;;;3191:86:::0;:::o;2965:220::-;1094:13:0;:11;:13::i;:::-;3095:4:7::1;3077:7;:15;3085:6;3077:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3131:6;3109:11;:19;3121:6;3109:19;;;;;;;;;;;;;;;:28;;;;3152:26;3163:6;3171;3152:26;;;;;;;:::i;:::-;;;;;;;;2965:220:::0;;:::o;2604:205::-;1094:13:0;:11;:13::i;:::-;2726:15:7::1;2707:16;:34;;;;2787:15;2768:16;;:34;;;;:::i;:::-;2751:14;:51;;;;2604:205:::0;:::o;795:30::-;;;;:::o;4096:1082::-;1414:16;;1395:15;:35;;1374:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;1594:14:::1;;1576:15;:32;1555:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4232:20:::2;4273:1:::0;4255:20:::2;;:6;:20;;::::0;:118:::2;;4336:37;4359:1;4363:9;4336:14;:37::i;:::-;4255:118;;;4290:31;4305:6;4313:7;4290:14;:31::i;:::-;4255:118;4232:141;;4441:18;;4424:12;4406:15;;:30;;;;:::i;:::-;4405:54;;4384:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;4552:1;4534:20;;:6;:20;;::::0;4530:531:::2;;4594:11;;4578:12;:27;;4570:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4665:56;4696:10;4708:12;4672:9;;;;;;;;;;;4665:30;;;;:56;;;;;:::i;:::-;4530:531;;;4776:11;;4760:12;:27;;4752:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4849:7;:15;4857:6;4849:15;;;;;;;;;;;;;;;;;;;;;;;;;4841:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4913:67;4945:10;4965:4;4972:7;4920:6;4913:31;;;;:67;;;;;;:::i;:::-;4994:56;5025:10;5037:12;5001:9;;;;;;;;;;;4994:30;;;;:56;;;;;:::i;:::-;4530:531;5089:12;5070:15;;:31;;;;;;;:::i;:::-;;;;;;;;5141:6;5116:55;;5129:10;5116:55;;;5149:7;5158:12;5116:55;;;;;;;:::i;:::-;;;;;;;;4221:957;4096:1082:::0;;:::o;523:26::-;;;;:::o;484:33::-;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;5298:108:7:-;1094:13:0;:11;:13::i;:::-;5387:12:7::1;5373:11;:26;;;;5298:108:::0;:::o;1858:740::-;1094:13:0;:11;:13::i;:::-;2029:1:7::1;2007:24;;:10;:24;;::::0;1986:113:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2152:1;2130:19;:23;2109:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2246:10;2234:9;;:22;;;;;;;;;;;;;;;;;;2296:9;;;;;;;;;;;2281:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2266:51;;:12;:51;;;;2328:128;2376:10;2408:4;2427:19;2335:9;;;;;;;;;;;2328:34;;;;:128;;;;;;:::i;:::-;2494:9;;;;;;;;;;;2487:27;;;2523:4;2487:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:18;:63;;;;2544:47;2559:10;2571:19;2544:47;;;;;;;:::i;:::-;;;;;;;;1858:740:::0;;:::o;587:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;5184:108:7:-;1094:13:0;:11;:13::i;:::-;5273:12:7::1;5259:11;:26;;;;5184:108:::0;:::o;722:31::-;;;;:::o;454:24::-;;;;:::o;555:26::-;;;;:::o;5463:146::-;1094:13:0;:11;:13::i;:::-;1760:14:7::1;;1741:15;:33;;1720:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;5551:51:::2;5582:10;5594:7;5558:9;;;;;;;;;;;5551:30;;;;:51;;;;;:::i;:::-;5463:146:::0;:::o;424:24::-;;;;;;;;;;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;5943:251:7:-;1094:13:0;:11;:13::i;:::-;6035:9:7::1;;;;;;;;;;;6026:18;;:5;:18;;::::0;6018:116:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6144:43;6171:10;6183:3;6151:5;6144:26;;;;:43;;;;;:::i;:::-;5943:251:::0;;:::o;6201:283::-;1094:13:0;:11;:13::i;:::-;6283:9:7::1;;;;;;;;;;;6274:18;;:5;:18;;::::0;6266:119:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6395:11;6416:5;6409:23;;;6441:4;6409:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6395:52;;6457:20;6466:5;6473:3;6457:8;:20::i;:::-;6256:228;6201:283:::0;:::o;5680:196::-;1094:13:0;:11;:13::i;:::-;1760:14:7::1;;1741:15;:33;;1720:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;5756:11:::2;5777:9;;;;;;;;;;;5770:27;;;5806:4;5770:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5756:56;;5822:47;5853:10;5865:3;5829:9;;;;;;;;;;;5822:30;;;;:47;;;;;:::i;:::-;5746:130;5680:196::o:0;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;941:175:4:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;1355:203::-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;5196:642:4:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:5:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:8;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:474::-;1600:6;1608;1657:2;1645:9;1636:7;1632:23;1628:32;1625:119;;;1663:79;;:::i;:::-;1625:119;1783:1;1808:53;1853:7;1844:6;1833:9;1829:22;1808:53;:::i;:::-;1798:63;;1754:117;1910:2;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1881:118;1532:474;;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:90::-;2733:7;2776:5;2769:13;2762:21;2751:32;;2699:90;;;:::o;2795:109::-;2876:21;2891:5;2876:21;:::i;:::-;2871:3;2864:34;2795:109;;:::o;2910:210::-;2997:4;3035:2;3024:9;3020:18;3012:26;;3048:65;3110:1;3099:9;3095:17;3086:6;3048:65;:::i;:::-;2910:210;;;;:::o;3126:118::-;3213:24;3231:5;3213:24;:::i;:::-;3208:3;3201:37;3126:118;;:::o;3250:222::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3250:222;;;;:::o;3478:180::-;3526:77;3523:1;3516:88;3623:4;3620:1;3613:15;3647:4;3644:1;3637:15;3664:191;3704:3;3723:20;3741:1;3723:20;:::i;:::-;3718:25;;3757:20;3775:1;3757:20;:::i;:::-;3752:25;;3800:1;3797;3793:9;3786:16;;3821:3;3818:1;3815:10;3812:36;;;3828:18;;:::i;:::-;3812:36;3664:191;;;;:::o;3861:169::-;3945:11;3979:6;3974:3;3967:19;4019:4;4014:3;4010:14;3995:29;;3861:169;;;;:::o;4036:180::-;4176:32;4172:1;4164:6;4160:14;4153:56;4036:180;:::o;4222:366::-;4364:3;4385:67;4449:2;4444:3;4385:67;:::i;:::-;4378:74;;4461:93;4550:3;4461:93;:::i;:::-;4579:2;4574:3;4570:12;4563:19;;4222:366;;;:::o;4594:419::-;4760:4;4798:2;4787:9;4783:18;4775:26;;4847:9;4841:4;4837:20;4833:1;4822:9;4818:17;4811:47;4875:131;5001:4;4875:131;:::i;:::-;4867:139;;4594:419;;;:::o;5019:102::-;5061:8;5108:5;5105:1;5101:13;5080:34;;5019:102;;;:::o;5127:848::-;5188:5;5195:4;5219:6;5210:15;;5243:5;5234:14;;5257:712;5278:1;5268:8;5265:15;5257:712;;;5373:4;5368:3;5364:14;5358:4;5355:24;5352:50;;;5382:18;;:::i;:::-;5352:50;5432:1;5422:8;5418:16;5415:451;;;5847:4;5840:5;5836:16;5827:25;;5415:451;5897:4;5891;5887:15;5879:23;;5927:32;5950:8;5927:32;:::i;:::-;5915:44;;5257:712;;;5127:848;;;;;;;:::o;5981:1073::-;6035:5;6226:8;6216:40;;6247:1;6238:10;;6249:5;;6216:40;6275:4;6265:36;;6292:1;6283:10;;6294:5;;6265:36;6361:4;6409:1;6404:27;;;;6445:1;6440:191;;;;6354:277;;6404:27;6422:1;6413:10;;6424:5;;;6440:191;6485:3;6475:8;6472:17;6469:43;;;6492:18;;:::i;:::-;6469:43;6541:8;6538:1;6534:16;6525:25;;6576:3;6569:5;6566:14;6563:40;;;6583:18;;:::i;:::-;6563:40;6616:5;;;6354:277;;6740:2;6730:8;6727:16;6721:3;6715:4;6712:13;6708:36;6690:2;6680:8;6677:16;6672:2;6666:4;6663:12;6659:35;6643:111;6640:246;;;6796:8;6790:4;6786:19;6777:28;;6831:3;6824:5;6821:14;6818:40;;;6838:18;;:::i;:::-;6818:40;6871:5;;6640:246;6911:42;6949:3;6939:8;6933:4;6930:1;6911:42;:::i;:::-;6896:57;;;;6985:4;6980:3;6976:14;6969:5;6966:25;6963:51;;;6994:18;;:::i;:::-;6963:51;7043:4;7036:5;7032:16;7023:25;;5981:1073;;;;;;:::o;7060:285::-;7120:5;7144:23;7162:4;7144:23;:::i;:::-;7136:31;;7188:27;7206:8;7188:27;:::i;:::-;7176:39;;7234:104;7271:66;7261:8;7255:4;7234:104;:::i;:::-;7225:113;;7060:285;;;;:::o;7351:410::-;7391:7;7414:20;7432:1;7414:20;:::i;:::-;7409:25;;7448:20;7466:1;7448:20;:::i;:::-;7443:25;;7503:1;7500;7496:9;7525:30;7543:11;7525:30;:::i;:::-;7514:41;;7704:1;7695:7;7691:15;7688:1;7685:22;7665:1;7658:9;7638:83;7615:139;;7734:18;;:::i;:::-;7615:139;7399:362;7351:410;;;;:::o;7767:180::-;7815:77;7812:1;7805:88;7912:4;7909:1;7902:15;7936:4;7933:1;7926:15;7953:185;7993:1;8010:20;8028:1;8010:20;:::i;:::-;8005:25;;8044:20;8062:1;8044:20;:::i;:::-;8039:25;;8083:1;8073:35;;8088:18;;:::i;:::-;8073:35;8130:1;8127;8123:9;8118:14;;7953:185;;;;:::o;8144:332::-;8265:4;8303:2;8292:9;8288:18;8280:26;;8316:71;8384:1;8373:9;8369:17;8360:6;8316:71;:::i;:::-;8397:72;8465:2;8454:9;8450:18;8441:6;8397:72;:::i;:::-;8144:332;;;;;:::o;8482:223::-;8622:34;8618:1;8610:6;8606:14;8599:58;8691:6;8686:2;8678:6;8674:15;8667:31;8482:223;:::o;8711:366::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8711:366;;;:::o;9083:419::-;9249:4;9287:2;9276:9;9272:18;9264:26;;9336:9;9330:4;9326:20;9322:1;9311:9;9307:17;9300:47;9364:131;9490:4;9364:131;:::i;:::-;9356:139;;9083:419;;;:::o;9508:176::-;9648:28;9644:1;9636:6;9632:14;9625:52;9508:176;:::o;9690:366::-;9832:3;9853:67;9917:2;9912:3;9853:67;:::i;:::-;9846:74;;9929:93;10018:3;9929:93;:::i;:::-;10047:2;10042:3;10038:12;10031:19;;9690:366;;;:::o;10062:419::-;10228:4;10266:2;10255:9;10251:18;10243:26;;10315:9;10309:4;10305:20;10301:1;10290:9;10286:17;10279:47;10343:131;10469:4;10343:131;:::i;:::-;10335:139;;10062:419;;;:::o;10487:221::-;10627:34;10623:1;10615:6;10611:14;10604:58;10696:4;10691:2;10683:6;10679:15;10672:29;10487:221;:::o;10714:366::-;10856:3;10877:67;10941:2;10936:3;10877:67;:::i;:::-;10870:74;;10953:93;11042:3;10953:93;:::i;:::-;11071:2;11066:3;11062:12;11055:19;;10714:366;;;:::o;11086:419::-;11252:4;11290:2;11279:9;11275:18;11267:26;;11339:9;11333:4;11329:20;11325:1;11314:9;11310:17;11303:47;11367:131;11493:4;11367:131;:::i;:::-;11359:139;;11086:419;;;:::o;11511:228::-;11651:34;11647:1;11639:6;11635:14;11628:58;11720:11;11715:2;11707:6;11703:15;11696:36;11511:228;:::o;11745:366::-;11887:3;11908:67;11972:2;11967:3;11908:67;:::i;:::-;11901:74;;11984:93;12073:3;11984:93;:::i;:::-;12102:2;12097:3;12093:12;12086:19;;11745:366;;;:::o;12117:419::-;12283:4;12321:2;12310:9;12306:18;12298:26;;12370:9;12364:4;12360:20;12356:1;12345:9;12341:17;12334:47;12398:131;12524:4;12398:131;:::i;:::-;12390:139;;12117:419;;;:::o;12542:222::-;12682:34;12678:1;12670:6;12666:14;12659:58;12751:5;12746:2;12738:6;12734:15;12727:30;12542:222;:::o;12770:366::-;12912:3;12933:67;12997:2;12992:3;12933:67;:::i;:::-;12926:74;;13009:93;13098:3;13009:93;:::i;:::-;13127:2;13122:3;13118:12;13111:19;;12770:366;;;:::o;13142:419::-;13308:4;13346:2;13335:9;13331:18;13323:26;;13395:9;13389:4;13385:20;13381:1;13370:9;13366:17;13359:47;13423:131;13549:4;13423:131;:::i;:::-;13415:139;;13142:419;;;:::o;13567:332::-;13688:4;13726:2;13715:9;13711:18;13703:26;;13739:71;13807:1;13796:9;13792:17;13783:6;13739:71;:::i;:::-;13820:72;13888:2;13877:9;13873:18;13864:6;13820:72;:::i;:::-;13567:332;;;;;:::o;13905:229::-;14045:34;14041:1;14033:6;14029:14;14022:58;14114:12;14109:2;14101:6;14097:15;14090:37;13905:229;:::o;14140:366::-;14282:3;14303:67;14367:2;14362:3;14303:67;:::i;:::-;14296:74;;14379:93;14468:3;14379:93;:::i;:::-;14497:2;14492:3;14488:12;14481:19;;14140:366;;;:::o;14512:419::-;14678:4;14716:2;14705:9;14701:18;14693:26;;14765:9;14759:4;14755:20;14751:1;14740:9;14736:17;14729:47;14793:131;14919:4;14793:131;:::i;:::-;14785:139;;14512:419;;;:::o;14937:232::-;15077:34;15073:1;15065:6;15061:14;15054:58;15146:15;15141:2;15133:6;15129:15;15122:40;14937:232;:::o;15175:366::-;15317:3;15338:67;15402:2;15397:3;15338:67;:::i;:::-;15331:74;;15414:93;15503:3;15414:93;:::i;:::-;15532:2;15527:3;15523:12;15516:19;;15175:366;;;:::o;15547:419::-;15713:4;15751:2;15740:9;15736:18;15728:26;;15800:9;15794:4;15790:20;15786:1;15775:9;15771:17;15764:47;15828:131;15954:4;15828:131;:::i;:::-;15820:139;;15547:419;;;:::o;15972:86::-;16007:7;16047:4;16040:5;16036:16;16025:27;;15972:86;;;:::o;16064:118::-;16135:22;16151:5;16135:22;:::i;:::-;16128:5;16125:33;16115:61;;16172:1;16169;16162:12;16115:61;16064:118;:::o;16188:139::-;16243:5;16274:6;16268:13;16259:22;;16290:31;16315:5;16290:31;:::i;:::-;16188:139;;;;:::o;16333:347::-;16401:6;16450:2;16438:9;16429:7;16425:23;16421:32;16418:119;;;16456:79;;:::i;:::-;16418:119;16576:1;16601:62;16655:7;16646:6;16635:9;16631:22;16601:62;:::i;:::-;16591:72;;16547:126;16333:347;;;;:::o;16686:143::-;16743:5;16774:6;16768:13;16759:22;;16790:33;16817:5;16790:33;:::i;:::-;16686:143;;;;:::o;16835:351::-;16905:6;16954:2;16942:9;16933:7;16929:23;16925:32;16922:119;;;16960:79;;:::i;:::-;16922:119;17080:1;17105:64;17161:7;17152:6;17141:9;17137:22;17105:64;:::i;:::-;17095:74;;17051:128;16835:351;;;;:::o;17192:221::-;17332:34;17328:1;17320:6;17316:14;17309:58;17401:4;17396:2;17388:6;17384:15;17377:29;17192:221;:::o;17419:366::-;17561:3;17582:67;17646:2;17641:3;17582:67;:::i;:::-;17575:74;;17658:93;17747:3;17658:93;:::i;:::-;17776:2;17771:3;17767:12;17760:19;;17419:366;;;:::o;17791:419::-;17957:4;17995:2;17984:9;17980:18;17972:26;;18044:9;18038:4;18034:20;18030:1;18019:9;18015:17;18008:47;18072:131;18198:4;18072:131;:::i;:::-;18064:139;;17791:419;;;:::o;18216:225::-;18356:34;18352:1;18344:6;18340:14;18333:58;18425:8;18420:2;18412:6;18408:15;18401:33;18216:225;:::o;18447:366::-;18589:3;18610:67;18674:2;18669:3;18610:67;:::i;:::-;18603:74;;18686:93;18775:3;18686:93;:::i;:::-;18804:2;18799:3;18795:12;18788:19;;18447:366;;;:::o;18819:419::-;18985:4;19023:2;19012:9;19008:18;19000:26;;19072:9;19066:4;19062:20;19058:1;19047:9;19043:17;19036:47;19100:131;19226:4;19100:131;:::i;:::-;19092:139;;18819:419;;;:::o;19244:309::-;19384:34;19380:1;19372:6;19368:14;19361:58;19453:34;19448:2;19440:6;19436:15;19429:59;19522:23;19517:2;19509:6;19505:15;19498:48;19244:309;:::o;19559:366::-;19701:3;19722:67;19786:2;19781:3;19722:67;:::i;:::-;19715:74;;19798:93;19887:3;19798:93;:::i;:::-;19916:2;19911:3;19907:12;19900:19;;19559:366;;;:::o;19931:419::-;20097:4;20135:2;20124:9;20120:18;20112:26;;20184:9;20178:4;20174:20;20170:1;20159:9;20155:17;20148:47;20212:131;20338:4;20212:131;:::i;:::-;20204:139;;19931:419;;;:::o;20356:312::-;20496:34;20492:1;20484:6;20480:14;20473:58;20565:34;20560:2;20552:6;20548:15;20541:59;20634:26;20629:2;20621:6;20617:15;20610:51;20356:312;:::o;20674:366::-;20816:3;20837:67;20901:2;20896:3;20837:67;:::i;:::-;20830:74;;20913:93;21002:3;20913:93;:::i;:::-;21031:2;21026:3;21022:12;21015:19;;20674:366;;;:::o;21046:419::-;21212:4;21250:2;21239:9;21235:18;21227:26;;21299:9;21293:4;21289:20;21285:1;21274:9;21270:17;21263:47;21327:131;21453:4;21327:131;:::i;:::-;21319:139;;21046:419;;;:::o;21471:182::-;21611:34;21607:1;21599:6;21595:14;21588:58;21471:182;:::o;21659:366::-;21801:3;21822:67;21886:2;21881:3;21822:67;:::i;:::-;21815:74;;21898:93;21987:3;21898:93;:::i;:::-;22016:2;22011:3;22007:12;22000:19;;21659:366;;;:::o;22031:419::-;22197:4;22235:2;22224:9;22220:18;22212:26;;22284:9;22278:4;22274:20;22270:1;22259:9;22255:17;22248:47;22312:131;22438:4;22312:131;:::i;:::-;22304:139;;22031:419;;;:::o;22456:442::-;22605:4;22643:2;22632:9;22628:18;22620:26;;22656:71;22724:1;22713:9;22709:17;22700:6;22656:71;:::i;:::-;22737:72;22805:2;22794:9;22790:18;22781:6;22737:72;:::i;:::-;22819;22887:2;22876:9;22872:18;22863:6;22819:72;:::i;:::-;22456:442;;;;;;:::o;22904:116::-;22974:21;22989:5;22974:21;:::i;:::-;22967:5;22964:32;22954:60;;23010:1;23007;23000:12;22954:60;22904:116;:::o;23026:137::-;23080:5;23111:6;23105:13;23096:22;;23127:30;23151:5;23127:30;:::i;:::-;23026:137;;;;:::o;23169:345::-;23236:6;23285:2;23273:9;23264:7;23260:23;23256:32;23253:119;;;23291:79;;:::i;:::-;23253:119;23411:1;23436:61;23489:7;23480:6;23469:9;23465:22;23436:61;:::i;:::-;23426:71;;23382:125;23169:345;;;;:::o;23520:229::-;23660:34;23656:1;23648:6;23644:14;23637:58;23729:12;23724:2;23716:6;23712:15;23705:37;23520:229;:::o;23755:366::-;23897:3;23918:67;23982:2;23977:3;23918:67;:::i;:::-;23911:74;;23994:93;24083:3;23994:93;:::i;:::-;24112:2;24107:3;24103:12;24096:19;;23755:366;;;:::o;24127:419::-;24293:4;24331:2;24320:9;24316:18;24308:26;;24380:9;24374:4;24370:20;24366:1;24355:9;24351:17;24344:47;24408:131;24534:4;24408:131;:::i;:::-;24400:139;;24127:419;;;:::o;24552:225::-;24692:34;24688:1;24680:6;24676:14;24669:58;24761:8;24756:2;24748:6;24744:15;24737:33;24552:225;:::o;24783:366::-;24925:3;24946:67;25010:2;25005:3;24946:67;:::i;:::-;24939:74;;25022:93;25111:3;25022:93;:::i;:::-;25140:2;25135:3;25131:12;25124:19;;24783:366;;;:::o;25155:419::-;25321:4;25359:2;25348:9;25344:18;25336:26;;25408:9;25402:4;25398:20;25394:1;25383:9;25379:17;25372:47;25436:131;25562:4;25436:131;:::i;:::-;25428:139;;25155:419;;;:::o;25580:98::-;25631:6;25665:5;25659:12;25649:22;;25580:98;;;:::o;25684:147::-;25785:11;25822:3;25807:18;;25684:147;;;;:::o;25837:246::-;25918:1;25928:113;25942:6;25939:1;25936:13;25928:113;;;26027:1;26022:3;26018:11;26012:18;26008:1;26003:3;25999:11;25992:39;25964:2;25961:1;25957:10;25952:15;;25928:113;;;26075:1;26066:6;26061:3;26057:16;26050:27;25899:184;25837:246;;;:::o;26089:386::-;26193:3;26221:38;26253:5;26221:38;:::i;:::-;26275:88;26356:6;26351:3;26275:88;:::i;:::-;26268:95;;26372:65;26430:6;26425:3;26418:4;26411:5;26407:16;26372:65;:::i;:::-;26462:6;26457:3;26453:16;26446:23;;26197:278;26089:386;;;;:::o;26481:271::-;26611:3;26633:93;26722:3;26713:6;26633:93;:::i;:::-;26626:100;;26743:3;26736:10;;26481:271;;;;:::o;26758:179::-;26898:31;26894:1;26886:6;26882:14;26875:55;26758:179;:::o;26943:366::-;27085:3;27106:67;27170:2;27165:3;27106:67;:::i;:::-;27099:74;;27182:93;27271:3;27182:93;:::i;:::-;27300:2;27295:3;27291:12;27284:19;;26943:366;;;:::o;27315:419::-;27481:4;27519:2;27508:9;27504:18;27496:26;;27568:9;27562:4;27558:20;27554:1;27543:9;27539:17;27532:47;27596:131;27722:4;27596:131;:::i;:::-;27588:139;;27315:419;;;:::o;27740:99::-;27792:6;27826:5;27820:12;27810:22;;27740:99;;;:::o;27845:102::-;27886:6;27937:2;27933:7;27928:2;27921:5;27917:14;27913:28;27903:38;;27845:102;;;:::o;27953:377::-;28041:3;28069:39;28102:5;28069:39;:::i;:::-;28124:71;28188:6;28183:3;28124:71;:::i;:::-;28117:78;;28204:65;28262:6;28257:3;28250:4;28243:5;28239:16;28204:65;:::i;:::-;28294:29;28316:6;28294:29;:::i;:::-;28289:3;28285:39;28278:46;;28045:285;27953:377;;;;:::o;28336:313::-;28449:4;28487:2;28476:9;28472:18;28464:26;;28536:9;28530:4;28526:20;28522:1;28511:9;28507:17;28500:47;28564:78;28637:4;28628:6;28564:78;:::i;:::-;28556:86;;28336:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2227200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addWhiteListedToken(address,uint256)": "infinite",
								"buyToken(address,uint256)": "infinite",
								"getTokenAmount(address,uint256)": "infinite",
								"maxBuyLimit()": "2518",
								"minBuyLimit()": "2496",
								"owner()": "2589",
								"presaleEndTime()": "2497",
								"presaleStartTime()": "2540",
								"rate()": "2519",
								"renounceOwnership()": "30444",
								"saleToken()": "2625",
								"saleTokenDec()": "2474",
								"setMaxBuyLimit(uint256)": "24852",
								"setMinBuyLimit(uint256)": "24873",
								"setSaleTokenParams(address,uint256)": "infinite",
								"startAndSetPresaleEndTime(uint256)": "infinite",
								"tokenPrices(address)": "2905",
								"tokenWL(address)": "2890",
								"totalTokensSold()": "2474",
								"totalTokensforSale()": "2540",
								"transferOwnership(address)": "30788",
								"upateTime(uint256)": "infinite",
								"updateEthRate(uint256)": "24830",
								"updateTokenRate(address,uint256)": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawAll(address)": "infinite",
								"withdrawAllSaleToken()": "infinite",
								"withdrawCurrency(uint256)": "infinite",
								"withdrawSaleToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 6643,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047fb47b139e46bce3b010c1d12cee81698fa9dd4c0a89923969cd0d2bae7b8b764736f6c63430008120033",
									".code": [
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "ACE1741C"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "F3FEF3A3"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "FA09E630"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "FB00F3FC"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "ACE1741C"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "B81DF742"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "DED441C2"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "E985E367"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "8CE0B9D2"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "8CE0B9D2"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "99B77032"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "A82524B2"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "757765F8"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "89E6CE1E"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "3F6F7ED6"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "63B20117"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "63B20117"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "68F8FC10"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "6AA5B37F"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "6BCEDF9C"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "3F6F7ED6"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "444AD5EE"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "5B10BD6A"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "226AC321"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "226AC321"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "249B7C19"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "2C4E722E"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "3C00A36C"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "FABDD44"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "115ECE4C"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "204120BC"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 262,
											"end": 6643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6533,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6533,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5943,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5943,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6201,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6201,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 5680,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2934,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2919,
											"end": 2952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2919,
											"end": 2952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3676,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3733,
											"end": 3747,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3725,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3817,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3894,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3900,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3865,
											"end": 3877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3859,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3849,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3849,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3848,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3848,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 3806,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4001,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3991,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3991,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3990,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3990,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3962,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 4050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3686,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 632,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3399,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3391,
											"end": 3449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3391,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3487,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C2D539E6A806D81B0892F23B002D25B825425D13A98BB6F486438B6B7BC0CE3A"
										},
										{
											"begin": 3515,
											"end": 3521,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3502,
											"end": 3530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3530,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 759,
											"end": 788,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 759,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 369,
											"end": 388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6619,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6601,
											"end": 6629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 6630,
											"end": 6633,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3077,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F4C563A3EA86FF1F4275E8C207DF0375A51963F2B831B7BF4DA8BE938D92876C"
										},
										{
											"begin": 3163,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3152,
											"end": 3178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3178,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2768,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2768,
											"end": 2802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2768,
											"end": 2802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2802,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 795,
											"end": 825,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 795,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1414,
											"end": 1430,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1430,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1430,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1594,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1594,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1591,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1555,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1555,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4252,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4275,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4359,
											"end": 4360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4372,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4350,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4336,
											"end": 4373,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4336,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4305,
											"end": 4311,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4320,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4304,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4290,
											"end": 4321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4290,
											"end": 4321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4255,
											"end": 4373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4373,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4436,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4406,
											"end": 4421,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4406,
											"end": 4436,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4406,
											"end": 4436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4459,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4459,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4384,
											"end": 4519,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4384,
											"end": 4519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4540,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4554,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4594,
											"end": 4605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4594,
											"end": 4605,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4605,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4605,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4570,
											"end": 4651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4570,
											"end": 4651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4696,
											"end": 4706,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4720,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4672,
											"end": 4681,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4665,
											"end": 4695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4665,
											"end": 4721,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 4787,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4787,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4787,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4752,
											"end": 4827,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4752,
											"end": 4827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4863,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4841,
											"end": 4899,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4841,
											"end": 4899,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4945,
											"end": 4955,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4969,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4979,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4926,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4913,
											"end": 4944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4913,
											"end": 4980,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5025,
											"end": 5035,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5049,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4994,
											"end": 5024,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4994,
											"end": 5050,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4530,
											"end": 5061,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5070,
											"end": 5085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5070,
											"end": 5101,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5101,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5141,
											"end": 5147,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "C244D500136EDFFAE7025AAF7FBD7A07193AC544A1D0CC3132CF2A32452D340C"
										},
										{
											"begin": 5149,
											"end": 5156,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5170,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5116,
											"end": 5171,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5171,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 5178,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 523,
											"end": 549,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 517,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 484,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5399,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2029,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1986,
											"end": 2099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1986,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2130,
											"end": 2153,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2109,
											"end": 2224,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2109,
											"end": 2224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2281,
											"end": 2317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2281,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2376,
											"end": 2386,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2328,
											"end": 2362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2328,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2523,
											"end": 2527,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2487,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2487,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2487,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3211F0A57D24F0B52E2E0573AF5BE089C5FAADEB55F9B90591717B0A22F7E2A"
										},
										{
											"begin": 2559,
											"end": 2569,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2571,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2544,
											"end": 2591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2591,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 587,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5285,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 722,
											"end": 753,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 722,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 478,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1756,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1720,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5582,
											"end": 5592,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5594,
											"end": 5601,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5567,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5551,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5551,
											"end": 5602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 424,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6026,
											"end": 6044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6026,
											"end": 6044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 6018,
											"end": 6134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6018,
											"end": 6134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6171,
											"end": 6181,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6156,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6144,
											"end": 6170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 6144,
											"end": 6187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6283,
											"end": 6292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6266,
											"end": 6385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6266,
											"end": 6385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6409,
											"end": 6432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6441,
											"end": 6445,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6409,
											"end": 6447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6409,
											"end": 6447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6409,
											"end": 6447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6466,
											"end": 6471,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6476,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6457,
											"end": 6477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6457,
											"end": 6477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6457,
											"end": 6477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 5680,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1760,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1756,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1720,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1720,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5777,
											"end": 5786,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 5806,
											"end": 5810,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5770,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5770,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5770,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5853,
											"end": 5863,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5838,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5822,
											"end": 5852,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5822,
											"end": 5869,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5876,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 1482,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1663,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1853,
											"end": 1860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1808,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1754,
											"end": 1871,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2782,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2876,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2898,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3038,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3048,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3048,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3213,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3201,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3394,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3658,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3478,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3603,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3651,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3723,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 3743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3757,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3825,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3828,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4019,
											"end": 4023,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4014,
											"end": 4017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 4030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4216,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4036,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F6B656E206E6F742077686974656C69737465640000"
										},
										{
											"begin": 4172,
											"end": 4173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4588,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4222,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 4449,
											"end": 4451,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4385,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4452,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 4385,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4461,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4554,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 4461,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5013,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 4594,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4775,
											"end": 4801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4775,
											"end": 4801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4841,
											"end": 4845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4857,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4811,
											"end": 4858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 5001,
											"end": 5005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4875,
											"end": 5006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 5006,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 4875,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 5006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 5006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5013,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5121,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5019,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5061,
											"end": 5069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5101,
											"end": 5114,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5199,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5234,
											"end": 5248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5234,
											"end": 5248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5268,
											"end": 5276,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5265,
											"end": 5280,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5378,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5379,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5382,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5433,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5422,
											"end": 5430,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5434,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5866,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 5415,
											"end": 5866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5852,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5866,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 5415,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5897,
											"end": 5901,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5902,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 5950,
											"end": 5958,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5927,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5959,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 5927,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5257,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6035,
											"end": 6040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6247,
											"end": 6248,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6238,
											"end": 6248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 6216,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6275,
											"end": 6279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 6265,
											"end": 6301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 6294,
											"end": 6299,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6301,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 6265,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6445,
											"end": 6446,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 6354,
											"end": 6631,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6404,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 6424,
											"end": 6429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6440,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6488,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6475,
											"end": 6483,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6512,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6469,
											"end": 6512,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6512,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6469,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6534,
											"end": 6550,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6525,
											"end": 6550,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6525,
											"end": 6550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6566,
											"end": 6580,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6603,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 6563,
											"end": 6603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6583,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6603,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 6563,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6631,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 6354,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6738,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6727,
											"end": 6743,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6721,
											"end": 6724,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6715,
											"end": 6719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6725,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 6680,
											"end": 6688,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6659,
											"end": 6694,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6643,
											"end": 6754,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 6640,
											"end": 6886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6796,
											"end": 6804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6805,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6834,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6824,
											"end": 6829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 6818,
											"end": 6858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6838,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6858,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 6818,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6871,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 6871,
											"end": 6876,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6886,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 6640,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6911,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6939,
											"end": 6947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6931,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6911,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6911,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6911,
											"end": 6953,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6911,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6953,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6896,
											"end": 6953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 6990,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6969,
											"end": 6974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6991,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 6994,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 6963,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 7048,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7144,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7144,
											"end": 7167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7144,
											"end": 7167,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7144,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7206,
											"end": 7214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7188,
											"end": 7215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7215,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7188,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7176,
											"end": 7215,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7176,
											"end": 7215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7271,
											"end": 7337,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7261,
											"end": 7269,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 7234,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7234,
											"end": 7338,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7234,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7225,
											"end": 7338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 7432,
											"end": 7433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7414,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7448,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7448,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7448,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7448,
											"end": 7468,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 7448,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7468,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7543,
											"end": 7554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7525,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7555,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7525,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7514,
											"end": 7555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7514,
											"end": 7555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7691,
											"end": 7706,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7688,
											"end": 7689,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7638,
											"end": 7721,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7615,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7615,
											"end": 7754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 7734,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7615,
											"end": 7754,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7615,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7399,
											"end": 7761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7767,
											"end": 7947,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 7767,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7815,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7909,
											"end": 7910,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7902,
											"end": 7917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7936,
											"end": 7940,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7933,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8010,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 8010,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8044,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8064,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 8073,
											"end": 8108,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8088,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8073,
											"end": 8108,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 8073,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8132,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8118,
											"end": 8132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 8138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8265,
											"end": 8269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8305,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8292,
											"end": 8301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8360,
											"end": 8366,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8316,
											"end": 8387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8387,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 8316,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 8465,
											"end": 8467,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8397,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8469,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 8397,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8705,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8482,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C6520686173206E6F742073746172746564"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8697,
											"name": "PUSH",
											"source": 8,
											"value": "2079657400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8667,
											"end": 8698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 9077,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8711,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8853,
											"end": 8856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 8938,
											"end": 8940,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8933,
											"end": 8936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8874,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8874,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8874,
											"end": 8941,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 8874,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8867,
											"end": 8941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8867,
											"end": 8941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 9039,
											"end": 9042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8950,
											"end": 9043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 9043,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 8950,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 9077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 9077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 9077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 9077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9502,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9083,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9264,
											"end": 9290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9264,
											"end": 9290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9336,
											"end": 9345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9334,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9300,
											"end": 9347,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 9490,
											"end": 9494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9364,
											"end": 9495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9495,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 9364,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9502,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9684,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9508,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9676,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C652068617320656E646564000000000000"
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 9646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9625,
											"end": 9677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 9853,
											"end": 9920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 9853,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9846,
											"end": 9920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9846,
											"end": 9920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9929,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 9929,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10031,
											"end": 10050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10031,
											"end": 10050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 10056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10228,
											"end": 10232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10268,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10243,
											"end": 10269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10243,
											"end": 10269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10305,
											"end": 10325,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10299,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10286,
											"end": 10303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10326,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 10469,
											"end": 10473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10343,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 10343,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10335,
											"end": 10474,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10335,
											"end": 10474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10487,
											"end": 10708,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10487,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10661,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F74616C20546F6B656E2053616C6520526561636865"
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "PUSH",
											"source": 8,
											"value": "6421000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10691,
											"end": 10693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10679,
											"end": 10694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10672,
											"end": 10701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10487,
											"end": 10708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10487,
											"end": 10708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 11080,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 10714,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 10941,
											"end": 10943,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10936,
											"end": 10939,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10877,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 10877,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10877,
											"end": 10944,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 10877,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 11042,
											"end": 11045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10953,
											"end": 11046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 11046,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 10953,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11062,
											"end": 11074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 11080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 11080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 11080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 11080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11505,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11086,
											"end": 11505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11279,
											"end": 11288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11275,
											"end": 11293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11333,
											"end": 11337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11329,
											"end": 11349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11325,
											"end": 11326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11310,
											"end": 11327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11303,
											"end": 11350,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 11493,
											"end": 11497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 11367,
											"end": 11498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11498,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 11367,
											"end": 11498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11359,
											"end": 11498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11739,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 11511,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11685,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F6B656E20616D6F756E742062656C6F77206D696E20"
										},
										{
											"begin": 11647,
											"end": 11648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11686,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11720,
											"end": 11731,
											"name": "PUSH",
											"source": 8,
											"value": "627579206C696D69740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11715,
											"end": 11717,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 11718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12111,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 11745,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11887,
											"end": 11890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11972,
											"end": 11974,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11908,
											"end": 11975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 11975,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11908,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11901,
											"end": 11975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11901,
											"end": 11975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 12073,
											"end": 12076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 11984,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12077,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 11984,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12097,
											"end": 12100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12086,
											"end": 12105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12086,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12536,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 12117,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12283,
											"end": 12287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12310,
											"end": 12319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12298,
											"end": 12324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12370,
											"end": 12379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12364,
											"end": 12368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12360,
											"end": 12380,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12341,
											"end": 12358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12334,
											"end": 12381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 12524,
											"end": 12528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12398,
											"end": 12529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12529,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 12398,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12390,
											"end": 12529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12390,
											"end": 12529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12542,
											"end": 12764,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 12542,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12682,
											"end": 12716,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20416D6F756E742062656C6F77206D696E20627579206C69"
										},
										{
											"begin": 12678,
											"end": 12679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12670,
											"end": 12676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12666,
											"end": 12680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12659,
											"end": 12717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12751,
											"end": 12756,
											"name": "PUSH",
											"source": 8,
											"value": "6D69740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12746,
											"end": 12748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12738,
											"end": 12744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 12757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12542,
											"end": 12764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12542,
											"end": 12764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12912,
											"end": 12915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 12992,
											"end": 12995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 12933,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 12933,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 13098,
											"end": 13101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13009,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 13009,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13127,
											"end": 13129,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13122,
											"end": 13125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13118,
											"end": 13130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13111,
											"end": 13130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13111,
											"end": 13130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 13136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 13136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13323,
											"end": 13349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13323,
											"end": 13349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13395,
											"end": 13404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13389,
											"end": 13393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13405,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13359,
											"end": 13406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 13549,
											"end": 13553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13423,
											"end": 13554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 13423,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13415,
											"end": 13554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13415,
											"end": 13554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13142,
											"end": 13561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13688,
											"end": 13692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13726,
											"end": 13728,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13715,
											"end": 13724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13711,
											"end": 13729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13703,
											"end": 13729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13703,
											"end": 13729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 13807,
											"end": 13808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 13805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13792,
											"end": 13809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13783,
											"end": 13789,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13739,
											"end": 13810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13739,
											"end": 13810,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 13739,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13820,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 13888,
											"end": 13890,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13877,
											"end": 13886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13873,
											"end": 13891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13864,
											"end": 13870,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13820,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13820,
											"end": 13892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13820,
											"end": 13892,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 13820,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13567,
											"end": 13899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 14134,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 13905,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14045,
											"end": 14079,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2053616C6520746F6B656E2063616E6E6F74206265207A65"
										},
										{
											"begin": 14041,
											"end": 14042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14029,
											"end": 14043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14114,
											"end": 14126,
											"name": "PUSH",
											"source": 8,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 14109,
											"end": 14111,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14097,
											"end": 14112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14127,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 14134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 14134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14282,
											"end": 14285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 14367,
											"end": 14369,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14303,
											"end": 14370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 14303,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14370,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14296,
											"end": 14370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 14379,
											"end": 14472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 14379,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14497,
											"end": 14499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14492,
											"end": 14495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14488,
											"end": 14500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14678,
											"end": 14682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14716,
											"end": 14718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14765,
											"end": 14774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14740,
											"end": 14749,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14736,
											"end": 14753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14729,
											"end": 14776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 14919,
											"end": 14923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14793,
											"end": 14924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 14793,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14512,
											"end": 14931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14512,
											"end": 14931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14937,
											"end": 15169,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 14937,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15077,
											"end": 15111,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A20546F74616C20746F6B656E7320666F722073616C652063"
										},
										{
											"begin": 15073,
											"end": 15074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15065,
											"end": 15071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15061,
											"end": 15075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15161,
											"name": "PUSH",
											"source": 8,
											"value": "616E6E6F74206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 15141,
											"end": 15143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15133,
											"end": 15139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15129,
											"end": 15144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15122,
											"end": 15162,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14937,
											"end": 15169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14937,
											"end": 15169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15541,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 15175,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 15402,
											"end": 15404,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 15397,
											"end": 15400,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15338,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 15338,
											"end": 15405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15338,
											"end": 15405,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 15338,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15331,
											"end": 15405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15331,
											"end": 15405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 15503,
											"end": 15506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 15414,
											"end": 15507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15507,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 15414,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15532,
											"end": 15534,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15527,
											"end": 15530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15523,
											"end": 15535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15516,
											"end": 15535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15516,
											"end": 15535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15175,
											"end": 15541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15713,
											"end": 15717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15751,
											"end": 15753,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15740,
											"end": 15749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15736,
											"end": 15754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15728,
											"end": 15754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15728,
											"end": 15754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 15809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15794,
											"end": 15798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15790,
											"end": 15810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15786,
											"end": 15787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15771,
											"end": 15788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15764,
											"end": 15811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 15954,
											"end": 15958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 15828,
											"end": 15959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15820,
											"end": 15959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15820,
											"end": 15959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15547,
											"end": 15966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16007,
											"end": 16014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16047,
											"end": 16051,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 16040,
											"end": 16045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16036,
											"end": 16052,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16025,
											"end": 16052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16025,
											"end": 16052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15972,
											"end": 16058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16182,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 16064,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 16151,
											"end": 16156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 16135,
											"end": 16157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16128,
											"end": 16133,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16125,
											"end": 16158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16115,
											"end": 16176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 16115,
											"end": 16176,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16172,
											"end": 16173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16169,
											"end": 16170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16162,
											"end": 16174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16115,
											"end": 16176,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 16115,
											"end": 16176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16064,
											"end": 16182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16243,
											"end": 16248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16268,
											"end": 16281,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16259,
											"end": 16281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 16315,
											"end": 16320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 16290,
											"end": 16321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16321,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 16290,
											"end": 16321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16188,
											"end": 16327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16401,
											"end": 16407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16450,
											"end": 16452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16438,
											"end": 16447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16429,
											"end": 16436,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16425,
											"end": 16448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16421,
											"end": 16453,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16418,
											"end": 16537,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16418,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 16418,
											"end": 16537,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16456,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 16456,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 16456,
											"end": 16535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16456,
											"end": 16535,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 16456,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16418,
											"end": 16537,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 16418,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16576,
											"end": 16577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 16655,
											"end": 16662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16646,
											"end": 16652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16635,
											"end": 16644,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16631,
											"end": 16653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16601,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 16601,
											"end": 16663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16601,
											"end": 16663,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 16601,
											"end": 16663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16591,
											"end": 16663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16591,
											"end": 16663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16547,
											"end": 16673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16333,
											"end": 16680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16743,
											"end": 16748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16774,
											"end": 16780,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16768,
											"end": 16781,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16759,
											"end": 16781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16759,
											"end": 16781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 16817,
											"end": 16822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 16790,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16823,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 16790,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16686,
											"end": 16829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16905,
											"end": 16911,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16954,
											"end": 16956,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16933,
											"end": 16940,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16929,
											"end": 16952,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16925,
											"end": 16957,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 16960,
											"end": 17039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17080,
											"end": 17081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 17161,
											"end": 17168,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17141,
											"end": 17150,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17137,
											"end": 17159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17105,
											"end": 17169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 17105,
											"end": 17169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17105,
											"end": 17169,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 17105,
											"end": 17169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17095,
											"end": 17169,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17095,
											"end": 17169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17051,
											"end": 17179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16835,
											"end": 17186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17413,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 17192,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17332,
											"end": 17366,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2050726573616C6520686173206E6F7420656E6465642079"
										},
										{
											"begin": 17328,
											"end": 17329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17316,
											"end": 17330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17309,
											"end": 17367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17401,
											"end": 17405,
											"name": "PUSH",
											"source": 8,
											"value": "6574000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17396,
											"end": 17398,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17388,
											"end": 17394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17384,
											"end": 17399,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17785,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 17419,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17561,
											"end": 17564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17582,
											"end": 17649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 17646,
											"end": 17648,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 17641,
											"end": 17644,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17582,
											"end": 17649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 17582,
											"end": 17649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17582,
											"end": 17649,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 17582,
											"end": 17649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 17747,
											"end": 17750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 17658,
											"end": 17751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17751,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 17658,
											"end": 17751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17776,
											"end": 17778,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17771,
											"end": 17774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17767,
											"end": 17779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 18210,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 17791,
											"end": 18210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 17961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17995,
											"end": 17997,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17984,
											"end": 17993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17980,
											"end": 17998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17972,
											"end": 17998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17972,
											"end": 17998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18044,
											"end": 18053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18038,
											"end": 18042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18034,
											"end": 18054,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18030,
											"end": 18031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18019,
											"end": 18028,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18015,
											"end": 18032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18008,
											"end": 18055,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18072,
											"end": 18203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18072,
											"end": 18203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 18072,
											"end": 18203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18072,
											"end": 18203,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 18072,
											"end": 18203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18064,
											"end": 18203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 18210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 18210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 18210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17791,
											"end": 18210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18216,
											"end": 18441,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 18216,
											"end": 18441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18356,
											"end": 18390,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18352,
											"end": 18353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18344,
											"end": 18350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18340,
											"end": 18354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18333,
											"end": 18391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18425,
											"end": 18433,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18420,
											"end": 18422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18412,
											"end": 18418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18408,
											"end": 18423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18401,
											"end": 18434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18216,
											"end": 18441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18216,
											"end": 18441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18813,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 18447,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18589,
											"end": 18592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18610,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 18674,
											"end": 18676,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 18669,
											"end": 18672,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18610,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 18610,
											"end": 18677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18610,
											"end": 18677,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 18610,
											"end": 18677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18603,
											"end": 18677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 18775,
											"end": 18778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 18686,
											"end": 18779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18804,
											"end": 18806,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18799,
											"end": 18802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18795,
											"end": 18807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18788,
											"end": 18807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18788,
											"end": 18807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 19238,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 18819,
											"end": 19238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 18989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19023,
											"end": 19025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19012,
											"end": 19021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19008,
											"end": 19026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19000,
											"end": 19026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19000,
											"end": 19026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19072,
											"end": 19081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19066,
											"end": 19070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19062,
											"end": 19082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19058,
											"end": 19059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19043,
											"end": 19060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19036,
											"end": 19083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19100,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 19226,
											"end": 19230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19100,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 19100,
											"end": 19231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19100,
											"end": 19231,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 19100,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19092,
											"end": 19231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19092,
											"end": 19231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 19238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 19238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 19238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18819,
											"end": 19238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19553,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 19244,
											"end": 19553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2043616E6E6F742077697468647261772073616C6520746F"
										},
										{
											"begin": 19380,
											"end": 19381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19372,
											"end": 19378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19368,
											"end": 19382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19361,
											"end": 19419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19453,
											"end": 19487,
											"name": "PUSH",
											"source": 8,
											"value": "6B656E20776974682074686973206D6574686F642C2075736520776974686472"
										},
										{
											"begin": 19448,
											"end": 19450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19440,
											"end": 19446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19436,
											"end": 19451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19429,
											"end": 19488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19522,
											"end": 19545,
											"name": "PUSH",
											"source": 8,
											"value": "617753616C65546F6B656E282920696E73746561640000000000000000000000"
										},
										{
											"begin": 19517,
											"end": 19519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19509,
											"end": 19515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19505,
											"end": 19520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19498,
											"end": 19546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19925,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 19559,
											"end": 19925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19701,
											"end": 19704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19722,
											"end": 19789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 19786,
											"end": 19788,
											"name": "PUSH",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 19781,
											"end": 19784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19722,
											"end": 19789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 19722,
											"end": 19789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19722,
											"end": 19789,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 19722,
											"end": 19789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19715,
											"end": 19789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19715,
											"end": 19789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19798,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 19887,
											"end": 19890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19798,
											"end": 19891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 19798,
											"end": 19891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19798,
											"end": 19891,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 19798,
											"end": 19891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19916,
											"end": 19918,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 19911,
											"end": 19914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19907,
											"end": 19919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19900,
											"end": 19919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19900,
											"end": 19919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19559,
											"end": 19925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19931,
											"end": 20350,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 19931,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20097,
											"end": 20101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20135,
											"end": 20137,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20124,
											"end": 20133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20120,
											"end": 20138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20112,
											"end": 20138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20112,
											"end": 20138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20184,
											"end": 20193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20178,
											"end": 20182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20174,
											"end": 20194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20170,
											"end": 20171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20159,
											"end": 20168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20155,
											"end": 20172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20148,
											"end": 20195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20212,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 20338,
											"end": 20342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20212,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 20212,
											"end": 20343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20212,
											"end": 20343,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 20212,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20204,
											"end": 20343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20204,
											"end": 20343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19931,
											"end": 20350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19931,
											"end": 20350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19931,
											"end": 20350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19931,
											"end": 20350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20668,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 20356,
											"end": 20668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20496,
											"end": 20530,
											"name": "PUSH",
											"source": 8,
											"value": "50726573616C653A2043616E6E6F742077697468647261772073616C6520746F"
										},
										{
											"begin": 20492,
											"end": 20493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20484,
											"end": 20490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20480,
											"end": 20494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20473,
											"end": 20531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20599,
											"name": "PUSH",
											"source": 8,
											"value": "6B656E20776974682074686973206D6574686F642C2075736520776974686472"
										},
										{
											"begin": 20560,
											"end": 20562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20552,
											"end": 20558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20541,
											"end": 20600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20634,
											"end": 20660,
											"name": "PUSH",
											"source": 8,
											"value": "6177416C6C53616C65546F6B656E282920696E73746561640000000000000000"
										},
										{
											"begin": 20629,
											"end": 20631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20621,
											"end": 20627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20617,
											"end": 20632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20610,
											"end": 20661,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 21040,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 20674,
											"end": 21040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20816,
											"end": 20819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 20901,
											"end": 20903,
											"name": "PUSH",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 20896,
											"end": 20899,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20837,
											"end": 20904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 20837,
											"end": 20904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20837,
											"end": 20904,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 20837,
											"end": 20904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 20904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 20904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20913,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 21002,
											"end": 21005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20913,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 20913,
											"end": 21006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20913,
											"end": 21006,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 20913,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21031,
											"end": 21033,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 21026,
											"end": 21029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21022,
											"end": 21034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 21040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 21040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 21040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 21040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21046,
											"end": 21465,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 21046,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21212,
											"end": 21216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21250,
											"end": 21252,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21239,
											"end": 21248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21235,
											"end": 21253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21227,
											"end": 21253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21227,
											"end": 21253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21299,
											"end": 21308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21293,
											"end": 21297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21289,
											"end": 21309,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21285,
											"end": 21286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21274,
											"end": 21283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21270,
											"end": 21287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21263,
											"end": 21310,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 21453,
											"end": 21457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 21327,
											"end": 21458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21458,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 21327,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21319,
											"end": 21458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21319,
											"end": 21458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21046,
											"end": 21465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21046,
											"end": 21465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21046,
											"end": 21465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21046,
											"end": 21465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21471,
											"end": 21653,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 21471,
											"end": 21653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21611,
											"end": 21645,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 21607,
											"end": 21608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21599,
											"end": 21605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21595,
											"end": 21609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21588,
											"end": 21646,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21471,
											"end": 21653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21471,
											"end": 21653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 22025,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 21659,
											"end": 22025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21801,
											"end": 21804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21822,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 21886,
											"end": 21888,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21881,
											"end": 21884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21822,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 21822,
											"end": 21889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21822,
											"end": 21889,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 21822,
											"end": 21889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21815,
											"end": 21889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21815,
											"end": 21889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21898,
											"end": 21991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 21987,
											"end": 21990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21898,
											"end": 21991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 21898,
											"end": 21991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21898,
											"end": 21991,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 21898,
											"end": 21991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22016,
											"end": 22018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22011,
											"end": 22014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22007,
											"end": 22019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22000,
											"end": 22019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22000,
											"end": 22019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 22025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 22025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 22025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 22025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22450,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 22031,
											"end": 22450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22197,
											"end": 22201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22235,
											"end": 22237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22224,
											"end": 22233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22220,
											"end": 22238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22284,
											"end": 22293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22278,
											"end": 22282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22274,
											"end": 22294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22270,
											"end": 22271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22259,
											"end": 22268,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22255,
											"end": 22272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22248,
											"end": 22295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22312,
											"end": 22443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 22438,
											"end": 22442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22312,
											"end": 22443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 22312,
											"end": 22443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22312,
											"end": 22443,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 22312,
											"end": 22443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22304,
											"end": 22443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22304,
											"end": 22443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22450,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22031,
											"end": 22450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22605,
											"end": 22609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22643,
											"end": 22645,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 22632,
											"end": 22641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22628,
											"end": 22646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22620,
											"end": 22646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22620,
											"end": 22646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22656,
											"end": 22727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 22724,
											"end": 22725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22713,
											"end": 22722,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22709,
											"end": 22726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22700,
											"end": 22706,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22656,
											"end": 22727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 22656,
											"end": 22727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22656,
											"end": 22727,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 22656,
											"end": 22727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22737,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 22805,
											"end": 22807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22794,
											"end": 22803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22790,
											"end": 22808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22781,
											"end": 22787,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22737,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 22737,
											"end": 22809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22737,
											"end": 22809,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 22737,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22819,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 22887,
											"end": 22889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22876,
											"end": 22885,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22872,
											"end": 22890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22863,
											"end": 22869,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22819,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 22819,
											"end": 22891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22819,
											"end": 22891,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 22819,
											"end": 22891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 23020,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 22904,
											"end": 23020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22974,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 22989,
											"end": 22994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22974,
											"end": 22995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 22974,
											"end": 22995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22974,
											"end": 22995,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 22974,
											"end": 22995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22967,
											"end": 22972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22964,
											"end": 22996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 23014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 22954,
											"end": 23014,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23010,
											"end": 23011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23007,
											"end": 23008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23000,
											"end": 23012,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 23014,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 22954,
											"end": 23014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 23020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 23020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23080,
											"end": 23085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23111,
											"end": 23117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23105,
											"end": 23118,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23096,
											"end": 23118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23096,
											"end": 23118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23127,
											"end": 23157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23151,
											"end": 23156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23127,
											"end": 23157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 23127,
											"end": 23157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23127,
											"end": 23157,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23127,
											"end": 23157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23026,
											"end": 23163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23236,
											"end": 23242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23285,
											"end": 23287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23273,
											"end": 23282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23264,
											"end": 23271,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23260,
											"end": 23283,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23256,
											"end": 23288,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 23253,
											"end": 23372,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23253,
											"end": 23372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 23253,
											"end": 23372,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23291,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 23291,
											"end": 23370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 23291,
											"end": 23370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23291,
											"end": 23370,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 23291,
											"end": 23370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23253,
											"end": 23372,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 23253,
											"end": 23372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23411,
											"end": 23412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23436,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 23489,
											"end": 23496,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23480,
											"end": 23486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23469,
											"end": 23478,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23465,
											"end": 23487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23436,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 23436,
											"end": 23497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23436,
											"end": 23497,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 23436,
											"end": 23497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23426,
											"end": 23497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23426,
											"end": 23497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23382,
											"end": 23507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23169,
											"end": 23514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23520,
											"end": 23749,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 23520,
											"end": 23749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23660,
											"end": 23694,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 23656,
											"end": 23657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23648,
											"end": 23654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23644,
											"end": 23658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23637,
											"end": 23695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23729,
											"end": 23741,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 23724,
											"end": 23726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23716,
											"end": 23722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23712,
											"end": 23727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23705,
											"end": 23742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23520,
											"end": 23749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23520,
											"end": 23749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23755,
											"end": 24121,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 23755,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23897,
											"end": 23900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23918,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23982,
											"end": 23984,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 23977,
											"end": 23980,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23918,
											"end": 23985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 23918,
											"end": 23985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23918,
											"end": 23985,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 23918,
											"end": 23985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23911,
											"end": 23985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23911,
											"end": 23985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 24083,
											"end": 24086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 23994,
											"end": 24087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23994,
											"end": 24087,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 23994,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24112,
											"end": 24114,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 24107,
											"end": 24110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24103,
											"end": 24115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24096,
											"end": 24115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23755,
											"end": 24121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23755,
											"end": 24121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23755,
											"end": 24121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23755,
											"end": 24121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24127,
											"end": 24546,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 24127,
											"end": 24546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24293,
											"end": 24297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24331,
											"end": 24333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24320,
											"end": 24329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24316,
											"end": 24334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24308,
											"end": 24334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24308,
											"end": 24334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24380,
											"end": 24389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24374,
											"end": 24378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24370,
											"end": 24390,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24366,
											"end": 24367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24355,
											"end": 24364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24351,
											"end": 24368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24344,
											"end": 24391,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24408,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 24534,
											"end": 24538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24408,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 24408,
											"end": 24539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24408,
											"end": 24539,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 24408,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24400,
											"end": 24539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24400,
											"end": 24539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24127,
											"end": 24546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24127,
											"end": 24546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24127,
											"end": 24546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24127,
											"end": 24546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24552,
											"end": 24777,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 24552,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24692,
											"end": 24726,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24688,
											"end": 24689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24680,
											"end": 24686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24676,
											"end": 24690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24669,
											"end": 24727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24761,
											"end": 24769,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24756,
											"end": 24758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24748,
											"end": 24754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24744,
											"end": 24759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24737,
											"end": 24770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24552,
											"end": 24777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24552,
											"end": 24777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 25149,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 24783,
											"end": 25149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24925,
											"end": 24928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24946,
											"end": 25013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 25010,
											"end": 25012,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 25005,
											"end": 25008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24946,
											"end": 25013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 24946,
											"end": 25013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24946,
											"end": 25013,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 24946,
											"end": 25013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24939,
											"end": 25013,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24939,
											"end": 25013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 25111,
											"end": 25114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 25022,
											"end": 25115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 25022,
											"end": 25115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25140,
											"end": 25142,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25135,
											"end": 25138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25131,
											"end": 25143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25124,
											"end": 25143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25124,
											"end": 25143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 25149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 25149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 25149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 25149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25155,
											"end": 25574,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 25155,
											"end": 25574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25321,
											"end": 25325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25359,
											"end": 25361,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25348,
											"end": 25357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25344,
											"end": 25362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25336,
											"end": 25362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25336,
											"end": 25362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25408,
											"end": 25417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25402,
											"end": 25406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25394,
											"end": 25395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25383,
											"end": 25392,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25379,
											"end": 25396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25372,
											"end": 25419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25436,
											"end": 25567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 25562,
											"end": 25566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25436,
											"end": 25567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 25436,
											"end": 25567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25436,
											"end": 25567,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 25436,
											"end": 25567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25428,
											"end": 25567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25428,
											"end": 25567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25155,
											"end": 25574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25155,
											"end": 25574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25155,
											"end": 25574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25155,
											"end": 25574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25580,
											"end": 25678,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 25580,
											"end": 25678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25631,
											"end": 25637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25659,
											"end": 25671,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25649,
											"end": 25671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25649,
											"end": 25671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25580,
											"end": 25678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25580,
											"end": 25678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25580,
											"end": 25678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25580,
											"end": 25678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25785,
											"end": 25796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25822,
											"end": 25825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25807,
											"end": 25825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25807,
											"end": 25825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25684,
											"end": 25831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25837,
											"end": 26083,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 25837,
											"end": 26083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25918,
											"end": 25919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25942,
											"end": 25948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25939,
											"end": 25940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 25949,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26027,
											"end": 26028,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26022,
											"end": 26025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26018,
											"end": 26029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26012,
											"end": 26030,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 26008,
											"end": 26009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26003,
											"end": 26006,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25999,
											"end": 26010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25992,
											"end": 26031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25964,
											"end": 25966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25961,
											"end": 25962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25957,
											"end": 25967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25952,
											"end": 25967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25952,
											"end": 25967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 25928,
											"end": 26041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26075,
											"end": 26076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26066,
											"end": 26072,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26061,
											"end": 26064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26050,
											"end": 26077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25899,
											"end": 26083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25837,
											"end": 26083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25837,
											"end": 26083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25837,
											"end": 26083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25837,
											"end": 26083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26193,
											"end": 26196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26221,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 26253,
											"end": 26258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26221,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 26221,
											"end": 26259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26221,
											"end": 26259,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 26221,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26275,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 26356,
											"end": 26362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26351,
											"end": 26354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26275,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 26275,
											"end": 26363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26275,
											"end": 26363,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 26275,
											"end": 26363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26268,
											"end": 26363,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26268,
											"end": 26363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26372,
											"end": 26437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 26430,
											"end": 26436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26425,
											"end": 26428,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26418,
											"end": 26422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26411,
											"end": 26416,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26407,
											"end": 26423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26372,
											"end": 26437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 26372,
											"end": 26437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26372,
											"end": 26437,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 26372,
											"end": 26437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26462,
											"end": 26468,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26457,
											"end": 26460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26453,
											"end": 26469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26446,
											"end": 26469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26446,
											"end": 26469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26197,
											"end": 26475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26089,
											"end": 26475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26611,
											"end": 26614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26633,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 26722,
											"end": 26725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26713,
											"end": 26719,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26633,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 26633,
											"end": 26726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26633,
											"end": 26726,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 26633,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26626,
											"end": 26726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26626,
											"end": 26726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26743,
											"end": 26746,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26736,
											"end": 26746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26736,
											"end": 26746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26758,
											"end": 26937,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 26758,
											"end": 26937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26898,
											"end": 26929,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 26894,
											"end": 26895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26886,
											"end": 26892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26882,
											"end": 26896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26875,
											"end": 26930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26758,
											"end": 26937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26758,
											"end": 26937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26943,
											"end": 27309,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 26943,
											"end": 27309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27085,
											"end": 27088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27106,
											"end": 27173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 27170,
											"end": 27172,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 27165,
											"end": 27168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27106,
											"end": 27173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 27106,
											"end": 27173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27106,
											"end": 27173,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 27106,
											"end": 27173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27099,
											"end": 27173,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27099,
											"end": 27173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27182,
											"end": 27275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 27271,
											"end": 27274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27182,
											"end": 27275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 27182,
											"end": 27275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27182,
											"end": 27275,
											"name": "tag",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 27182,
											"end": 27275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27300,
											"end": 27302,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27295,
											"end": 27298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27291,
											"end": 27303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27284,
											"end": 27303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27284,
											"end": 27303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26943,
											"end": 27309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26943,
											"end": 27309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26943,
											"end": 27309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26943,
											"end": 27309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27315,
											"end": 27734,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 27315,
											"end": 27734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27481,
											"end": 27485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27519,
											"end": 27521,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27508,
											"end": 27517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27504,
											"end": 27522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27496,
											"end": 27522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27496,
											"end": 27522,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27568,
											"end": 27577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27562,
											"end": 27566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27558,
											"end": 27578,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27554,
											"end": 27555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27543,
											"end": 27552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27539,
											"end": 27556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27532,
											"end": 27579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27596,
											"end": 27727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 27722,
											"end": 27726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27596,
											"end": 27727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 27596,
											"end": 27727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27596,
											"end": 27727,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 27596,
											"end": 27727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27588,
											"end": 27727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27588,
											"end": 27727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27315,
											"end": 27734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27315,
											"end": 27734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27315,
											"end": 27734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27315,
											"end": 27734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27740,
											"end": 27839,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 27740,
											"end": 27839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27792,
											"end": 27798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27826,
											"end": 27831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27820,
											"end": 27832,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27810,
											"end": 27832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27810,
											"end": 27832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27740,
											"end": 27839,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27740,
											"end": 27839,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27740,
											"end": 27839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27740,
											"end": 27839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27845,
											"end": 27947,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 27845,
											"end": 27947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27886,
											"end": 27892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27937,
											"end": 27939,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27933,
											"end": 27940,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 27928,
											"end": 27930,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27921,
											"end": 27926,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27917,
											"end": 27931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27913,
											"end": 27941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 27903,
											"end": 27941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27903,
											"end": 27941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27845,
											"end": 27947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27845,
											"end": 27947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27845,
											"end": 27947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27845,
											"end": 27947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28041,
											"end": 28044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28069,
											"end": 28108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 28102,
											"end": 28107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28069,
											"end": 28108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 28069,
											"end": 28108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28069,
											"end": 28108,
											"name": "tag",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 28069,
											"end": 28108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28124,
											"end": 28195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 28188,
											"end": 28194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28183,
											"end": 28186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28124,
											"end": 28195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 28124,
											"end": 28195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28124,
											"end": 28195,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 28124,
											"end": 28195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28117,
											"end": 28195,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 28117,
											"end": 28195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28204,
											"end": 28269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 28262,
											"end": 28268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28257,
											"end": 28260,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28250,
											"end": 28254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28243,
											"end": 28248,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28239,
											"end": 28255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28204,
											"end": 28269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 28204,
											"end": 28269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28204,
											"end": 28269,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 28204,
											"end": 28269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28294,
											"end": 28323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 28316,
											"end": 28322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28294,
											"end": 28323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 28294,
											"end": 28323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28294,
											"end": 28323,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 28294,
											"end": 28323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28289,
											"end": 28292,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28285,
											"end": 28324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28278,
											"end": 28324,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28278,
											"end": 28324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28045,
											"end": 28330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27953,
											"end": 28330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28449,
											"end": 28453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28487,
											"end": 28489,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28476,
											"end": 28485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28472,
											"end": 28490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28464,
											"end": 28490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28464,
											"end": 28490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28536,
											"end": 28545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28530,
											"end": 28534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28526,
											"end": 28546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28522,
											"end": 28523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28511,
											"end": 28520,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28507,
											"end": 28524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28500,
											"end": 28547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28564,
											"end": 28642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 28637,
											"end": 28641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28628,
											"end": 28634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28564,
											"end": 28642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 28564,
											"end": 28642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28564,
											"end": 28642,
											"name": "tag",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 28564,
											"end": 28642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28556,
											"end": 28642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28556,
											"end": 28642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28336,
											"end": 28649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addWhiteListedToken(address,uint256)": "444ad5ee",
							"buyToken(address,uint256)": "68f8fc10",
							"getTokenAmount(address,uint256)": "115ece4c",
							"maxBuyLimit()": "6aa5b37f",
							"minBuyLimit()": "b81df742",
							"owner()": "8da5cb5b",
							"presaleEndTime()": "249b7c19",
							"presaleStartTime()": "a82524b2",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"saleToken()": "e985e367",
							"saleTokenDec()": "ace1741c",
							"setMaxBuyLimit(uint256)": "757765f8",
							"setMinBuyLimit(uint256)": "99b77032",
							"setSaleTokenParams(address,uint256)": "89e6ce1e",
							"startAndSetPresaleEndTime(uint256)": "5b10bd6a",
							"tokenPrices(address)": "204120bc",
							"tokenWL(address)": "8ce0b9d2",
							"totalTokensSold()": "63b20117",
							"totalTokensforSale()": "6bcedf9c",
							"transferOwnership(address)": "f2fde38b",
							"upateTime(uint256)": "0fabdd44",
							"updateEthRate(uint256)": "3f6f7ed6",
							"updateTokenRate(address,uint256)": "226ac321",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawAll(address)": "fa09e630",
							"withdrawAllSaleToken()": "fb00f3fc",
							"withdrawCurrency(uint256)": "3c00a36c",
							"withdrawSaleToken(uint256)": "ded441c2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SaleTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensBought\",\"type\":\"uint256\"}],\"name\":\"TokensBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addWhiteListedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTokenDec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBuyLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBuyLimit\",\"type\":\"uint256\"}],\"name\":\"setMinBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensforSale\",\"type\":\"uint256\"}],\"name\":\"setSaleTokenParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_presaleEndTime\",\"type\":\"uint256\"}],\"name\":\"startAndSetPresaleEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensforSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_presaleEndTime\",\"type\":\"uint256\"}],\"name\":\"upateTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updateEthRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateTokenRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllSaleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawSaleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/preSale.sol\":\"Presale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/preSale.sol\":{\"keccak256\":\"0x0fd44577401c1956d774e8aa0c7603db12aad8c24503a06fe7de7ae721312007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b944b7950f8f47b06fb9aa06cddd56c76df44376199561adef59d11e35327da3\",\"dweb:/ipfs/QmPSTwEjJ3wgu8QxiUu8i4yCDqYuqvtkp8PtrfVzJQDtQz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/preSale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 996,
								"contract": "contracts/preSale.sol:Presale",
								"label": "rate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/preSale.sol:Presale",
								"label": "saleToken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1000,
								"contract": "contracts/preSale.sol:Presale",
								"label": "saleTokenDec",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1002,
								"contract": "contracts/preSale.sol:Presale",
								"label": "totalTokensforSale",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1004,
								"contract": "contracts/preSale.sol:Presale",
								"label": "maxBuyLimit",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1006,
								"contract": "contracts/preSale.sol:Presale",
								"label": "minBuyLimit",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1010,
								"contract": "contracts/preSale.sol:Presale",
								"label": "tokenWL",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1014,
								"contract": "contracts/preSale.sol:Presale",
								"label": "tokenPrices",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1016,
								"contract": "contracts/preSale.sol:Presale",
								"label": "presaleStartTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1018,
								"contract": "contracts/preSale.sol:Presale",
								"label": "presaleEndTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1020,
								"contract": "contracts/preSale.sol:Presale",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 980,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								979
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 191,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 195,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "305:6:2"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215,
								190
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 215,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 215,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 215,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1503:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1528:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1551:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1577:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 228,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1594:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1613:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:3"
									},
									"scope": 251,
									"src": "1455:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1959:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1997:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:3"
									},
									"scope": 251,
									"src": "1943:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2249:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:3"
									},
									"scope": 251,
									"src": "2198:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "629:1631:3",
							"usedErrors": []
						}
					],
					"src": "123:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							957
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							251
						],
						"SafeERC20": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 191,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 252,
							"src": "164:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 958,
							"src": "205:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 260,
									"libraryName": {
										"id": 258,
										"name": "Address",
										"nameLocations": [
											"731:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "731:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:4",
									"typeName": {
										"id": 259,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1013:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1043:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 275,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 264,
																			"src": "1073:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "1073:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1098:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1102:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 273,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 271,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1023:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:4"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 262,
														"name": "IERC20",
														"nameLocations": [
															"963:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "963:6:4"
													},
													"referencedDeclaration": 190,
													"src": "963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "977:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:4"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:4"
									},
									"scope": 627,
									"src": "941:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1445:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1475:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 301,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "1505:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1505:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 304,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "1534:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 305,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "1540:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 306,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "1544:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 299,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 297,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "1455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:4"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1381:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1381:6:4"
													},
													"referencedDeclaration": 190,
													"src": "1381:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1395:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:4"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:4"
									},
									"scope": 627,
									"src": "1355:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1894:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "2143:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 331,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$627",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$627",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 329,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 333,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "2190:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 327,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 315,
																					"src": "2159:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "2159:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 337,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 346,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "2344:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2344:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 349,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "2368:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "2377:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 344,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 342,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2294:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:4"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1839:6:4"
													},
													"referencedDeclaration": 190,
													"src": "1839:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1853:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1870:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:4"
									},
									"scope": 627,
									"src": "1818:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "2668:194:4",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "2678:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$627",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$627",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2701:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2701:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2770:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 381,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "2800:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2800:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 384,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "2824:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 385,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "2833:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 386,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "2848:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2750:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:4"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2613:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2613:6:4"
													},
													"referencedDeclaration": 190,
													"src": "2613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2627:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2644:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:4"
									},
									"scope": 627,
									"src": "2582:280:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3139:321:4",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:4",
												"statements": [
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 435,
																"src": "3173:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 413,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$627",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$627",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 411,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "3227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 405,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "3196:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "3196:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "3257:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 416,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3273:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 414,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 422,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "3358:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 425,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "3388:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "3388:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 428,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "3412:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 429,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 404,
																				"src": "3421:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 430,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 400,
																				"src": "3436:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 423,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 421,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "3338:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3084:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3084:6:4"
													},
													"referencedDeclaration": 190,
													"src": "3084:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3098:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3115:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:4"
									},
									"scope": 627,
									"src": "3053:407:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3856:333:4",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3866:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 448,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 452,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "3917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:4",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 177,
																"src": "3917:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 455,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 450,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:4",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:4"
											},
											{
												"condition": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 460,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "3996:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 461,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "4003:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 459,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3972:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "3967:216:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "4018:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4052:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 468,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 441,
																						"src": "4082:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$190",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:4",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 177,
																					"src": "4082:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:4",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 471,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "4106:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 466,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:4",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 464,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4032:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4152:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 478,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "4159:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 476,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4132:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3801:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 439,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3801:6:4"
													},
													"referencedDeclaration": 190,
													"src": "3801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3815:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3832:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:4"
									},
									"scope": 627,
									"src": "3779:410:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "4556:257:4",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4566:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 244,
														"src": "4588:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4637:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4646:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 518,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4653:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 519,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4663:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 520,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4666:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 521,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4669:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 512,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4617:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 236,
														"src": "4617:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:4"
											},
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "4681:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [
														{
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4715:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$251",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 244,
														"src": "4702:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "4739:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 533,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "4753:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:4"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:4",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4370:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$251",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 251,
														"src": "4370:12:4"
													},
													"referencedDeclaration": 251,
													"src": "4370:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$251",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4398:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4469:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 497,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4512:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4531:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 501,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:4"
									},
									"scope": 627,
									"src": "4341:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5266:572:4",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "5615:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"arguments": [
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5669:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 554,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "5649:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 717,
														"src": "5641:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "5728:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "5765:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 569,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 566,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:4",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5225:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 543,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "5225:6:4"
													},
													"referencedDeclaration": 190,
													"src": "5225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5239:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:4"
									},
									"scope": 627,
									"src": "5196:642:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "6428:505:4",
										"statements": [
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "6724:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "6738:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"arguments": [
														{
															"id": 598,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "6785:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "6773:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6819:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 602,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "6831:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 608,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "6868:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 609,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 611,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 606,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 620,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "6919:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 618,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 616,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "6892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$957_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:4",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "6892:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 588,
												"id": 624,
												"nodeType": "Return",
												"src": "6800:126:4"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6372:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 580,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "6372:6:4"
													},
													"referencedDeclaration": 190,
													"src": "6372:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6386:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6422:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:4"
									},
									"scope": 627,
									"src": "6339:594:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 628,
							"src": "701:6234:4",
							"usedErrors": []
						}
					],
					"src": "115:6821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							957
						]
					},
					"id": 958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 638,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 637,
												"id": 643,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 957,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 656,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		],
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 654,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													665,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 664,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 672,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 666,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 668,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 957,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 689,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 688,
												"id": 695,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 957,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 708,
												"id": 715,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 957,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															781
														],
														"referencedDeclaration": 781,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 728,
												"id": 735,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 957,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$957",
																				"typeString": "library Address"
																			}
																		],
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													763,
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 762,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"id": 770,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 766,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 768,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 776,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 777,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 773,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 750,
												"id": 779,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 957,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 791,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															827
														],
														"referencedDeclaration": 827,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 790,
												"id": 796,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 957,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													811,
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 810,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 812,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"arguments": [
														{
															"id": 816,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 822,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 823,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 819,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 809,
												"id": 825,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 957,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 837,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															844,
															873
														],
														"referencedDeclaration": 873,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 836,
												"id": 842,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 957,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													857,
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 856,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 858,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"id": 862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 868,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 869,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 865,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 855,
												"id": 871,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 957,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 887,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 878,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 906,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 904,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 888,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 894,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 876,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 893,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 645,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 892,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 901,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 886,
															"id": 902,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 957,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 924,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 929,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 930,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 928,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 925,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 923,
															"id": 926,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 957,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 943,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 949,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 938,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 938,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 947,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 957,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 958,
							"src": "194:9169:5",
							"usedErrors": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 960,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 965,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 964,
												"id": 967,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 979,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 973,
												"id": 976,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 979,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/preSale.sol": {
				"ast": {
					"absolutePath": "contracts/preSale.sol",
					"exportedSymbols": {
						"Address": [
							957
						],
						"Context": [
							979
						],
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						],
						"IERC20Permit": [
							251
						],
						"Ownable": [
							112
						],
						"Presale": [
							1605
						],
						"SafeERC20": [
							627
						]
					},
					"id": 1606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1606,
							"sourceUnit": 628,
							"src": "66:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1606,
							"sourceUnit": 216,
							"src": "132:75:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1606,
							"sourceUnit": 113,
							"src": "208:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "Ownable",
										"nameLocations": [
											"282:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "282:7:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "282:7:7"
								}
							],
							"canonicalName": "Presale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1605,
							"linearizedBaseContracts": [
								1605,
								112,
								979
							],
							"name": "Presale",
							"nameLocation": "271:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 990,
									"libraryName": {
										"id": 987,
										"name": "SafeERC20",
										"nameLocations": [
											"302:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "302:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "296:27:7",
									"typeName": {
										"id": 989,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 988,
											"name": "IERC20",
											"nameLocations": [
												"316:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "316:6:7"
										},
										"referencedDeclaration": 190,
										"src": "316:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 994,
									"libraryName": {
										"id": 991,
										"name": "SafeERC20",
										"nameLocations": [
											"334:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "334:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "328:35:7",
									"typeName": {
										"id": 993,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 992,
											"name": "IERC20Metadata",
											"nameLocations": [
												"348:14:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 215,
											"src": "348:14:7"
										},
										"referencedDeclaration": 215,
										"src": "348:14:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$215",
											"typeString": "contract IERC20Metadata"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 996,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "384:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "369:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e985e367",
									"id": 998,
									"mutability": "mutable",
									"name": "saleToken",
									"nameLocation": "439:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "424:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 997,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ace1741c",
									"id": 1000,
									"mutability": "mutable",
									"name": "saleTokenDec",
									"nameLocation": "466:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "454:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 999,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "454:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6bcedf9c",
									"id": 1002,
									"mutability": "mutable",
									"name": "totalTokensforSale",
									"nameLocation": "499:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "484:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1001,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa5b37f",
									"id": 1004,
									"mutability": "mutable",
									"name": "maxBuyLimit",
									"nameLocation": "538:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "523:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b81df742",
									"id": 1006,
									"mutability": "mutable",
									"name": "minBuyLimit",
									"nameLocation": "570:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "555:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ce0b9d2",
									"id": 1010,
									"mutability": "mutable",
									"name": "tokenWL",
									"nameLocation": "619:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "587:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1009,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1007,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "595:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "587:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1008,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "606:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "204120bc",
									"id": 1014,
									"mutability": "mutable",
									"name": "tokenPrices",
									"nameLocation": "667:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "632:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "640:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "632:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "651:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a82524b2",
									"id": 1016,
									"mutability": "mutable",
									"name": "presaleStartTime",
									"nameLocation": "737:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "722:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "249b7c19",
									"id": 1018,
									"mutability": "mutable",
									"name": "presaleEndTime",
									"nameLocation": "774:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "759:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 1020,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "810:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "795:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1019,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "795:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c",
									"id": 1026,
									"name": "TokenAdded",
									"nameLocation": "838:10:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "849:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "872:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "864:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:30:7"
									},
									"src": "832:47:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c2d539e6a806d81b0892f23b002d25b825425d13a98bb6f486438b6b7bc0ce3a",
									"id": 1032,
									"name": "TokenUpdated",
									"nameLocation": "890:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "911:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "903:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "926:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "918:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:30:7"
									},
									"src": "884:49:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c244d500136edffae7025aaf7fbd7a07193ac544a1d0cc3132cf2a32452d340c",
									"id": 1042,
									"name": "TokensBought",
									"nameLocation": "944:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "982:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "966:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1013:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "997:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1036:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1028:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensBought",
												"nameLocation": "1060:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1052:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:122:7"
									},
									"src": "938:141:7"
								},
								{
									"anonymous": false,
									"eventSelector": "03211f0a57d24f0b52e2e0573af5be089c5faadeb55f9b90591717b0a22f7e2a",
									"id": 1048,
									"name": "SaleTokenAdded",
									"nameLocation": "1090:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1105:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1128:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1120:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:31:7"
									},
									"src": "1084:52:7"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1156:2:7",
										"statements": []
									},
									"id": 1052,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:7"
									},
									"scope": 1605,
									"src": "1142:16:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1198:132:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1229:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1229:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f74207374617274656420796574",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1264:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															},
															"value": "Presale: Presale has not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1208:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:104:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1208:104:7"
											},
											{
												"id": 1061,
												"nodeType": "PlaceholderStatement",
												"src": "1322:1:7"
											}
										]
									},
									"id": 1063,
									"name": "isPresaleHasNotStarted",
									"nameLocation": "1173:22:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:7"
									},
									"src": "1164:166:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1364:146:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1066,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1395:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1401:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1395:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1068,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1414:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1395:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f74207374617274656420796574",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1444:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															},
															"value": "Presale: Presale has not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_197bec4712830c9aa030e4758945248e8ced0e3346d8f29f61ac2adc12dee123",
																"typeString": "literal_string \"Presale: Presale has not started yet\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1374:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:118:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1374:118:7"
											},
											{
												"id": 1073,
												"nodeType": "PlaceholderStatement",
												"src": "1502:1:7"
											}
										]
									},
									"id": 1075,
									"name": "isPresaleStarted",
									"nameLocation": "1345:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:2:7"
									},
									"src": "1336:174:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1545:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1078,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1576:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1582:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1576:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1080,
																"name": "presaleEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "1594:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1576:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c652068617320656e646564",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																"typeString": "literal_string \"Presale: Presale has ended\""
															},
															"value": "Presale: Presale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4163a54adf1821260c250e23353c24c354d9631901f017d7172cf414dd30dd04",
																"typeString": "literal_string \"Presale: Presale has ended\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1555:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:105:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1555:105:7"
											},
											{
												"id": 1085,
												"nodeType": "PlaceholderStatement",
												"src": "1670:1:7"
											}
										]
									},
									"id": 1087,
									"name": "isPresaleNotEnded",
									"nameLocation": "1525:17:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:2:7"
									},
									"src": "1516:162:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "1710:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1090,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1741:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1747:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1741:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1092,
																"name": "presaleEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "1760:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1741:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2050726573616c6520686173206e6f7420656e64656420796574",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																"typeString": "literal_string \"Presale: Presale has not ended yet\""
															},
															"value": "Presale: Presale has not ended yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba5109ab30766c9e74d0b1ff8970bfb6751617a0b2ae5cacb2444d7e65ce4503",
																"typeString": "literal_string \"Presale: Presale has not ended yet\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1720:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1720:114:7"
											},
											{
												"id": 1097,
												"nodeType": "PlaceholderStatement",
												"src": "1844:1:7"
											}
										]
									},
									"id": 1099,
									"name": "isPresaleEnded",
									"nameLocation": "1693:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:7"
									},
									"src": "1684:168:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "1976:622:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "_saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2007:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2029:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2021:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2021:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2021:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2007:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2053616c6520746f6b656e2063616e6e6f74206265207a65726f2061646472657373",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2045:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																"typeString": "literal_string \"Presale: Sale token cannot be zero address\""
															},
															"value": "Presale: Sale token cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d509d67eca265e17d9077cefb73c3eabbdfe9669491f136f172ab5ec56a812c",
																"typeString": "literal_string \"Presale: Sale token cannot be zero address\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "1986:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "_totalTokensforSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "2130:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2152:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2130:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f74616c20746f6b656e7320666f722073616c652063616e6e6f74206265207a65726f",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																"typeString": "literal_string \"Presale: Total tokens for sale cannot be zero\""
															},
															"value": "Presale: Total tokens for sale cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7f0246986b44d9774bcc4431c9af2514ecc81f6712a2f06f52514701f9ddf69",
																"typeString": "literal_string \"Presale: Total tokens for sale cannot be zero\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2109:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2109:115:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2109:115:7"
											},
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2234:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1126,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "2246:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2234:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "2234:22:7"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1129,
														"name": "saleTokenDec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2266:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1131,
																		"name": "saleToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "2296:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2281:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$215_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2281:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$215",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2307:8:7",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 214,
															"src": "2281:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2281:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2266:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "2266:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2376:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2380:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2376:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1145,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2408:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2400:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1143,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2400:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2400:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "_totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2427:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1138,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "2335:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1137,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2328:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2328:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2346:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "2328:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:128:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2328:128:7"
											},
											{
												"expression": {
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2466:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1157,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2523:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$1605",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$1605",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2515:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1155,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2515:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2515:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "saleToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "2494:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1151,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "2487:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:9:7",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "2487:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2487:42:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2466:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "2466:63:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1163,
															"name": "_saleToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2559:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "_totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2571:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "SaleTokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "2544:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2544:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "EmitStatement",
												"src": "2539:52:7"
											}
										]
									},
									"functionSelector": "89e6ce1e",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"1966:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1966:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1966:9:7"
										}
									],
									"name": "setSaleTokenParams",
									"nameLocation": "1867:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "1903:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1895:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_totalTokensforSale",
												"nameLocation": "1931:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1923:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:71:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:7"
									},
									"scope": 1605,
									"src": "1858:740:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "2697:112:7",
										"statements": [
											{
												"expression": {
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "presaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2707:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1176,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2726:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2732:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2726:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2707:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "2707:34:7"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1180,
														"name": "presaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2751:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1181,
															"name": "presaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2768:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1182,
															"name": "_presaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2787:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2768:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2751:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2751:51:7"
											}
										]
									},
									"functionSelector": "5b10bd6a",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1172,
												"name": "onlyOwner",
												"nameLocations": [
													"2687:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2687:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2687:9:7"
										}
									],
									"name": "startAndSetPresaleEndTime",
									"nameLocation": "2613:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_presaleEndTime",
												"nameLocation": "2656:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2648:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:39:7"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2697:0:7"
									},
									"scope": 1605,
									"src": "2604:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "2892:67:7",
										"statements": [
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "presaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "2902:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1195,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2919:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2925:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2919:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1197,
															"name": "_presaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "2937:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2919:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2902:50:7"
											}
										]
									},
									"functionSelector": "0fabdd44",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1191,
												"name": "onlyOwner",
												"nameLocations": [
													"2882:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2882:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2882:9:7"
										}
									],
									"name": "upateTime",
									"nameLocation": "2824:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_presaleEndTime",
												"nameLocation": "2851:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2843:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2833:39:7"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:7"
									},
									"scope": 1605,
									"src": "2815:144:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "3067:118:7",
										"statements": [
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1211,
															"name": "tokenWL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "3077:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1212,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3085:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3077:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3095:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3077:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3077:22:7"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1217,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3109:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"id": 1218,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3121:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3109:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3131:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3109:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3109:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1224,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3163:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3171:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "TokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3152:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "3147:31:7"
											}
										]
									},
									"functionSelector": "444ad5ee",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyOwner",
												"nameLocations": [
													"3057:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3057:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3057:9:7"
										}
									],
									"name": "addWhiteListedToken",
									"nameLocation": "2974:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3011:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "3003:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3035:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "3027:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:54:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3067:0:7"
									},
									"scope": 1605,
									"src": "2965:220:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "3248:29:7",
										"statements": [
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3258:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3265:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3258:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "3258:12:7"
											}
										]
									},
									"functionSelector": "3f6f7ed6",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyOwner",
												"nameLocations": [
													"3238:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3238:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3238:9:7"
										}
									],
									"name": "updateEthRate",
									"nameLocation": "3200:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "3222:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3214:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:15:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3248:0:7"
									},
									"scope": 1605,
									"src": "3191:86:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "3381:156:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1251,
																"name": "tokenWL",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "3399:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1253,
															"indexExpression": {
																"id": 1252,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "3407:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3399:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3416:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																"typeString": "literal_string \"Presale: Token not whitelisted\""
															},
															"value": "Presale: Token not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																"typeString": "literal_string \"Presale: Token not whitelisted\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3391:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3391:58:7"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "tokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "3459:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1259,
														"indexExpression": {
															"id": 1258,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "3471:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3459:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "3481:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3459:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "3459:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1264,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "3515:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "3523:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "TokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3502:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3502:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "EmitStatement",
												"src": "3497:33:7"
											}
										]
									},
									"functionSelector": "226ac321",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "onlyOwner",
												"nameLocations": [
													"3371:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3371:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3371:9:7"
										}
									],
									"name": "updateTokenRate",
									"nameLocation": "3292:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3325:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3317:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3349:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3341:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:54:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:0:7"
									},
									"scope": 1605,
									"src": "3283:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "3652:438:7",
										"statements": [
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "amtOut",
														"nameLocation": "3670:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "3662:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3662:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"nodeType": "VariableDeclarationStatement",
												"src": "3662:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1281,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "3690:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3707:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3699:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3699:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3699:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3690:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1335,
													"nodeType": "Block",
													"src": "3939:122:7",
													"statements": [
														{
															"expression": {
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1317,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "3953:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1318,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "3962:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3970:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3962:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4049:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3962:88:7",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1321,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "3991:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1322,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4001:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"id": 1323,
																									"name": "saleTokenDec",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1000,
																									"src": "4007:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4001:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1325,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4000:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3991:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1327,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3990:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"id": 1328,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "4025:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1329,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4024:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3990:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3953:97:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "3953:97:7"
														}
													]
												},
												"id": 1336,
												"nodeType": "IfStatement",
												"src": "3686:375:7",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "3711:222:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1288,
																			"name": "tokenWL",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "3733:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1290,
																		"indexExpression": {
																			"id": 1289,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "3741:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3733:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3749:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		},
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		}
																	],
																	"id": 1287,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3725:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3725:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1293,
															"nodeType": "ExpressionStatement",
															"src": "3725:57:7"
														},
														{
															"expression": {
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1294,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "3797:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1295,
																				"name": "tokenPrices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "3806:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1297,
																			"indexExpression": {
																				"id": 1296,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1271,
																				"src": "3818:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3806:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3828:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3806:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3921:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3806:116:7",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1300,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "3849:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1303,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3859:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"id": 1302,
																									"name": "saleTokenDec",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1000,
																									"src": "3865:12:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3859:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1304,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3858:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3849:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1306,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3848:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"baseExpression": {
																						"id": 1307,
																						"name": "tokenPrices",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1014,
																						"src": "3883:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1309,
																					"indexExpression": {
																						"id": 1308,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1271,
																						"src": "3895:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3883:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1310,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3882:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3848:54:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3797:125:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "3797:125:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1337,
													"name": "amtOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1279,
													"src": "4077:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1338,
												"nodeType": "Return",
												"src": "4070:13:7"
											}
										]
									},
									"functionSelector": "115ece4c",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmount",
									"nameLocation": "3554:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3586:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3578:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3578:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3609:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3601:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:53:7"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3643:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:7"
									},
									"scope": 1605,
									"src": "3545:545:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "4221:957:7",
										"statements": [
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "saleTokenAmt",
														"nameLocation": "4240:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4232:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4232:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1353,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4273:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4265:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4265:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4265:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4255:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4359:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4351:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4351:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4363:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4367:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4363:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1363,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4336:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4336:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4255:118:7",
													"trueExpression": {
														"arguments": [
															{
																"id": 1360,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "4305:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1361,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "4313:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1359,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "4290:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4290:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4232:141:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1374,
																			"name": "totalTokensSold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "4406:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1375,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4424:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4406:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4405:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1378,
																"name": "totalTokensforSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "4441:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4405:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20546f74616c20546f6b656e2053616c65205265616368656421",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4473:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																"typeString": "literal_string \"Presale: Total Token Sale Reached!\""
															},
															"value": "Presale: Total Token Sale Reached!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3f955b12c5ad89c72dda11573bd59fe3e106048834454f393afc38f92508e0",
																"typeString": "literal_string \"Presale: Total Token Sale Reached!\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4384:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:135:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4384:135:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "4534:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4552:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4544:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4544:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4544:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4534:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "4738:323:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1407,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4760:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1408,
																			"name": "minBuyLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "4776:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4760:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e742062656c6f77206d696e20627579206c696d6974",
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4789:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																			"typeString": "literal_string \"Presale: Amount below min buy limit\""
																		},
																		"value": "Presale: Amount below min buy limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_af99674c40cc573deea97801193d51bdbaf3fc2843a35eb26c91dad5c0a4287e",
																			"typeString": "literal_string \"Presale: Amount below min buy limit\""
																		}
																	],
																	"id": 1406,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4752:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4752:75:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "4752:75:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1414,
																			"name": "tokenWL",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "4849:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1416,
																		"indexExpression": {
																			"id": 1415,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "4857:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4849:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f742077686974656c6973746564",
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4866:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		},
																		"value": "Presale: Token not whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7053b91df28086f258c254ae31ccae83b5bd6515f433c74994fd409d1b620b3",
																			"typeString": "literal_string \"Presale: Token not whitelisted\""
																		}
																	],
																	"id": 1413,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4841:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4841:58:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "4841:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1424,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4945:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4949:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4945:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1428,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4965:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Presale_$1605",
																					"typeString": "contract Presale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Presale_$1605",
																					"typeString": "contract Presale"
																				}
																			],
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4957:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1426,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4957:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4957:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1430,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "4972:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1421,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "4920:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1420,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4913:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4913:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4928:16:7",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "4913:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4913:67:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "4913:67:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1437,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5025:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5029:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5025:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1439,
																		"name": "saleTokenAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "5037:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1434,
																				"name": "saleToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "5001:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1433,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4994:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4994:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5012:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "4994:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4994:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "4994:56:7"
														}
													]
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "4530:531:7",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "4556:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1390,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "4578:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1391,
																			"name": "minBuyLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "4594:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4578:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e20616d6f756e742062656c6f77206d696e20627579206c696d6974",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4607:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																			"typeString": "literal_string \"Presale: Token amount below min buy limit\""
																		},
																		"value": "Presale: Token amount below min buy limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8557eaa28f6e353dbcdb8d1cb7d5989173f87bf26b1fc4234d8de7c1e56aff8f",
																			"typeString": "literal_string \"Presale: Token amount below min buy limit\""
																		}
																	],
																	"id": 1389,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4570:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4570:81:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1395,
															"nodeType": "ExpressionStatement",
															"src": "4570:81:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1400,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4696:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4700:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4696:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1402,
																		"name": "saleTokenAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "4708:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1397,
																				"name": "saleToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "4672:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1396,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4665:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4683:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "4665:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4665:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "4665:56:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "5070:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1445,
														"name": "saleTokenAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "5089:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5070:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "5070:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5129:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5133:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5129:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5149:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1453,
															"name": "saleTokenAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "TokensBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5116:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5116:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "5111:60:7"
											}
										]
									},
									"functionSelector": "68f8fc10",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "isPresaleStarted",
												"nameLocations": [
													"4186:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1075,
												"src": "4186:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4186:16:7"
										},
										{
											"id": 1349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1348,
												"name": "isPresaleNotEnded",
												"nameLocations": [
													"4203:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1087,
												"src": "4203:17:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4203:17:7"
										}
									],
									"name": "buyToken",
									"nameLocation": "4105:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4131:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4123:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4155:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4147:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4113:55:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4221:0:7"
									},
									"scope": 1605,
									"src": "4096:1082:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "5249:43:7",
										"statements": [
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "minBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5259:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1465,
														"name": "_minBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "5273:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5259:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "5259:26:7"
											}
										]
									},
									"functionSelector": "99b77032",
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1462,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1461,
												"name": "onlyOwner",
												"nameLocations": [
													"5239:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5239:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5239:9:7"
										}
									],
									"name": "setMinBuyLimit",
									"nameLocation": "5193:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_minBuyLimit",
												"nameLocation": "5216:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5208:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:22:7"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5249:0:7"
									},
									"scope": 1605,
									"src": "5184:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5363:43:7",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "maxBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5373:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1477,
														"name": "_maxBuyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "5387:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5373:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "5373:26:7"
											}
										]
									},
									"functionSelector": "757765f8",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "onlyOwner",
												"nameLocations": [
													"5353:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5353:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5353:9:7"
										}
									],
									"name": "setMaxBuyLimit",
									"nameLocation": "5307:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "_maxBuyLimit",
												"nameLocation": "5330:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5322:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:22:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5363:0:7"
									},
									"scope": 1605,
									"src": "5298:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "5541:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5582:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5586:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5582:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5594:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1491,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5558:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1490,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5551:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5551:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5569:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "5551:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5551:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "5551:51:7"
											}
										]
									},
									"functionSelector": "ded441c2",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "onlyOwner",
												"nameLocations": [
													"5516:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5516:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5516:9:7"
										},
										{
											"id": 1488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1487,
												"name": "isPresaleEnded",
												"nameLocations": [
													"5526:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "5526:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5526:14:7"
										}
									],
									"name": "withdrawSaleToken",
									"nameLocation": "5472:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5498:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5490:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5489:17:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:0:7"
									},
									"scope": 1605,
									"src": "5463:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5746:130:7",
										"statements": [
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "5764:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5756:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5756:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1515,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5806:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5798:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1513,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5798:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5798:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1510,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5777:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1509,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5770:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5770:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5788:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "5770:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5770:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5756:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5853:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5857:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "5865:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1520,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5829:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1519,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5822:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5822:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5840:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "5822:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5822:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "5822:47:7"
											}
										]
									},
									"functionSelector": "fb00f3fc",
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "onlyOwner",
												"nameLocations": [
													"5721:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5721:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5721:9:7"
										},
										{
											"id": 1505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1504,
												"name": "isPresaleEnded",
												"nameLocations": [
													"5731:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "5731:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5731:14:7"
										}
									],
									"name": "withdrawAllSaleToken",
									"nameLocation": "5689:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5709:2:7"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5746:0:7"
									},
									"scope": 1605,
									"src": "5680:196:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "6008:186:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6026:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1540,
																"name": "saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "6035:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6026:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f6b656e20776974682074686973206d6574686f642c2075736520776974686472617753616c65546f6b656e282920696e7374656164",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6046:87:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\""
															},
															"value": "Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3676245fd5d3c07601e3676e2bd1200fea321b0becb81c0e8d999ac5198fa75d",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawSaleToken() instead\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6018:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "6018:116:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6171:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6175:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6171:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "6183:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "6151:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1545,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6144:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6144:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6158:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "6144:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6144:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "6144:43:7"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1536,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1535,
												"name": "onlyOwner",
												"nameLocations": [
													"5998:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5998:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5998:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "5952:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5969:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "5961:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "5984:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "5976:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:28:7"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6008:0:7"
									},
									"scope": 1605,
									"src": "5943:251:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "6256:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1563,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "6274:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1564,
																"name": "saleToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "6283:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6274:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2043616e6e6f742077697468647261772073616c6520746f6b656e20776974682074686973206d6574686f642c20757365207769746864726177416c6c53616c65546f6b656e282920696e7374656164",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6294:90:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\""
															},
															"value": "Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77f7241f8b126cce6939ab47774a2fbf334a1eddfd7de4ee0ebbd41e3618452f",
																"typeString": "literal_string \"Presale: Cannot withdraw sale token with this method, use withdrawAllSaleToken() instead\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:119:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "6266:119:7"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "6403:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "6395:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6395:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6441:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1605",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6433:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6433:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "6416:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1571,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "6409:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6423:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "6409:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6409:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6395:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1582,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "6466:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1583,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "6473:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1581,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "6457:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "6457:20:7"
											}
										]
									},
									"functionSelector": "fa09e630",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1560,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1559,
												"name": "onlyOwner",
												"nameLocations": [
													"6246:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6246:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6246:9:7"
										}
									],
									"name": "withdrawAll",
									"nameLocation": "6210:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6230:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "6222:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6221:15:7"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:7"
									},
									"scope": 1605,
									"src": "6201:283:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "6591:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1600,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6630:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1596,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6609:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6613:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6609:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6601:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6601:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6601:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6621:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6601:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6601:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "6601:33:7"
											}
										]
									},
									"functionSelector": "3c00a36c",
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1591,
												"name": "onlyOwner",
												"nameLocations": [
													"6581:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6581:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6581:9:7"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "6542:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "6567:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "6559:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6559:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6558:13:7"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6591:0:7"
									},
									"scope": 1605,
									"src": "6533:108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1606,
							"src": "262:6381:7",
							"usedErrors": []
						}
					],
					"src": "41:6602:7"
				},
				"id": 7
			}
		}
	}
}